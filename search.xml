<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Project Exercise — Build a Personal Portfolio Webpage</title>
    <url>/project-exercise-%E2%80%94-build-a-personal-portfolio-webpage/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h5 id="Build-a-Personal-Portfolio-Webpage-——-Test"><a href="#Build-a-Personal-Portfolio-Webpage-——-Test" class="headerlink" title="Build a Personal Portfolio Webpage —— Test"></a>Build a Personal Portfolio Webpage —— Test</h5><h4 id="Objective"><a href="#Objective" class="headerlink" title="Objective:"></a>Objective:</h4><blockquote>
<p>Build an app that is functionally similar to <a href="https://personal-portfolio.freecodecamp.rocks/">https://personal-portfolio.freecodecamp.rocks</a></p>
</blockquote>
<span id="more"></span>

<p><strong>User Stories:</strong></p>
<ol>
<li>Your portfolio should have a welcome section with an <code>id</code> of <code>welcome-section</code></li>
<li>The welcome section should have an <code>h1</code> element that contains text</li>
<li>Your portfolio should have a projects section with an <code>id</code> of <code>projects</code></li>
<li>The projects section should contain at least one element with a <code>class</code> of <code>project-tile</code> to hold a project</li>
<li>The projects section should contain at least one link to a project</li>
<li>Your portfolio should have a navbar with an id of <code>navbar</code></li>
<li>The navbar should contain at least one link that you can click on to navigate to different sections of the page</li>
<li>Your portfolio should have a link with an id of <code>profile-link</code>, which opens your GitHub or freeCodeCamp profile in a new tab</li>
<li>Your portfolio should have at least one media query</li>
<li>The height of the welcome section should be equal to the height of the viewport</li>
<li>The navbar should always be at the top of the viewport</li>
</ol>
<p>Fulfill the user stories and pass all the tests below to complete this project. Give it your own personal style. Happy Coding!</p>
<p><strong>Note:</strong> Be sure to add <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;</code> in your HTML to link your stylesheet and apply your CSS</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">&quot;welcome-section&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">&quot;navbar&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#projects&quot;</span>&gt;</span>xiangmu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;projects&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;project-tile&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>a<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;project-tile&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;project-tile&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;profile-link&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">75em</span>) &#123;</span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#navbar</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完善并作为博客的一页！！！！！！！！！！！</p>
]]></content>
      <categories>
        <category>Project Exercise</category>
        <category>Primary Program</category>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>Project Exercise</tag>
      </tags>
  </entry>
  <entry>
    <title>Algorithm——LinkedList</title>
    <url>/algorithm%E2%80%94%E2%80%94linkedlist/</url>
    <content><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="1-理论基础"><a href="#1-理论基础" class="headerlink" title="1.理论基础"></a>1.理论基础</h2><p>链表是一种通过指针串联在一起的线性结构，每一个节点由两部构成</p>
<ul>
<li><p>一个是数据域</p>
</li>
<li><p>一个是指针域（存放指向下一个节点的指针）</p>
</li>
</ul>
<p>最后一个节点的指针域指向null（空指针）</p>
<p>链表的入口节点称为链表的头节点（head）</p>
<p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/%5Cimages%5C2023-05-30-11-19-15-image.png"></p>
<p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/dell\Documents\img\2023-05-30-11-19-15-image.png"></p>
<hr>
<h3 id="1-1-链表的类型"><a href="#1-1-链表的类型" class="headerlink" title="1.1 链表的类型"></a>1.1 链表的类型</h3><ul>
<li><p>单链表</p>
<ul>
<li>指针域只能指向节点的下一个节点</li>
</ul>
</li>
<li><p>双链表</p>
<ul>
<li><p>每一个节点有两个指针域，一个指向下一个节点，一个指向上一个节点</p>
</li>
<li><p>双链表既可以向前查询也可以向后查询)</p>
</li>
<li><p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/%5Cimages%5C2023-05-30-11-23-09-image.png"></p>
</li>
<li><p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/dell\Documents\img\2023-05-30-11-23-09-image.png"></p>
</li>
</ul>
</li>
<li><p>循环列表</p>
<ul>
<li><p>链表首尾相连</p>
</li>
<li><p>可以解决约瑟夫环问题</p>
</li>
<li><p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/%5Cimages%5C2023-05-30-11-24-37-image.png"></p>
</li>
<li><p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/dell\Documents\img\2023-05-30-11-24-37-image.png"></p>
</li>
</ul>
</li>
</ul>
<h3 id="1-2-链表的存储方式"><a href="#1-2-链表的存储方式" class="headerlink" title="1.2 链表的存储方式"></a>1.2 链表的存储方式</h3><p>链表在内存中不是连续分布的</p>
<p>链表是通过指针域的指针链接在内存中的各个节点，所以链表中的节点是散乱分布在内存中的某地址上，分配机制取决于操作系统的内存管理</p>
<h3 id="1-3-链表操作"><a href="#1-3-链表操作" class="headerlink" title="1.3 链表操作"></a>1.3 链表操作</h3><p><strong>删除节点</strong></p>
<p><img src="/images/2023-06-01-13-54-52-image.png"></p>
<p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/dell\Documents\img\2023-06-01-13-54-52-image.png"></p>
<p><strong>添加节点</strong></p>
<p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/dell\Documents\img\2023-06-01-13-56-12-image.png"></p>
<p><img src="/images/2023-06-01-13-56-12-image.png"></p>
<p>可以看出链表的增添和删除都是O(1)操作，也不会影响到其他节点。</p>
<p>但是要注意，要是删除第五个节点，需要从头节点查找到第四个节点通过next指针进行删除操作，查找的时间复杂度是O(n)。</p>
<p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/dell\Documents\img\2023-06-01-13-57-15-image.png"></p>
<p><img src="/images/2023-06-01-13-57-15-image.png"></p>
<hr>
<p><strong>链表定义</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line">  val;</span><br><span class="line">  next = <span class="literal">null</span>;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = value;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">next</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-移除链表元素"><a href="#2-移除链表元素" class="headerlink" title="2. 移除链表元素"></a>2. 移除链表元素</h2><p>203.给你一个链表的头节点 <code>head</code> 和一个整数 <code>val</code> ，请你删除链表中所有满足 <code>Node.val == val</code> 的节点，并返回 <strong>新的头节点</strong> 。</p>
<p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/dell\Documents\img\2023-06-01-14-03-45-image.png"></p>
<p><img src="/images/2023-06-01-14-03-45-image.png"></p>
<div class="tabs" id="test203"><ul class="nav-tabs"><li class="tab active"><a href="#test203-1">示例1</a></li><li class="tab"><a href="#test203-2">示例2</a></li><li class="tab"><a href="#test203-3">示例3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test203-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [1,2,6,3,4,5,6], val = 6</span><br><span class="line">输出：[1,2,3,4,5]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test203-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [], val = 1</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test203-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [7,7,7,7], val = 7</span><br><span class="line">输出：[]]</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>链表操作的两种方式：</p>
<ul>
<li><p><strong>直接使用原来的链表来进行删除操作。</strong></p>
<ul>
<li>移除头结点和移除其他节点的操作是不一样的，因为链表的其他节点都是通过前一个节点来移除当前节点，而头结点没有前一个节点。所以头结点如何移除呢，其实只要将头结点向后移动一位就可以，这样就从链表中移除了一个头结点。</li>
</ul>
</li>
<li><p><strong>设置一个虚拟头结点在进行删除操作。</strong></p>
</li>
</ul>
<p><img src="/algorithm%E2%80%94%E2%80%94linkedlist/dell\Documents\img\2023-06-01-14-08-23-image.png"></p>
<p><img src="/images/2023-06-01-14-08-23-image.png"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">head</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">ListNode</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> removeElements = <span class="keyword">function</span>(<span class="params">head, val</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> ret = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>, head);</span><br><span class="line">    <span class="keyword">let</span> cur = ret;</span><br><span class="line">    <span class="keyword">while</span>(cur.<span class="property">next</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cur.<span class="property">next</span>.<span class="property">val</span> === val) &#123;</span><br><span class="line">            cur.<span class="property">next</span> =  cur.<span class="property">next</span>.<span class="property">next</span>;</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        cur = cur.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret.<span class="property">next</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="3-设计链表"><a href="#3-设计链表" class="headerlink" title="3.设计链表"></a>3.设计链表</h2><p>707.你可以选择使用单链表或者双链表，设计并实现自己的链表。</p>
<p>单链表中的节点应该具备两个属性：<code>val</code> 和 <code>next</code> 。<code>val</code> 是当前节点的值，<code>next</code> 是指向下一个节点的指针/引用。</p>
<p>如果是双向链表，则还需要属性 <code>prev</code> 以指示链表中的上一个节点。假设链表中的所有节点下标从 0 开始。</p>
<p>实现 MyLinkedList 类：</p>
<ul>
<li><p><code>MyLinkedList()</code> 初始化 <code>MyLinkedList</code> 对象。</p>
</li>
<li><p><code>int get(int index)</code> 获取链表中下标为 <code>index</code> 的节点的值。如果下标无效，则返回 -1 。</p>
</li>
<li><p><code>void addAtHead(int val)</code> 将一个值为 <code>val</code> 的节点插入到链表中第一个元素之前。在插入完成后，新节点会成为链表的第一个节点。</p>
</li>
<li><p><code>void addAtTail(int val)</code> 将一个值为 <code>val</code> 的节点追加到链表中作为链表的最后一个元素。</p>
</li>
<li><p><code>void addAtIndex(int index, int val)</code> 将一个值为 <code>val</code> 的节点插入到链表中下标为 <code>index</code> 的节点之前。如果 <code>index</code> 等于链表的长度，那么该节点会被追加到链表的末尾。如果 <code>index</code> 比长度更大，该节点将 不会插入 到链表中。</p>
</li>
<li><p><code>void deleteAtIndex(int index)</code> 如果下标有效，则删除链表中下标为 <code>index</code> 的节点</p>
</li>
</ul>
<div class="tabs" id="test707"><ul class="nav-tabs"><li class="tab active"><a href="#test707-1">示例1</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test707-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入</span><br><span class="line">[&quot;MyLinkedList&quot;, &quot;addAtHead&quot;, &quot;addAtTail&quot;, &quot;addAtIndex&quot;, &quot;get&quot;, &quot;deleteAtIndex&quot;, &quot;get&quot;]</span><br><span class="line">[[], [1], [3], [1, 2], [1], [1], [1]]</span><br><span class="line">输出</span><br><span class="line">[null, null, null, null, 2, null, 3]</span><br><span class="line"></span><br><span class="line">解释</span><br><span class="line">MyLinkedList myLinkedList = new MyLinkedList();</span><br><span class="line">myLinkedList.addAtHead(1);</span><br><span class="line">myLinkedList.addAtTail(3);</span><br><span class="line">myLinkedList.addAtIndex(1, 2);    // 链表变为 1-&gt;2-&gt;3</span><br><span class="line">myLinkedList.get(1);              // 返回 2</span><br><span class="line">myLinkedList.deleteAtIndex(1);    // 现在，链表变为 1-&gt;3</span><br><span class="line">myLinkedList.get(1);              // 返回 3</span><br><span class="line"></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">链接：https://leetcode.cn/problems/design-linked-list</span><br><span class="line">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>这道题目设计链表的五个接口：</p>
<ul>
<li>获取链表第index个节点的数值</li>
<li>在链表的最前面插入一个节点</li>
<li>在链表的最后面插入一个节点</li>
<li>在链表第index个节点前面插入一个节点</li>
<li>删除链表的第index个节点</li>
</ul>
<p>可以说这五个接口，已经覆盖了链表的常见操作，是练习链表操作非常好的一道题目</p>
<p><strong>链表操作的两种方式：</strong></p>
<ol>
<li>直接使用原来的链表来进行操作。</li>
<li>设置一个虚拟头结点在进行操作。</li>
</ol>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LinkNode</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">val,next</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">val</span>=val;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">next</span>=next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">MyLinkedList</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_size</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_tail</span>=<span class="literal">null</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_head</span>=<span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">index</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getNode</span> = <span class="keyword">function</span>(<span class="params">index</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= <span class="variable language_">this</span>.<span class="property">_size</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 创建虚拟头节点</span></span><br><span class="line">    <span class="keyword">let</span> cur = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(<span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">_head</span>);</span><br><span class="line">    <span class="comment">// 0 -&gt; head</span></span><br><span class="line">    <span class="keyword">while</span>(index-- &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        cur = cur.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cur;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">get</span> = <span class="keyword">function</span>(<span class="params">index</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= <span class="variable language_">this</span>.<span class="property">_size</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">getNode</span>(index).<span class="property">val</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addAtHead</span> = <span class="keyword">function</span>(<span class="params">val</span>) &#123;</span><br><span class="line"> <span class="keyword">const</span> node = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(val, <span class="variable language_">this</span>.<span class="property">_head</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_head</span> = node;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_size</span>++;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">_tail</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_tail</span> = node;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addAtTail</span> = <span class="keyword">function</span>(<span class="params">val</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> node = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(val, <span class="literal">null</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_size</span>++;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">_tail</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_tail</span>.<span class="property">next</span> = node;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_tail</span> = node;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_tail</span> = node;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_head</span> = node;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; index </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addAtIndex</span> = <span class="keyword">function</span>(<span class="params">index, val</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(index &gt; <span class="variable language_">this</span>.<span class="property">_size</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(index &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addAtHead</span>(val);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(index === <span class="variable language_">this</span>.<span class="property">_size</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addAtTail</span>(val);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取目标节点的上一个的节点</span></span><br><span class="line">    <span class="keyword">const</span> node = <span class="variable language_">this</span>.<span class="title function_">getNode</span>(index - <span class="number">1</span>);</span><br><span class="line">    node.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(val, node.<span class="property">next</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_size</span>++;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">index</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">deleteAtIndex</span> = <span class="keyword">function</span>(<span class="params">index</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= <span class="variable language_">this</span>.<span class="property">_size</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(index === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_head</span> = <span class="variable language_">this</span>.<span class="property">_head</span>.<span class="property">next</span>;</span><br><span class="line">        <span class="comment">// 如果删除的这个节点同时是尾节点，要处理尾节点</span></span><br><span class="line">        <span class="keyword">if</span>(index === <span class="variable language_">this</span>.<span class="property">_size</span> - <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_tail</span> = <span class="variable language_">this</span>.<span class="property">_head</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_size</span>--;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取目标节点的上一个的节点</span></span><br><span class="line">    <span class="keyword">const</span> node = <span class="variable language_">this</span>.<span class="title function_">getNode</span>(index - <span class="number">1</span>);    </span><br><span class="line">    node.<span class="property">next</span> = node.<span class="property">next</span>.<span class="property">next</span>;</span><br><span class="line">    <span class="comment">// 处理尾节点</span></span><br><span class="line">    <span class="keyword">if</span>(index === <span class="variable language_">this</span>.<span class="property">_size</span> - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_tail</span> = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_size</span>--;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MyLinkedList object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * var obj = new MyLinkedList()</span></span><br><span class="line"><span class="comment"> * var param_1 = obj.get(index)</span></span><br><span class="line"><span class="comment"> * obj.addAtHead(val)</span></span><br><span class="line"><span class="comment"> * obj.addAtTail(val)</span></span><br><span class="line"><span class="comment"> * obj.addAtIndex(index,val)</span></span><br><span class="line"><span class="comment"> * obj.deleteAtIndex(index)</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id="4-翻转链表"><a href="#4-翻转链表" class="headerlink" title="4.翻转链表"></a>4.翻转链表</h2><p>206.给你单链表的头节点 <code>head</code> ，请你反转链表，并返回反转后的链表。</p>
<div class="tabs" id="test206"><ul class="nav-tabs"><li class="tab active"><a href="#test206-1">示例1</a></li><li class="tab"><a href="#test206-2">示例2</a></li><li class="tab"><a href="#test206-3">示例3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test206-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5]</span><br><span class="line">输出：[5,4,3,2,1]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test206-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：[2,1]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test206-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>只需要改变链表的next指针的指向，直接将链表反转 ，而不用重新定义一个新的链表，如图所示:</p>
<p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20210218090901207.png" alt="206_反转链表"></p>
<p>之前链表的头节点是元素1， 反转之后头结点就是元素5 ，这里并没有添加或者删除节点，仅仅是改变next指针的方向。</p>
<p>那么接下来看一看是如何反转的呢？</p>
<p>首先定义一个cur指针，指向头结点，再定义一个pre指针，初始化为null。</p>
<p>然后就要开始反转了，首先要把 cur-&gt;next 节点用tmp指针保存一下，也就是保存一下这个节点。</p>
<p>为什么要保存一下这个节点呢，因为接下来要改变 cur-&gt;next 的指向了，将cur-&gt;next 指向pre ，此时已经反转了第一个节点了。</p>
<p>接下来，就是循环走如下代码逻辑了，继续移动pre和cur指针。</p>
<p>最后，cur 指针已经指向了null，循环结束，链表也反转完毕了。 此时我们return pre指针就可以了，pre指针就指向了新的头结点。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><p><strong>双指针法</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">head</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">ListNode</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> reverseList = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!head || !head.<span class="property">next</span>) <span class="keyword">return</span> head;</span><br><span class="line">    <span class="keyword">let</span> temp = <span class="literal">null</span>, pre = <span class="literal">null</span>, cur = head;</span><br><span class="line">    <span class="keyword">while</span>(cur) &#123;</span><br><span class="line">        temp = cur.<span class="property">next</span>;</span><br><span class="line">        cur.<span class="property">next</span> = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// temp = cur = null;</span></span><br><span class="line">    <span class="keyword">return</span> pre;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<p><strong>递归法</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reverse = <span class="keyword">function</span>(<span class="params">pre, head</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!head) <span class="keyword">return</span> pre;</span><br><span class="line">    <span class="keyword">const</span> temp = head.<span class="property">next</span>;</span><br><span class="line">    head.<span class="property">next</span> = pre;</span><br><span class="line">    pre = head</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">reverse</span>(pre, temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reverseList = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">reverse</span>(<span class="literal">null</span>, head);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<hr>
]]></content>
      <categories>
        <category>Algorithm</category>
        <category>LinkedList</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>LinkedList</tag>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Algorithm——Array</title>
    <url>/algorithm%E2%80%94%E2%80%94array/</url>
    <content><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="1-数组理论基础"><a href="#1-数组理论基础" class="headerlink" title="1.数组理论基础"></a>1.数组理论基础</h2><p><strong>数组是存放在连续内存空间上的相同类型数据的集合</strong></p>
<p>数组可以通过下标索引的方式获取下标下对应的数据</p>
<blockquote>
<p><img src="/images/2023-05-26-14-19-31-image.png"></p>
</blockquote>
<span id="more"></span>

<p><strong>注意</strong></p>
<ul>
<li><p>数组下标都是从0开始的</p>
</li>
<li><p>数组内存空间的地址是连续的</p>
</li>
<li><p><strong>数组的元素是不能删的，只能覆盖</strong></p>
</li>
</ul>
<h2 id="2-！二分查找"><a href="#2-！二分查找" class="headerlink" title="2.！二分查找"></a>2.！二分查找</h2><p>704.给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。</p>
<div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><a href="#test-1">示例1</a></li><li class="tab"><a href="#test-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: nums = [-1,0,3,5,9,12], target = 9     </span><br><span class="line">输出: 4       </span><br><span class="line">解释: 9 出现在 nums 中并且下标为 4</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: nums = [-1,0,3,5,9,12], target = 2     </span><br><span class="line">输出: -1        </span><br><span class="line">解释: 2 不存在 nums 中因此返回 -1 </span><br></pre></td></tr></table></figure></div></div></div>

<p>提示：</p>
<ul>
<li><p>可以假设nums中的所有元素是不重复的</p>
</li>
<li><p>n将在[1,10000]之间</p>
</li>
<li><p>nums的每个元素都将在[-9999,9999]之间</p>
</li>
</ul>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul>
<li><p>数组为有序数组</p>
</li>
<li><p>数组中无重复元素</p>
<ul>
<li>存在重复元素，使用二分查找法返回的元素下标可能不是唯一的</li>
</ul>
</li>
</ul>
<p><strong><mark>满足上述两点可考虑二分法</mark></strong></p>
<p>二分法的<strong>区间定义就是不变量</strong></p>
<ul>
<li>在二分查找过程中，保持不变量，即在while寻找中每一次边界处理都要坚持根据区间的定义来操作</li>
</ul>
<p>二分法区间定义</p>
<ul>
<li><p>左闭右闭[left,right]</p>
<ul>
<li><p>while(left&lt;=right)要使用&lt;=，因为left == right是有意义的</p>
</li>
<li><p>if [ num[middle] &gt; target ) right要赋值为 middle - 1 ；因为当前nums[middle]一定不是target，那么下面查找的左区间结束下标位置就是middle - 1</p>
</li>
<li><p>时间复杂度：O(log n)</p>
</li>
<li><p>空间复杂度：O(1)</p>
</li>
</ul>
</li>
<li><p>左闭右开[left,right)</p>
<ul>
<li><p>while(left &lt; right),因为left == right在区间中是没有意义的</p>
</li>
<li><p>if (nums[middle] &gt; target) right 更新为 middle，因为当前nums[middle]不等于target，去左区间继续寻找，而寻找区间是左闭右开区间，所以right更新为middle，即：下一个查询区间不会去比较nums[middle]</p>
</li>
</ul>
</li>
</ul>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>左闭右闭区间</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> search = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> mid, left = <span class="number">0</span>, right = nums.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 当left=right时，由于nums[right]在查找范围内，所以要包括此情况</span></span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        <span class="comment">// 位运算 + 防止大数溢出</span></span><br><span class="line">        mid = left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 如果中间数大于目标值，要把中间数排除查找范围，所以右边界更新为mid-1；如果右边界更新为mid，那中间数还在下次查找范围内</span></span><br><span class="line">        <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;  <span class="comment">// 去左面闭区间寻找</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;   <span class="comment">// 去右面闭区间寻找</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>左闭右开区间</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> search = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="comment">// right是数组最后一个数的下标+1，nums[right]不在查找范围内，是左闭右开区间</span></span><br><span class="line">    <span class="keyword">let</span> mid, left = <span class="number">0</span>, right = nums.<span class="property">length</span>;    </span><br><span class="line">    <span class="comment">// 当left=right时，由于nums[right]不在查找范围，所以不必包括此情况</span></span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="comment">// 位运算 + 防止大数溢出</span></span><br><span class="line">        mid = left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 如果中间值大于目标值，中间值不应在下次查找的范围内，但中间值的前一个值应在；</span></span><br><span class="line">        <span class="comment">// 由于right本来就不在查找范围内，所以将右边界更新为中间值，如果更新右边界为mid-1则将中间值的前一个值也踢出了下次寻找范围</span></span><br><span class="line">        <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">            right = mid;  <span class="comment">// 去左区间寻找</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;   <span class="comment">// 去右区间寻找</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="相关题目"><a href="#相关题目" class="headerlink" title="相关题目"></a>相关题目</h3><h4 id="35-搜索插入位置"><a href="#35-搜索插入位置" class="headerlink" title="-35.搜索插入位置"></a>-35.搜索插入位置</h4><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>
<p>请必须使用时间复杂度为 O(log n) 的算法。</p>
<div class="tabs" id="test35"><ul class="nav-tabs"><li class="tab active"><a href="#test35-1">示例1</a></li><li class="tab"><a href="#test35-2">示例2</a></li><li class="tab"><a href="#test35-3">示例3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test35-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 5</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test35-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 2</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test35-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 7</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></figure></div></div></div> 

<p>提示</p>
<ul>
<li><p>1 &lt;= nums.length &lt;= 10^4</p>
</li>
<li><p>-10^4 &lt;= nums[i] &lt;= 10^4</p>
</li>
<li><p>nums 为 <strong>无重复元素 的 升序 排列数组</strong></p>
</li>
<li><p>-10^4 &lt;= target &lt;= 10^4</p>
</li>
</ul>
<h5 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h5><p>存在以下四种情况</p>
<ul>
<li>目标值在数组所有元素之前</li>
<li>目标值等于数组中某一个元素</li>
<li>目标值插入数组中的位置</li>
<li>目标值在数组所有元素之后</li>
</ul>
<h5 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> searchInsert = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> mid = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> right = nums.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        mid = left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(nums[mid] &lt; target)&#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] &gt; target)&#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> left;</span><br><span class="line">    <span class="comment">/*return right +1*/</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="34-在排序数组中查找元素的第一个和最后一个位置"><a href="#34-在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title="-34.在排序数组中查找元素的第一个和最后一个位置"></a>-34.在排序数组中查找元素的第一个和最后一个位置</h4><p>给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。</p>
<p>如果数组中不存在目标值 target，返回 [-1, -1]。</p>
<p>你必须设计并实现时间复杂度为 O(log n) 的算法解决此问题。</p>
<div class="tabs" id="test34"><ul class="nav-tabs"><li class="tab active"><a href="#test34-1">示例1</a></li><li class="tab"><a href="#test34-2">示例2</a></li><li class="tab"><a href="#test34-3">示例3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test34-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [5,7,7,8,8,10], target = 8</span><br><span class="line">输出：[3,4]]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test34-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [5,7,7,8,8,10], target = 6</span><br><span class="line">输出：[-1,-1]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test34-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [], target = 0</span><br><span class="line">输出：[-1,-1]</span><br></pre></td></tr></table></figure></div></div></div> 

<p>提示</p>
<ul>
<li><p>0 &lt;= nums.length &lt;= 10^5</p>
</li>
<li><p>-10^9 &lt;= nums[i] &lt;= 10^9</p>
</li>
<li><p>nums 是一个非递减数组</p>
</li>
<li><p>-10^9 &lt;= target &lt;= 10^9</p>
</li>
</ul>
<h5 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h5><p>寻找target在数组里的左右边界，有如下三种情况：</p>
<ul>
<li>情况一：target 在数组范围的右边或者左边，例如数组{3, 4, 5}，target为2或者数组{3, 4, 5},target为6，此时应该返回{-1, -1}</li>
<li>情况二：target 在数组范围中，且数组中不存在target，例如数组{3,6,7},target为5，此时应该返回{-1, -1}</li>
<li>情况三：target 在数组范围中，且数组中存在target，例如数组{3,6,7},target为6，此时应该返回{1, 1}</li>
</ul>
<h5 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> searchRange = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getLeftBorder</span> = (<span class="params">nums, target</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> left = <span class="number">0</span>, right = nums.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> leftBorder = -<span class="number">2</span>;<span class="comment">// 记录一下leftBorder没有被赋值的情况</span></span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">            <span class="keyword">let</span> middle = left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(nums[middle] &gt;= target)&#123; <span class="comment">// 寻找左边界，nums[middle] == target的时候更新right</span></span><br><span class="line">                right = middle - <span class="number">1</span>;</span><br><span class="line">                leftBorder = right;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = middle + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> leftBorder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getRightBorder</span> = (<span class="params">nums, target</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> left = <span class="number">0</span>, right = nums.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> rightBorder = -<span class="number">2</span>; <span class="comment">// 记录一下rightBorder没有被赋值的情况</span></span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">let</span> middle = left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (nums[middle] &gt; target) &#123;</span><br><span class="line">                right = middle - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 寻找右边界，nums[middle] == target的时候更新left</span></span><br><span class="line">                left = middle + <span class="number">1</span>;</span><br><span class="line">                rightBorder = left;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rightBorder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> leftBorder = <span class="title function_">getLeftBorder</span>(nums, target);</span><br><span class="line">    <span class="keyword">let</span> rightBorder = <span class="title function_">getRightBorder</span>(nums, target);</span><br><span class="line">    <span class="comment">// 情况一</span></span><br><span class="line">    <span class="keyword">if</span>(leftBorder === -<span class="number">2</span> || rightBorder === -<span class="number">2</span>) <span class="keyword">return</span> [-<span class="number">1</span>,-<span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 情况三</span></span><br><span class="line">    <span class="keyword">if</span> (rightBorder - leftBorder &gt; <span class="number">1</span>) <span class="keyword">return</span> [leftBorder + <span class="number">1</span>, rightBorder - <span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 情况二</span></span><br><span class="line">    <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> searchRange = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> left = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> right = nums.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right) &#123;</span><br><span class="line">        <span class="keyword">let</span> mid = (left + right) &gt;&gt; <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (nums[mid] === target) &#123;</span><br><span class="line">            <span class="keyword">let</span> tempLeft = tempRight = mid ;</span><br><span class="line">            <span class="keyword">while</span>(nums[tempLeft - <span class="number">1</span>] === target) tempLeft--;</span><br><span class="line">            <span class="keyword">while</span>(nums[tempRight + <span class="number">1</span>] === target) tempRight++;</span><br><span class="line">            <span class="keyword">return</span> [tempLeft, tempRight]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">            right = mid - <span class="number">1</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="69-x-的平方根"><a href="#69-x-的平方根" class="headerlink" title="-69.x 的平方根"></a>-69.x 的平方根</h4><p>给你一个非负整数 x ，计算并返回 x 的 <strong>算术平方根</strong>  。</p>
<p>由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。</p>
<p><strong>注意：</strong> 不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。</p>
<div class="tabs" id="test69"><ul class="nav-tabs"><li class="tab active"><a href="#test69-1">示例1</a></li><li class="tab"><a href="#test69-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test69-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：x = 4</span><br><span class="line">输出：2</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test69-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：x = 8</span><br><span class="line">输出：2</span><br><span class="line">解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去</span><br></pre></td></tr></table></figure></div></div></div>

<p><strong>提示：</strong></p>
<ul>
<li><code>0 &lt;= x &lt;= 2^31 - 1</code></li>
</ul>
<h5 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h5><ul>
<li><p>整数x的平方根一定小于或等于x</p>
</li>
<li><p>除0之外的所有整数的平方根都大于或等于1</p>
</li>
<li><p>整数x的平方根一定是在1到x的范围内，取这个范围内的中间数字mid，并判断mid的平方是否小于或等于x</p>
<ul>
<li><p>如果mid的平方小于x,那么接着判断(mid+1)的平方是否大于x，如果(mid+1)的平方大于x，那么mid就是x的平方根</p>
</li>
<li><p>如果mid的平方小于x并且(mid+1)的平方小于x，那么x的平方根比mid大，接下来搜索从mid+1到x的范围</p>
</li>
<li><p>如果mid的平方大于x，则x的平方根小于mid，接下来搜索1到mid-1的范围</p>
</li>
<li><p>然后在相应的范围内重复这个过程，总是取出位于范围中间的mid</p>
</li>
</ul>
</li>
</ul>
<h5 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">x</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> mySqrt = <span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">  <span class="comment">// 整数x的平方根一定是在1到x的范围内</span></span><br><span class="line">  <span class="keyword">let</span> left = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">let</span> right = x;</span><br><span class="line">  <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">    <span class="comment">// 中间值  下面这样写是防止溢出</span></span><br><span class="line">    <span class="keyword">let</span> mid = left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 判断mid的平方是否小于或等于x，如果mid的平方小于x</span></span><br><span class="line">    <span class="keyword">if</span> (mid &lt;= x / mid) &#123;</span><br><span class="line">      <span class="comment">// 判断(mid+1)的平方是否大于x，如果(mid+1)的平方大于x，那么mid就是x的平方根</span></span><br><span class="line">      <span class="keyword">if</span> (mid + <span class="number">1</span> &gt; x / (mid + <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> mid;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 如果mid的平方小于x并且(mid+1)的平方小于x，那么x的平方根比mid大，接下来搜索从mid+1到x的范围</span></span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 如果mid的平方大于x，则x的平方根小于mid，接下来搜索1到mid-1的范围</span></span><br><span class="line">      right = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 如果输入参数是0，left等于1而right等于0，就直接返回0</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="367-有效的完全平方数"><a href="#367-有效的完全平方数" class="headerlink" title="-367.有效的完全平方数"></a>-367.有效的完全平方数</h4><p>给你一个正整数 num 。如果 num 是一个完全平方数，则返回 true ，否则返回 false 。</p>
<p><strong>完全平方数</strong> 是一个可以写成某个整数的平方的整数。换句话说，它可以写成某个整数和自身的乘积。</p>
<p>不能使用任何内置的库函数，如  sqrt 。</p>
<div class="tabs" id="test367"><ul class="nav-tabs"><li class="tab active"><a href="#test367-1">示例1</a></li><li class="tab"><a href="#test367-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test367-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：num = 16</span><br><span class="line">输出：true</span><br><span class="line">解释：返回 true ，因为 4 * 4 = 16 且 4 是一个整数。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test367-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：num = 14</span><br><span class="line">输出：false</span><br><span class="line">解释：返回 false ，因为 3.742 * 3.742 = 14 但 3.742 不是一个整数</span><br></pre></td></tr></table></figure></div></div></div>

<h5 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h5><ul>
<li><p>num 是正整数，若正整数 x 满足<code>x*x = num</code>,则x一定满足<code>1&lt;= x &lt;= num</code>;</p>
</li>
<li><p>1 和 num 作为二分查找搜索区间的初始边界。</p>
</li>
<li><p>时间复杂度：O(log n),n为正整数num的最大值</p>
</li>
<li><p>空间复杂度：O(1)</p>
</li>
</ul>
<h5 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">num</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isPerfectSquare = <span class="keyword">function</span>(<span class="params">num</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> left = <span class="number">0</span>, right = num;</span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        <span class="keyword">const</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>((right - left) / <span class="number">2</span>) + left;</span><br><span class="line">        <span class="keyword">const</span> square = mid * mid;</span><br><span class="line">        <span class="keyword">if</span> (square &lt; num) &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (square &gt; num) &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="3-移除元素"><a href="#3-移除元素" class="headerlink" title="3.移除元素"></a>3.移除元素</h2><p>27.给你一个数组 <code>nums</code> 和一个值 <code>val</code>，你需要 原地 移除所有数值等于 <code>val</code> 的元素，并返回移除后数组的新长度。</p>
<p>不要使用额外的数组空间，你必须仅使用 <code>O(1)</code> 额外空间并 <strong>原地 修改输入数组</strong>。</p>
<p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p>
<p><strong>说明:</strong></p>
<p>为什么返回数值是整数，但输出的答案是数组呢?</p>
<p>请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p>
<p>你可以想象内部操作如下:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝</span></span><br><span class="line">int len = <span class="title function_">removeElement</span>(nums, val);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在函数里修改输入数组对于调用者是可见的。</span></span><br><span class="line"><span class="comment">// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="title function_">print</span>(nums[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="test27"><ul class="nav-tabs"><li class="tab active"><a href="#test27-1">示例1</a></li><li class="tab"><a href="#test27-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test27-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [3,2,2,3], val = 3</span><br><span class="line">输出：2, nums = [2,2]</span><br><span class="line">解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test27-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [0,1,2,2,3,0,4,2], val = 2</span><br><span class="line">输出：5, nums = [0,1,4,0,3]</span><br><span class="line">解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p><strong>要知道数组的元素在内存地址中是连续的，不能单独删除数组中的某个元素，只能覆盖</strong></p>
<h3 id="！双指针法"><a href="#！双指针法" class="headerlink" title="！双指针法"></a>！双指针法</h3><p>双指针法（快慢指针法）： <strong>通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。</strong></p>
<p>定义快慢指针</p>
<ul>
<li><p>快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组</p>
</li>
<li><p>慢指针：指向更新 新数组下标的位置</p>
</li>
<li><p>时间复杂度：O(n)</p>
</li>
<li><p>空间复杂度：O(1)</p>
</li>
</ul>
<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> removeElement = <span class="keyword">function</span>(<span class="params">nums, val</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; nums.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i] != val)&#123;</span><br><span class="line">            nums[k] = nums[i];</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="相关题目-1"><a href="#相关题目-1" class="headerlink" title="相关题目"></a>相关题目</h3><h4 id="26-删除排序数组中的重复项"><a href="#26-删除排序数组中的重复项" class="headerlink" title="-26.删除排序数组中的重复项"></a>-26.删除排序数组中的重复项</h4><p>给你一个 升序排列 的数组 <code>nums</code> ，请你 <strong>原</strong>地 删除重复出现的元素，使每个元素 **只出现一次 **，返回删除后数组的新长度。元素的 <strong>相对顺序</strong> 应该保持 <strong>一致</strong> 。然后返回 <code>nums</code> 中唯一元素的个数。</p>
<p>考虑 <code>nums</code> 的唯一元素的数量为 <code>k</code> ，你需要做以下事情确保你的题解可以被通过：</p>
<ul>
<li><p>更改数组 <code>nums</code> ，使 <code>nums</code> 的前 <code>k</code> 个元素包含唯一元素，并按照它们最初在 <code>nums</code> 中出现的顺序排列。<code>nums</code> 的其余元素与 <code>nums</code> 的大小不重要。</p>
</li>
<li><p>返回 <code>k</code> 。</p>
</li>
</ul>
<p><strong>判题标准:</strong></p>
<p>系统会用下面的代码来测试你的题解:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">int[] nums = [...]; <span class="comment">// 输入数组</span></span><br><span class="line">int[] expectedNums = [...]; <span class="comment">// 长度正确的期望答案</span></span><br><span class="line"></span><br><span class="line">int k = <span class="title function_">removeDuplicates</span>(nums); <span class="comment">// 调用</span></span><br><span class="line"></span><br><span class="line">assert k == expectedNums.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">    assert nums[i] == expectedNums[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="test26"><ul class="nav-tabs"><li class="tab active"><a href="#test26-1">示例1</a></li><li class="tab"><a href="#test26-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test26-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,1,2]</span><br><span class="line">输出：2, nums = [1,2,_]</span><br><span class="line">解释：函数应该返回新的长度 2 ，并且原数组 nums 的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test26-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [0,0,1,1,1,2,2,3,3,4]</span><br><span class="line">输出：5, nums = [0,1,2,3,4]</span><br><span class="line">解释：函数应该返回新的长度 5 ， 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4 。不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure></div></div></div>

<h5 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h5><ul>
<li><p>数组<code>nums</code>有序的，只能在原地修改<code>nums</code>数组，不能创建新的数组空间来存储删除重复出现的元素后的结果。</p>
</li>
<li><p>需要一边遍历数组查找相同元素，一边在对比发现不同元素时修改数组元素，</p>
</li>
<li><p>考虑双指针法的快慢指针</p>
<ul>
<li><p>定义<code>slow</code>和<code>fast</code>作为指针</p>
</li>
<li><p>初始化时指针<code>slow</code>指向数组的起始位置（<code>nums[0]</code>）</p>
</li>
<li><p>随着指针<code>fast</code>不断向后移动，将指针<code>fast</code>指向的元素与指针<code>slow</code>指向的元素进行比较</p>
<ul>
<li><p>如果<code>nums[fast] ≠ nums[slow]</code>，那么<code>nums[slow + 1] = nums[fast]</code></p>
</li>
<li><p>如果<code>nums[fast] = nums[slow]</code>，那么指针<code>fast</code>继续向后查找</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>时间复杂度：</strong><code>O(n)</code></p>
</li>
</ul>
<h5 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> removeDuplicates = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.<span class="property">length</span> == <span class="number">0</span>)&#123;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">let</span> slow = <span class="number">0</span>, fast = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(fast &lt; nums.<span class="property">length</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[fast] != nums[slow])&#123;</span><br><span class="line">            slow = slow + <span class="number">1</span>;</span><br><span class="line">            nums[slow] = nums[fast];</span><br><span class="line">        &#125;</span><br><span class="line">        fast = fast + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> slow + <span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="283-移动零"><a href="#283-移动零" class="headerlink" title="-283.移动零"></a>-283.移动零</h4><p>给定一个数组 <code>nums</code>，编写一个函数将所有 <code>0</code> 移动到数组的末尾，同时保持非零元素的相对顺序。</p>
<p><strong>请注意</strong> ，必须在不复制数组的情况下原地对数组进行操作。</p>
<div class="tabs" id="test283"><ul class="nav-tabs"><li class="tab active"><a href="#test283-1">示例1</a></li><li class="tab"><a href="#test283-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test283-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: nums = [0,1,0,3,12]</span><br><span class="line">输出: [1,3,12,0,0]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test283-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: nums = [0]</span><br><span class="line">输出: [0]</span><br></pre></td></tr></table></figure></div></div></div>

<h5 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h5><p><strong>相当于对整个数组移除元素0，然后slowIndex之后都是移除元素0的冗余元素，把这些元素都赋值为0就可以了</strong>。</p>
<h5 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> moveZeroes = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> slow = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> fast = <span class="number">0</span>; fast &lt; nums.<span class="property">length</span>; fast++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[fast] != <span class="number">0</span>) &#123;</span><br><span class="line">                nums[slow++] = nums[fast];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 后面的元素全变成 0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = slow; j &lt; nums.<span class="property">length</span>; j++) &#123;</span><br><span class="line">            nums[j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="844-比较含退格的字符串"><a href="#844-比较含退格的字符串" class="headerlink" title="-844.比较含退格的字符串"></a>-844.比较含退格的字符串</h4><p>给定 <code>s</code> 和 <code>t</code> 两个字符串，当它们分别被输入到空白的文本编辑器后，如果两者相等，返回 <code>true</code> 。# 代表退格字符。</p>
<p><strong>注意</strong> :如果对空文本输入退格字符，文本继续为空。</p>
<div class="tabs" id="test844"><ul class="nav-tabs"><li class="tab active"><a href="#test844-1">示例1</a></li><li class="tab"><a href="#test844-2">示例2</a></li><li class="tab"><a href="#test844-3">示例3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test844-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：s = &quot;ab#c&quot;, t = &quot;ad#c&quot;</span><br><span class="line">输出：true</span><br><span class="line">解释：s 和 t 都会变成 &quot;ac&quot;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test844-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：s = &quot;ab##&quot;, t = &quot;c#d#&quot;</span><br><span class="line">输出：true</span><br><span class="line">解释：s 和 t 都会变成 &quot;&quot;。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test844-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：s = &quot;a#c&quot;, t = &quot;b&quot;</span><br><span class="line">输出：false</span><br><span class="line">解释：s 会变成 &quot;c&quot;，但 t 仍然是 &quot;b&quot;。</span><br></pre></td></tr></table></figure></div></div></div>

<h5 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h5><ul>
<li><p>准备指针<code>i``j</code>分别指向<code>S``T</code>的末位字符，再准备变量<code>skipS</code>,<code>skipT</code>来存放S,T字符串中的#数量</p>
</li>
<li><p>从后向前遍历S，遇到以下情况</p>
<ul>
<li><p>若当前字符为#，则<code>skipS</code>自增1</p>
</li>
<li><p>若当前字符不是#，且<code>skipS</code> 不为0，则<code>skipS</code>自减1</p>
</li>
<li><p>若当前字符不是#，且<code>skipS</code>为0，则代表当前字符不会被消除，我们可以用来和 T 中的当前字符作比较。</p>
</li>
</ul>
</li>
<li><p>若对比过程中<code>S</code>,<code>T</code>当前字符不匹配，则遍历结束，返回<code>false</code></p>
</li>
<li><p>若遍历结束，且一一匹配，则返回<code>true</code></p>
</li>
</ul>
<h5 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">t</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> backspaceCompare = <span class="keyword">function</span>(<span class="params">s, t</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> i = s.<span class="property">length</span> - <span class="number">1</span>,</span><br><span class="line">        j = t.<span class="property">length</span> - <span class="number">1</span>,</span><br><span class="line">        skipS = <span class="number">0</span>,</span><br><span class="line">        skipT = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 大循环</span></span><br><span class="line">    <span class="keyword">while</span>(i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// S 循环</span></span><br><span class="line">        <span class="keyword">while</span>(i &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] === <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">                skipS++;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(skipS &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                skipS--;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// T 循环</span></span><br><span class="line">        <span class="keyword">while</span>(j &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(t[j] === <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">                skipT++;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(skipT &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                skipT--;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s[i] !== t[j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        i--;</span><br><span class="line">        j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="977-有序数组的平方"><a href="#977-有序数组的平方" class="headerlink" title="-977.有序数组的平方"></a>-977.有序数组的平方</h4><p>给你一个按 <strong>非递减顺序</strong> 排序的整数数组 <code>nums</code>，返回 <strong>每个数字的平方</strong> 组成的新数组，要求也按 <strong>非递减顺序</strong> 排序</p>
<h5 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h5><ul>
<li><p>数组其实是有序的， 只不过负数平方之后可能成为最大数了。</p>
</li>
<li><p>那么数组平方的最大值就在数组的两端，不是最左边就是最右边，不可能是中间。</p>
</li>
<li><p>此时可以考虑双指针法了，i指向起始位置，j指向终止位置。</p>
</li>
<li><p>定义一个新数组result，和A数组一样的大小，让k指向result数组终止位置</p>
</li>
<li><p>如果<code>A[i] * A[i] &lt; A[j] * A[j]</code> 那么<code>result[k--] = A[j] * A[j]</code></p>
</li>
<li><p>如果<code>A[i] * A[i] &gt;= A[j] * A[j]</code> 那么<code>result[k--] = A[i] * A[i]</code></p>
</li>
<li><p>时间复杂度为<code>O(n)</code></p>
</li>
</ul>
<div class="tabs" id="test977"><ul class="nav-tabs"><li class="tab active"><a href="#test977-1">示例1</a></li><li class="tab"><a href="#test977-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test977-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [-4,-1,0,3,10]</span><br><span class="line">输出：[0,1,9,16,100]</span><br><span class="line">解释：平方后，数组变为 [16,1,0,9,100]</span><br><span class="line">排序后，数组变为 [0,1,9,16,100]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test977-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [-7,-3,2,3,11]</span><br><span class="line">输出：[4,9,9,49,121]</span><br></pre></td></tr></table></figure></div></div></div>

<h5 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> sortedSquares = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, j = nums.<span class="property">length</span> - <span class="number">1</span>; i &lt;= j;) &#123;</span><br><span class="line">      <span class="keyword">const</span> left = <span class="title class_">Math</span>.<span class="title function_">abs</span>(nums[i])</span><br><span class="line">      <span class="keyword">const</span> right = <span class="title class_">Math</span>.<span class="title function_">abs</span>(nums[j])</span><br><span class="line">      <span class="keyword">if</span> (right &gt; left) &#123;</span><br><span class="line">        <span class="comment">// push element to the front of the array</span></span><br><span class="line">        res.<span class="title function_">unshift</span>(right * right)</span><br><span class="line">        j--</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">unshift</span>(left * left)</span><br><span class="line">        i++</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="4-长度最小的子数组"><a href="#4-长度最小的子数组" class="headerlink" title="4.长度最小的子数组"></a>4.长度最小的子数组</h2><p>给定一个含有 <code>n</code> 个正整数的数组和一个正整数 <code>target</code> 。</p>
<p>找出该数组中满足其和 <code>≥ target</code> 的长度最小的 连续子数组 <code>[numsl, numsl+1, ..., numsr-1, numsr]</code> ，并返回其长度。如果不存在符合条件的子数组，返回 <code>0</code> </p>
<div class="tabs" id="test209"><ul class="nav-tabs"><li class="tab active"><a href="#test209-1">示例1</a></li><li class="tab"><a href="#test209-2">示例2</a></li><li class="tab"><a href="#test209-3">示例3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test209-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：target = 7, nums = [2,3,1,2,4,3]</span><br><span class="line">输出：2</span><br><span class="line">解释：子数组 [4,3] 是该条件下的长度最小的子数组。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test209-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：target = 4, nums = [1,4,4]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test209-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：target = 11, nums = [1,1,1,1,1,1,1,1]</span><br><span class="line">输出：0</span><br></pre></td></tr></table></figure></div></div></div> 

<h3 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h3><p>窗口是 满足其和 ≥ s 的长度最小的 连续 子数组。</p>
<p>窗口的起始位置如何移动：如果当前窗口的值大于s了，窗口就要向前移动了（也就是该缩小了）。</p>
<p>窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是for循环里的索引。</p>
<ul>
<li>时间复杂度：O(n)</li>
<li>空间复杂度：O(1)</li>
</ul>
<h3 id="！滑动窗口"><a href="#！滑动窗口" class="headerlink" title="！滑动窗口"></a>！滑动窗口</h3><p><strong>就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果</strong></p>
<p>只用一个for循环，那么这个循环的索引，一定是表示 滑动窗口的终止位置</p>
<p>确定如下三点：</p>
<ul>
<li>窗口内是什么？</li>
<li>如何移动窗口的起始位置？</li>
<li>如何移动窗口的结束位置？</li>
</ul>
<h3 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> minSubArrayLen = <span class="keyword">function</span>(<span class="params">target, nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> start, end</span><br><span class="line">    start = end = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> len = nums.<span class="property">length</span></span><br><span class="line">    <span class="keyword">let</span> ans = <span class="title class_">Infinity</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(end &lt; len)&#123;</span><br><span class="line">        sum += nums[end];</span><br><span class="line">        <span class="keyword">while</span> (sum &gt;= target) &#123;</span><br><span class="line">            ans = <span class="title class_">Math</span>.<span class="title function_">min</span>(ans, end - start + <span class="number">1</span>);</span><br><span class="line">            sum -= nums[start];</span><br><span class="line">            start++;</span><br><span class="line">        &#125;</span><br><span class="line">        end++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans === <span class="title class_">Infinity</span> ? <span class="number">0</span> : ans</span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>

<h3 id="相关题目-2"><a href="#相关题目-2" class="headerlink" title="相关题目"></a>相关题目</h3><h4 id="904-水果成篮"><a href="#904-水果成篮" class="headerlink" title="-904.水果成篮"></a>-904.水果成篮</h4><p>你正在探访一家农场，农场从左到右种植了一排果树。这些树用一个整数数组 <code>fruits</code> 表示，其中 <code>fruits[i]</code> 是第 <code>i</code> 棵树上的水果 种类 。</p>
<p>你想要尽可能多地收集水果。然而，农场的主人设定了一些严格的规矩，你必须按照要求采摘水果：</p>
<ul>
<li><p>你只有 <strong>两个</strong> 篮子，并且每个篮子只能装 <strong>单一类型</strong> 的水果。每个篮子能够装的水果总量没有限制。</p>
</li>
<li><p>你可以选择任意一棵树开始采摘，你必须从 <strong>每棵</strong> 树（包括开始采摘的树）上 <strong>恰好摘一个水果</strong> 。采摘的水果应当符合篮子中的水果类型。每采摘一次，你将会向右移动到下一棵树，并继续采摘。</p>
</li>
<li><p>一旦你走到某棵树前，但水果不符合篮子的水果类型，那么就必须停止采摘。</p>
</li>
</ul>
<p>给你一个整数数组 <code>fruits</code> ，返回你可以收集的水果的 <strong>最大</strong> 数目。</p>
<div class="tabs" id="test904"><ul class="nav-tabs"><li class="tab active"><a href="#test904-1">示例1</a></li><li class="tab"><a href="#test904-2">示例2</a></li><li class="tab"><a href="#test904-3">示例3</a></li><li class="tab"><a href="#test904-4">示例4</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test904-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：fruits = [1,2,1]</span><br><span class="line">输出：3</span><br><span class="line">解释：可以采摘全部 3 棵树。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test904-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：fruits = [0,1,2,2]</span><br><span class="line">输出：3</span><br><span class="line">解释：可以采摘 [1,2,2] 这三棵树。</span><br><span class="line">如果从第一棵树开始采摘，则只能采摘 [0,1] 这两棵树。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test904-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：fruits = [1,2,3,2,2]</span><br><span class="line">输出：4</span><br><span class="line">解释：可以采摘 [2,3,2,2] 这四棵树。</span><br><span class="line">如果从第一棵树开始采摘，则只能采摘 [1,2] 这两棵树。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test904-4"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：fruits = [3,3,3,1,2,1,1,2,3,3,4]</span><br><span class="line">输出：5</span><br><span class="line">解释：可以采摘 [1,2,1,1,2] 这五棵树。</span><br></pre></td></tr></table></figure></div></div></div> 

<h5 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h5><p>用滑动窗口遍历fruits，当有新种类的水果进入窗口时</p>
<ul>
<li><p>如果窗口中只有一种水果，将这种水果加入arr数组</p>
</li>
<li><p>如果有两种水果，更新窗口的左边界，更新arr中水果的种类</p>
</li>
<li><p>如果进来了一种新的类型的水果 更新前一种水果的位置</p>
</li>
<li><p>更新滑动窗口的最大值</p>
</li>
<li><p>时间复杂度O(n)</p>
</li>
<li><p>空间复杂度O(1)。</p>
</li>
</ul>
<h5 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">fruits</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> totalFruit = <span class="keyword">function</span>(<span class="params">fruits</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> l = <span class="number">0</span>;<span class="comment">//起始指针</span></span><br><span class="line">    <span class="keyword">let</span> maxLen = <span class="number">0</span>;<span class="comment">//窗口的最大长度 其中最多包涵两种水果</span></span><br><span class="line">    <span class="keyword">let</span> n = <span class="number">0</span><span class="comment">//前一类水果的结束位置</span></span><br><span class="line">    <span class="keyword">let</span> arr = [fruits[l]]<span class="comment">//水果的种类数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> r = <span class="number">0</span>; r &lt; fruits.<span class="property">length</span>; r++)&#123;<span class="comment">//窗口的右指针不断前进</span></span><br><span class="line">        <span class="keyword">if</span>(!arr.<span class="title function_">includes</span>(fruits[r]))&#123;<span class="comment">//如果窗口中不包含 进窗口的水果</span></span><br><span class="line">            <span class="keyword">if</span>(arr.<span class="property">length</span> &lt;= <span class="number">1</span>)&#123;<span class="comment">//如果只有一种水果</span></span><br><span class="line">                arr[<span class="number">1</span>] = fruits[r]<span class="comment">//将这种水果加入arr数组</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//如果有两种水果</span></span><br><span class="line">                l = n<span class="comment">//更新窗口的左边界</span></span><br><span class="line">                arr[<span class="number">0</span>] = fruits[r-<span class="number">1</span>]<span class="comment">//更新arr中水果的种类</span></span><br><span class="line">                arr[<span class="number">1</span>] = fruits[r]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(fruits[r] !== fruits[n])&#123;<span class="comment">//如果进来了一种新的类型的水果 更新前一种水果的位置</span></span><br><span class="line">            n = r</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        maxLen = <span class="title class_">Math</span>.<span class="title function_">max</span>(maxLen,r-l+<span class="number">1</span>)<span class="comment">//更新滑动窗口的最大值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxLen</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="76-最小覆盖字串"><a href="#76-最小覆盖字串" class="headerlink" title="-76.最小覆盖字串"></a>-76.最小覆盖字串</h4><p>给你一个字符串 <code>s</code> 、一个字符串 <code>t</code> 。返回 <code>s</code> 中涵盖 <code>t</code> 所有字符的最小子串。如果 <code>s</code> 中不存在涵盖 <code>t</code> 所有字符的子串，则返回空字符串 <code>&quot;&quot;</code> 。</p>
<p><strong>注意：</strong></p>
<ul>
<li>对于 <code>t</code> 中重复字符，我们寻找的子字符串中该字符数量必须不少于 <code>t</code> 中该字符数量。</li>
<li>如果 <code>s</code> 中存在这样的子串，我们保证它是唯一的答案。</li>
</ul>
<div class="tabs" id="test76"><ul class="nav-tabs"><li class="tab active"><a href="#test76-1">示例1</a></li><li class="tab"><a href="#test76-2">示例2</a></li><li class="tab"><a href="#test76-3">示例3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test76-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：s = &quot;ADOBECODEBANC&quot;, t = &quot;ABC&quot;</span><br><span class="line">输出：&quot;BANC&quot;</span><br><span class="line">解释：最小覆盖子串 &quot;BANC&quot; 包含来自字符串 t 的 &#x27;A&#x27;、&#x27;B&#x27; 和 &#x27;C&#x27;。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test76-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：s = &quot;a&quot;, t = &quot;a&quot;</span><br><span class="line">输出：&quot;a&quot;</span><br><span class="line">解释：整个字符串 s 是最小覆盖子串。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test76-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: s = &quot;a&quot;, t = &quot;aa&quot;</span><br><span class="line">输出: &quot;&quot;</span><br><span class="line">解释: t 中两个字符 &#x27;a&#x27; 均应包含在 s 的子串中，</span><br><span class="line">因此没有符合条件的子字符串，返回空字符串。</span><br></pre></td></tr></table></figure></div></div></div> 

<h5 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h5><p>使用两个指针一个left，一个right，分别表示窗口的左边界和右边界。</p>
<ul>
<li><p>当窗口内的所有字符不能覆盖t的时候，要扩大窗口，也就是right往右移。</p>
</li>
<li><p>当窗口内的所有字符可以覆盖t的时候，记录窗口的起始位置以及窗口的长度，然后缩小窗口（因为这里求的是能覆盖的最小子串），left往右移。如果缩小的窗口还能覆盖t，保存长度最小的窗口即可。</p>
</li>
<li><p>重复上面的操作，直到窗口的右边不能再移动为止。</p>
</li>
</ul>
<h5 id="代码-12"><a href="#代码-12" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">t</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">string</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> minWindow = <span class="keyword">function</span>(<span class="params">s, t</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> minLen = s.<span class="property">length</span> + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">let</span> start = s.<span class="property">length</span>;     <span class="comment">// 结果子串的起始位置</span></span><br><span class="line">  <span class="keyword">let</span> map = &#123;&#125;;             <span class="comment">// 存储目标字符和对应的缺失个数</span></span><br><span class="line">  <span class="keyword">let</span> missingType = <span class="number">0</span>;      <span class="comment">// 当前缺失的字符种类数</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> c <span class="keyword">of</span> t) &#123;      <span class="comment">// t为baac的话，map为&#123;a:2,b:1,c:1&#125;</span></span><br><span class="line">    <span class="keyword">if</span> (!map[c]) &#123;</span><br><span class="line">      missingType++;        <span class="comment">// 需要找齐的种类数 +1</span></span><br><span class="line">      map[c] = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      map[c]++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> l = <span class="number">0</span>, r = <span class="number">0</span>;                <span class="comment">// 左右指针</span></span><br><span class="line">  <span class="keyword">for</span> (; r &lt; s.<span class="property">length</span>; r++) &#123;      <span class="comment">// 主旋律扩张窗口，超出s串就结束</span></span><br><span class="line">    <span class="keyword">let</span> rightChar = s[r];          <span class="comment">// 获取right指向的新字符</span></span><br><span class="line">    <span class="keyword">if</span> (map[rightChar] !== <span class="literal">undefined</span>) map[rightChar]--; <span class="comment">// 是目标字符，它的缺失个数-1</span></span><br><span class="line">    <span class="keyword">if</span> (map[rightChar] == <span class="number">0</span>) missingType--;   <span class="comment">// 它的缺失个数新变为0，缺失的种类数就-1</span></span><br><span class="line">    <span class="keyword">while</span> (missingType == <span class="number">0</span>) &#123;                <span class="comment">// 当前窗口包含所有字符的前提下，尽量收缩窗口</span></span><br><span class="line">      <span class="keyword">if</span> (r - l + <span class="number">1</span> &lt; minLen) &#123;    <span class="comment">// 窗口宽度如果比minLen小，就更新minLen</span></span><br><span class="line">        minLen = r - l + <span class="number">1</span>;</span><br><span class="line">        start = l;                 <span class="comment">// 更新最小窗口的起点</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> leftChar = s[l];          <span class="comment">// 左指针要右移，左指针指向的字符要被丢弃</span></span><br><span class="line">      <span class="keyword">if</span> (map[leftChar] !== <span class="literal">undefined</span>) map[leftChar]++; <span class="comment">// 被舍弃的是目标字符，缺失个数+1</span></span><br><span class="line">      <span class="keyword">if</span> (map[leftChar] &gt; <span class="number">0</span>) missingType++;      <span class="comment">// 如果缺失个数新变为&gt;0，缺失的种类+1</span></span><br><span class="line">      l++;                          <span class="comment">// 左指针要右移 收缩窗口</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (start == s.<span class="property">length</span>) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> s.<span class="title function_">substring</span>(start, start + minLen); <span class="comment">// 根据起点和minLen截取子串</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="5-螺旋矩阵II"><a href="#5-螺旋矩阵II" class="headerlink" title="5. 螺旋矩阵II"></a>5. 螺旋矩阵II</h2><p>给你一个正整数 <code>n</code> ，生成一个包含 <code>1</code> 到 <code>n^2</code> 所有元素，且元素按顺时针顺序螺旋排列的 <code>n x n</code> 正方形矩阵 <code>matrix</code></p>
<p><img src="/images/2023-05-29-13-21-17-image.png"></p>
<div class="tabs" id="test59"><ul class="nav-tabs"><li class="tab active"><a href="#test59-1">示例1</a></li><li class="tab"><a href="#test59-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test59-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：n = 3</span><br><span class="line">输出：[[1,2,3],[8,9,4],[7,6,5]]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test59-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：n = 1</span><br><span class="line">输出：[[1]]</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h3><p>坚持循环不变量原则。</p>
<p>模拟顺时针画矩阵的过程:</p>
<ul>
<li>填充上行从左到右</li>
<li>填充右列从上到下</li>
<li>填充下行从右到左</li>
<li>填充左列从下到上</li>
</ul>
<p>这里一圈下来，我们要画每四条边，这四条边怎么画，每画一条边都要坚持一致的左闭右开，或者左开右闭的原则，这样这一圈才能按照统一的规则画下来。</p>
<h3 id="代码-13"><a href="#代码-13" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">n</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[][]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> generateMatrix = <span class="keyword">function</span>(<span class="params">n</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> startX = startY = <span class="number">0</span>;   <span class="comment">// 起始位置</span></span><br><span class="line">    <span class="keyword">let</span> loop = <span class="title class_">Math</span>.<span class="title function_">floor</span>(n/<span class="number">2</span>);   <span class="comment">// 旋转圈数</span></span><br><span class="line">    <span class="keyword">let</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>(n/<span class="number">2</span>);    <span class="comment">// 中间位置</span></span><br><span class="line">    <span class="keyword">let</span> offset = <span class="number">1</span>;    <span class="comment">// 控制每一层填充元素个数</span></span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">1</span>;     <span class="comment">// 更新填充数字</span></span><br><span class="line">    <span class="keyword">let</span> res = <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">0</span>).<span class="title function_">map</span>(<span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (loop--) &#123;</span><br><span class="line">        <span class="keyword">let</span> row = startX, col = startY;</span><br><span class="line">        <span class="comment">// 上行从左到右（左闭右开）</span></span><br><span class="line">        <span class="keyword">for</span> (; col &lt; startY + n - offset; col++) &#123;</span><br><span class="line">            res[row][col] = count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 右列从上到下（左闭右开）</span></span><br><span class="line">        <span class="keyword">for</span> (; row &lt; startX + n - offset; row++) &#123;</span><br><span class="line">            res[row][col] = count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 下行从右到左（左闭右开）</span></span><br><span class="line">        <span class="keyword">for</span> (; col &gt; startY; col--) &#123;</span><br><span class="line">            res[row][col] = count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 左列做下到上（左闭右开）</span></span><br><span class="line">        <span class="keyword">for</span> (; row &gt; startX; row--) &#123;</span><br><span class="line">            res[row][col] = count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新起始位置</span></span><br><span class="line">        startX++;</span><br><span class="line">        startY++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新offset</span></span><br><span class="line">        offset += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果n为奇数的话，需要单独给矩阵最中间的位置赋值</span></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">        res[mid][mid] = count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">n</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[][]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> generateMatrix = <span class="keyword">function</span>(<span class="params">n</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> l = <span class="number">0</span>, r = n - <span class="number">1</span>, t = <span class="number">0</span>, b = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> num = <span class="number">1</span>, tar = n * n;</span><br><span class="line">        <span class="keyword">let</span> mat = <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">0</span>).<span class="title function_">map</span>(<span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">while</span>(num &lt;= tar)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i = l; i &lt;= r; i++) mat[t][i] = num++; <span class="comment">// left to right.</span></span><br><span class="line">            t++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i = t; i &lt;= b; i++) mat[i][r] = num++; <span class="comment">// top to bottom.</span></span><br><span class="line">            r--;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i = r; i &gt;= l; i--) mat[b][i] = num++; <span class="comment">// right to left.</span></span><br><span class="line">            b--;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i = b; i &gt;= t; i--) mat[i][l] = num++; <span class="comment">// bottom to top.</span></span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mat;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>


<h3 id="相关题目-3"><a href="#相关题目-3" class="headerlink" title="相关题目"></a>相关题目</h3><h4 id="54-螺旋矩阵"><a href="#54-螺旋矩阵" class="headerlink" title="-54.螺旋矩阵"></a>-54.螺旋矩阵</h4><p>给你一个 <code>m</code> 行 <code>n</code> 列的矩阵 <code>matrix</code> ，请按照 <strong>顺时针螺旋顺序</strong> ，返回矩阵中的所有元素</p>
<p>提示：</p>
<ul>
<li><p>m == matrix.length</p>
</li>
<li><p>n == matrix[i].length</p>
</li>
<li><p>1 &lt;= m, n &lt;= 10</p>
</li>
<li><p>-100 &lt;= matrix[i][j] &lt;= 100</p>
</li>
</ul>
<div class="tabs" id="test54"><ul class="nav-tabs"><li class="tab active"><a href="#test54-1">示例1</a></li><li class="tab"><a href="#test54-2">示例2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test54-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class="line">输出：[1,2,3,6,9,8,7,4,5]]</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test54-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]</span><br><span class="line">输出：[1,2,3,4,8,12,11,10,9,5,6,7]</span><br></pre></td></tr></table></figure></div></div></div>

<h5 id="思路-14"><a href="#思路-14" class="headerlink" title="思路"></a>思路</h5><ul>
<li><p>如果一条边从头遍历到底，则下一条边遍历的起点随之变化</p>
</li>
<li><p>选择不遍历到底，可以减小横向、竖向遍历之间的影响</p>
</li>
<li><p>一轮迭代结束时，4条边的两端同时收窄 1</p>
</li>
<li><p>一轮迭代所做的事情变得很清晰：遍历一个“圈”，遍历的范围收缩为内圈</p>
</li>
<li><p>一层层向里处理，按顺时针依次遍历：上、右、下、左。</p>
</li>
<li><p>不再形成“环”了，就会剩下：一行或一列，然后单独判断</p>
</li>
</ul>
<p>四个边界</p>
<ul>
<li><p>上边界 top : 0</p>
</li>
<li><p>下边界 bottom : matrix.length - 1</p>
</li>
<li><p>左边界 left : 0</p>
</li>
<li><p>右边界 right : matrix[0].length - 1</p>
</li>
</ul>
<p>矩阵不一定是方阵</p>
<ul>
<li><p>top &lt; bottom &amp;&amp; left &lt; right 是循环的条件</p>
</li>
<li><p>无法构成“环”了，就退出循环，退出时可能是这 3 种情况之一：</p>
<ul>
<li><p>top == bottom &amp;&amp; left &lt; right —— 剩一行</p>
</li>
<li><p>top &lt; bottom &amp;&amp; left == right —— 剩一列</p>
</li>
<li><p>top == bottom &amp;&amp; left == right —— 剩一项（也算 一行/列）</p>
</li>
</ul>
</li>
<li><ul>
<li>处理剩下的单行或单列<ul>
<li><p>因为是按顺时针推入结果数组的，所以</p>
</li>
<li><p>剩下的一行，从左至右 依次推入结果数组</p>
</li>
<li><p>剩下的一列，从上至下 依次推入结果数</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="代码-14"><a href="#代码-14" class="headerlink" title="代码"></a>代码</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[][]</span>&#125; <span class="variable">matrix</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> spiralOrder = <span class="keyword">function</span>(<span class="params">matrix</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (matrix.<span class="property">length</span> === <span class="number">0</span>) <span class="keyword">return</span> []</span><br><span class="line">    <span class="keyword">const</span> res = []</span><br><span class="line">    <span class="keyword">let</span> top = <span class="number">0</span>, bottom = matrix.<span class="property">length</span> - <span class="number">1</span>, left = <span class="number">0</span>, right = matrix[<span class="number">0</span>].<span class="property">length</span> - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> (top &lt; bottom &amp;&amp; left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = left; i &lt; right; i++) res.<span class="title function_">push</span>(matrix[top][i])   <span class="comment">// 上层</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = top; i &lt; bottom; i++) res.<span class="title function_">push</span>(matrix[i][right]) <span class="comment">// 右层</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = right; i &gt; left; i--) res.<span class="title function_">push</span>(matrix[bottom][i])<span class="comment">// 下层</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = bottom; i &gt; top; i--) res.<span class="title function_">push</span>(matrix[i][left])  <span class="comment">// 左层</span></span><br><span class="line">        right--</span><br><span class="line">        top++</span><br><span class="line">        bottom--</span><br><span class="line">        left++  <span class="comment">// 四个边界同时收缩，进入内层</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (top === bottom) <span class="comment">// 剩下一行，从左到右依次添加</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = left; i &lt;= right; i++) res.<span class="title function_">push</span>(matrix[top][i])</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (left === right) <span class="comment">// 剩下一列，从上到下依次添加</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = top; i &lt;= bottom; i++) res.<span class="title function_">push</span>(matrix[i][left])</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>内容来源链接：<a href="https://leetcode.cn/problems/search-insert-position">力扣</a></p>
]]></content>
      <categories>
        <category>Algorithm</category>
        <category>Array</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Algorithm</tag>
        <tag>Array</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML notes</title>
    <url>/html-notes/</url>
    <content><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="1-HTML概念"><a href="#1-HTML概念" class="headerlink" title="1. HTML概念"></a>1. HTML概念</h2><p>HTML(HyperText Markup Language,超文本标记语言)是一种用来告知浏览器如何组织页面的标记语言</p>
<span id="more"></span>

<blockquote>
<p>HTML标签不区分大小写</p>
</blockquote>
<h2 id="2-HTML元素"><a href="#2-HTML元素" class="headerlink" title="2. HTML元素"></a>2. HTML元素</h2><p>由开始标签、内容、结束标签构成一个整体</p>
<ul>
<li><p>开始标签（Opening tag）：包含元素的名称，被&lt;&gt;包裹。开头标签标志着元素开始或开始生效的地方</p>
</li>
<li><p>内容（Content）：元素的内容</p>
</li>
<li><p>结束标签（Closing tag）：与开始标签相似，只是其在元素名之前包含一个/。这标志着该元素的结束</p>
</li>
</ul>
<h3 id="2-1-元素"><a href="#2-1-元素" class="headerlink" title="2.1 元素"></a>2.1 元素</h3><h4 id="lt-p-gt-元素"><a href="#lt-p-gt-元素" class="headerlink" title="&lt;p&gt; 元素"></a><code>&lt;p&gt;</code> 元素</h4><ul>
<li>定义段落<code>&lt;p&gt;&lt;/p&gt;</code></li>
</ul>
<h4 id="lt-h-gt-标题元素"><a href="#lt-h-gt-标题元素" class="headerlink" title="&lt;h&gt; 标题元素"></a><code>&lt;h&gt;</code> 标题元素</h4><ul>
<li><p>每个标题（Heading）都必须被包裹在一个标题元素中</p>
</li>
<li><p><code>&lt;h1&gt;</code>–<code>&lt;h6&gt;</code>:共六种标题元素标签，每个元素代表文档中不同级别的内容</p>
</li>
<li><p><code>&lt;h1&gt;</code> 也是一个语义元素，塌缩包裹的文本具有“页面上的顶级标题”的作用。</p>
</li>
<li><p>注意</p>
<ul>
<li><p>最好只对每个页面使用一次 <code>&lt;h1&gt;</code>——这是顶级标题，所有其他标题位于层次结构中的下方。</p>
</li>
<li><p>请确保在层次结构中以正确的顺序使用标题。不要使用 <code>&lt;h3&gt;</code> 来表示副标题，后面再跟 <code>&lt;h2&gt;</code> 来表示二级副标题——这是没有意义的，会导致奇怪的结果。</p>
</li>
<li><p>在现有的六个标题层次中，除非觉得有必要，否则应该争取每页使用不超过三个。有很多层次的文件（例如，深层次的标题层次）会变得笨重，难以浏览。在这种情况下，如果可能的话，建议将内容分散到多个页面。</p>
</li>
</ul>
</li>
</ul>
<h4 id="lt-ul-gt-无序列表标签"><a href="#lt-ul-gt-无序列表标签" class="headerlink" title="&lt;ul&gt; 无序列表标签"></a><code>&lt;ul&gt;</code> 无序列表标签</h4><ul>
<li><p><code>&lt;ul&gt;&lt;/ul&gt;</code>包裹所需要的清单项目</p>
</li>
<li><p><code>&lt;li&gt;&lt;/li&gt;</code> 把每个列出的项目单独包裹起来</p>
</li>
</ul>
<h4 id="lt-ol-gt-有序列表标签"><a href="#lt-ol-gt-有序列表标签" class="headerlink" title="&lt;ol&gt; 有序列表标签"></a><code>&lt;ol&gt;</code> 有序列表标签</h4><p>需要按照项目的顺序列出来</p>
<ul>
<li>结构与无序列表相同，但需要用<code>&lt;ol&gt;</code> 元素包裹所有项目</li>
</ul>
<blockquote>
<p>列表之间可以嵌套</p>
</blockquote>
<h4 id="lt-dl-gt-描述列表"><a href="#lt-dl-gt-描述列表" class="headerlink" title="&lt;dl&gt;描述列表"></a><code>&lt;dl&gt;</code>描述列表</h4><p>使用闭合标签<code>&lt;dl&gt;</code> ，此外，每一项都用 <code>&lt;dt&gt;</code> 元素闭合，每个描述都用 <code>&lt;dd&gt;</code> 元素闭合</p>
<ul>
<li><p>浏览器的默认样式会在描述列表的术语及其定义之间产生缩进</p>
</li>
<li><p>单个术语可以同时有多个描述</p>
</li>
</ul>
<h4 id="lt-img-gt-元素"><a href="#lt-img-gt-元素" class="headerlink" title="&lt;img&gt; 元素"></a><code>&lt;img&gt;</code> 元素</h4><p>是一个空元素，</p>
<ul>
<li>需要src使其生效，<code>src</code> 属性包含了图片的路径。</li>
</ul>
<blockquote>
<p><code>&lt;img src=&quot;&quot;&gt;</code> </p>
</blockquote>
<ul>
<li><p><code>alt</code> 对图片进行描述，用于图片无法显示或不能被看到的情况</p>
</li>
<li><p><code>title</code> 鼠标放置图片上显示信息</p>
</li>
<li><p>可通过<code>width</code>和<code>height</code>元素设置宽高，尽量使用CSS调整图片尺寸</p>
</li>
<li><p><code>srcset</code> 定义了浏览器可选择的图片设置及每个图片的大小，每张图片信息的设置要用逗号分隔。</p>
<p>每个设置为</p>
<ul>
<li><p>一个文件名</p>
</li>
<li><p>一个空格</p>
</li>
<li><p>图片的固有宽度</p>
</li>
</ul>
</li>
<li><p><code>sizes</code> 定义了一组媒体条件并且指明当前某些媒体条件为真时，最佳尺寸是多少</p>
</li>
</ul>
<h4 id="lt-figure-gt-元素"><a href="#lt-figure-gt-元素" class="headerlink" title="&lt;figure&gt; 元素"></a><code>&lt;figure&gt;</code> 元素</h4><p>为元素提供语义容器，在标题和图片之间建立关联 —— <code>&lt;figcaption&gt;</code>    </p>
<p>该元素中不一定要是图片，可以是一个独立内容单元</p>
<ul>
<li><p>用简洁、易懂的方式表达意图</p>
</li>
<li><p>可以置于页面线性流的某处</p>
</li>
<li><p>为主要内容提供重要的补充说明</p>
</li>
<li><p>可以是图片、代码、音频、方程等</p>
</li>
</ul>
<h4 id="lt-video-gt-元素"><a href="#lt-video-gt-元素" class="headerlink" title="&lt;video&gt; 元素"></a><code>&lt;video&gt;</code> 元素</h4><p>嵌入一段视频</p>
<p>属性</p>
<ul>
<li><p><code>src</code> 指向想要嵌入的视频资源地址</p>
</li>
<li><p><code>control</code> 控制视频的回放功能， 可用其来包含浏览器提供的控件页面</p>
</li>
<li><p>标签中内容：也称为后备内容，当浏览器不支持该标签时，就会显示该内容</p>
</li>
<li><p><code>autoplay</code> 会使视频内容立即播放</p>
</li>
<li><p><code>loop</code> 循环播放</p>
</li>
<li><p><code>muted</code> 媒体播放时，默认关闭声音</p>
</li>
<li><p><code>poster</code> 指向一个图像的URL，这个图像会在视频播放前显示，通常用于预览或广告</p>
</li>
<li><p><code>preload</code> 被用来缓冲较大的文件</p>
<ul>
<li><p><code>none</code> 不缓冲</p>
</li>
<li><p><code>auto</code> 页面加载后缓存媒体文件</p>
</li>
<li><p><code>metadata</code> 仅缓冲文件的元数据</p>
</li>
</ul>
</li>
</ul>
<h4 id="lt-audio-gt-元素"><a href="#lt-audio-gt-元素" class="headerlink" title="&lt;audio&gt; 元素"></a><code>&lt;audio&gt;</code> 元素</h4><p>同<code>video</code> 元素</p>
<p>注意：</p>
<ul>
<li><p>不支持<code>width/height</code>属性</p>
</li>
<li><p>不支持<code>poster</code>属性</p>
</li>
</ul>
<h4 id="lt-iframe-gt-元素"><a href="#lt-iframe-gt-元素" class="headerlink" title="&lt;iframe&gt; 元素"></a><code>&lt;iframe&gt;</code> 元素</h4><p>可以将其他Web文档嵌入到当前的文档中。</p>
<p>基本要素</p>
<ul>
<li><p><code>allowfullscreen</code> 可以通过全屏API设置为全屏模式</p>
</li>
<li><p><code>frameborder</code> 如设置为1，则会在此框架和其他框架之间绘制边框，默认行为；0删除边框</p>
</li>
<li><p><code>src</code> 与<code>&lt;video&gt;</code>元素表示文档中的图像，指向要嵌入文档的URL路径</p>
</li>
<li><p><code>sandbox</code> 提高安全性设置</p>
</li>
</ul>
<h4 id="lt-table-gt-表格元素"><a href="#lt-table-gt-表格元素" class="headerlink" title="&lt;table&gt; 表格元素"></a><code>&lt;table&gt;</code> 表格元素</h4><p><code>&lt;table&gt;&lt;/table&gt;</code></p>
<ul>
<li><p><code>&lt;tr&gt;</code> 元素（table row）</p>
</li>
<li><p>在表格中最小的内容容器是单元格，通过<code>&lt;td&gt;</code> 元素创建（table data）</p>
</li>
<li><p><code>&lt;th&gt;</code> 元素添加标题</p>
</li>
<li><p>属性 <code>colspan</code>,<code>rowspan</code> 可以控制单元格宽高</p>
</li>
<li><p><code>&lt;caption&gt;</code> 元素可以为表格添加标题，放在<code>&lt;table&gt;</code> 标签的下面</p>
</li>
</ul>
<p>采用<code>&lt;thead&gt;</code>,<code>&lt;tfoot&gt;</code>,<code>&lt;tbody&gt;</code>使表格结构更明确</p>
<ul>
<li><p><code>&lt;thead&gt;</code> 必须包住表格中作为表头的部分，一般是第一行，往往都是每列的标题</p>
<ul>
<li>若使用<code>&lt;col&gt;/&lt;colground&gt;</code> 元素，那么<code>&lt;thead&gt;</code> 元素需要在其下面</li>
</ul>
</li>
<li><p><code>&lt;tfoot&gt;</code> 元素需要包住表格中作为表脚的部分，一般是最后一行，往往是对前面所有行的总结</p>
</li>
<li><p><code>&lt;tbody&gt;</code> 元素需要包住表格内容中不再表头或表尾的其他部分</p>
</li>
</ul>
<h4 id="强调元素"><a href="#强调元素" class="headerlink" title="强调元素"></a>强调元素</h4><ol>
<li><p><code>&lt;em&gt;</code> 内容呈粗斜体</p>
</li>
<li><p><code>&lt;strong&gt;</code> 内容呈粗体</p>
</li>
</ol>
<h4 id="表象元素"><a href="#表象元素" class="headerlink" title="表象元素"></a>表象元素</h4><ul>
<li><p><code>&lt;i&gt;</code> 被用来传达传统上用斜体表达的意义：外国文字，分类名称，技术术语，一种思想……</p>
</li>
<li><p><code>&lt;b&gt;</code>被用来传达传统上用粗体表达的意义：关键字，产品名称，引导句……</p>
</li>
<li><p><code>&lt;u&gt;</code>被用来传达传统上用下划线表达的意义：专有名词，拼写错误……</p>
</li>
</ul>
<h4 id="换行和水平分割线"><a href="#换行和水平分割线" class="headerlink" title="换行和水平分割线"></a>换行和水平分割线</h4><p><code>&lt;br&gt;</code>：换行元素，可在段落中进行换行；唯一能够生成多个短行结构的元素</p>
<p><code>&lt;hr&gt;</code> ：主题性中断元素，在文档中生成一条水平分割线，表示文本中主题的变化</p>
<h4 id="缩略语"><a href="#缩略语" class="headerlink" title="缩略语"></a>缩略语</h4><p><code>&lt;abbr&gt;</code> 常被用来包裹一个缩略语或缩写，并且提供缩写的解释。</p>
<p>如果为缩写提供扩展信息的意义不大，而且该缩写或首字母缩写是一个相当简短的术语，则应提供该术语的完整扩展，作为 <code>title</code> 属性的值</p>
<h4 id="lt-address-gt-标记联系元素"><a href="#lt-address-gt-标记联系元素" class="headerlink" title="&lt;address&gt; 标记联系元素"></a><code>&lt;address&gt;</code> 标记联系元素</h4><p>仅仅包含联系方式，其中可以包含更复杂的标记和其他形式的联系方式</p>
<blockquote>
<p> <code>&lt;address&gt;</code>元素只能用于提供最近的 <code>&lt;article&gt;</code>)或<code>&lt;body&gt;</code>元素所含文件的联系信息。在一个网站的页脚使用它来包括整个网站的联系信息，或者在一篇文章里面使用它来包括作者的联系信息，这都是正确的，但不能用来标记与该页面内容无关的地址列表。</p>
</blockquote>
<h4 id="上下标元素"><a href="#上下标元素" class="headerlink" title="上下标元素"></a>上下标元素</h4><ul>
<li><p><code>&lt;sup&gt;</code></p>
</li>
<li><p><code>&lt;sub&gt;</code> </p>
</li>
</ul>
<h4 id="展示计算机代码"><a href="#展示计算机代码" class="headerlink" title="展示计算机代码"></a>展示计算机代码</h4><ul>
<li><p><code>&lt;code&gt;</code> 用于标记计算机通用代码</p>
</li>
<li><p><code>&lt;pre&gt;</code> 用于保留空白字符（通常用于代码块）——如果文本中使用了缩进或多余的空白，浏览器将忽略它，你将不会在呈现的页面上看到它。但是，如果你将文本包含在 <code>&lt;pre&gt;&lt;/pre&gt;</code> 标签中，那么空白将会以与你在文本编辑器中看到的相同的方式渲染出来。</p>
</li>
<li><p><code>&lt;var&gt;</code> 用于标记具体变量名。</p>
</li>
<li><p><code>&lt;kbd&gt;</code> 用于标记输入电脑的键盘（或其他类型）输入。</p>
</li>
<li><p><code>&lt;samp&gt;</code> 用于标记计算机程序的输出。</p>
</li>
</ul>
<h4 id="lt-time-gt-标记时间日期"><a href="#lt-time-gt-标记时间日期" class="headerlink" title="&lt;time&gt; 标记时间日期"></a><code>&lt;time&gt;</code> 标记时间日期</h4><p>支持将时间和日期标记为可供机器识别的格式</p>
<h3 id="2-2-嵌套元素"><a href="#2-2-嵌套元素" class="headerlink" title="2.2 嵌套元素"></a>2.2 嵌套元素</h3><p>    可以将元素放到其他元素之中，保证所有元素都正确的打开和关闭。</p>
<h3 id="2-3-块级元素和内联元素"><a href="#2-3-块级元素和内联元素" class="headerlink" title="2.3 块级元素和内联元素"></a>2.3 块级元素和内联元素</h3><h4 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h4><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5><ul>
<li><p>在页面中以块的形式展现</p>
</li>
<li><p>占据其父元素（容器）的整个水平空间，垂直空间等于其内容的高度</p>
</li>
<li><p>独占一行</p>
<ul>
<li><p>一个块级元素出现在它前面内容的新行上</p>
</li>
<li><p>任何跟在块级元素后面的内容也会出现在新的行上</p>
</li>
</ul>
</li>
<li><p>块级元素通常是页面上的结构元素</p>
</li>
<li><p>一个块级元素不会嵌套在一个内联元素里面</p>
</li>
<li><p>一个块级元素可能嵌套在另一个块级元素里面</p>
</li>
</ul>
<h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul>
<li>块级元素只能出现在<code>&lt;body&gt;</code>元素内</li>
</ul>
<h5 id="元素列表"><a href="#元素列表" class="headerlink" title="元素列表"></a>元素列表</h5><p><code>&lt;address&gt;</code></p>
<ul>
<li>联系方式信息</li>
</ul>
<p><code>&lt;article&gt;</code></p>
<ul>
<li> 文章内容</li>
</ul>
<p><code>&lt;aside&gt;</code></p>
<ul>
<li>伴随内容</li>
</ul>
<p><code>&lt;blockquote&gt;</code></p>
<ul>
<li>块引用</li>
</ul>
<p><code>&lt;dd&gt;</code></p>
<ul>
<li>定义列表中定义条目描述</li>
</ul>
<p><code>&lt;div&gt;</code></p>
<ul>
<li>文档分区</li>
</ul>
<p><code>&lt;dl&gt;</code></p>
<ul>
<li>定义列表</li>
</ul>
<p><code>&lt;fieldset&gt;</code></p>
<ul>
<li>表单元素分组</li>
</ul>
<p><code>&lt;figcaption&gt;</code></p>
<ul>
<li>图文信息组标题</li>
</ul>
<p><code>&lt;figure&gt;</code></p>
<ul>
<li>图文信息组</li>
</ul>
<p><code>&lt;footer&gt;</code></p>
<ul>
<li>区段尾或页尾</li>
</ul>
<p><code>&lt;form&gt;</code></p>
<ul>
<li>表单</li>
</ul>
<p><code>h1</code>-<code>h6</code></p>
<ul>
<li>标题级别 1-6</li>
</ul>
<p><code>&lt;header&gt;</code></p>
<ul>
<li>区段头或页头</li>
</ul>
<p><code>&lt;hgroup&gt;</code></p>
<ul>
<li>标题组</li>
</ul>
<p><code>&lt;hr&gt;</code></p>
<ul>
<li>水平分割线</li>
</ul>
<p><code>&lt;ol&gt;</code></p>
<ul>
<li>有序列表</li>
</ul>
<p><code>&lt;p&gt;</code></p>
<ul>
<li>行</li>
</ul>
<p><code>&lt;pre&gt;</code></p>
<ul>
<li>预格式化文本</li>
</ul>
<p><code>&lt;section&gt;</code></p>
<ul>
<li>一个页面区段</li>
</ul>
<p><code>&lt;table&gt;</code></p>
<ul>
<li>表格</li>
</ul>
<p><code>&lt;ul&gt;</code></p>
<ul>
<li>无序列表</li>
</ul>
<h4 id="内联元素"><a href="#内联元素" class="headerlink" title="内联元素"></a>内联元素</h4><h5 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h5><ul>
<li><p>通常出现在块级元素中并环绕文档内容的一小部分，而不是一整个段落或一组内容</p>
</li>
<li><p>内联元素不会导致文本换行</p>
</li>
<li><p>通常与文本一起使用</p>
</li>
</ul>
<h5 id="元素列表-1"><a href="#元素列表-1" class="headerlink" title="元素列表"></a>元素列表</h5><ul>
<li>b, big, i, small, tt</li>
<li>abbr, acronym, cite, code, dfn, em, kbd,<br>strong, samp, var</li>
<li><a href="#superlink">a</a>, bdo, br, img, map, object, q, script,<br>span, sub, sup</li>
<li>button, input, label, select, textarea</li>
</ul>
<h4 id="块级元素与行内元素的关键区别"><a href="#块级元素与行内元素的关键区别" class="headerlink" title="块级元素与行内元素的关键区别"></a>块级元素与行内元素的关键区别</h4><ul>
<li><p>格式</p>
<ul>
<li><p>默认情况下，块级元素会新起一行</p>
</li>
<li><p>默认情况下，行内元素不会以新行开始</p>
</li>
</ul>
</li>
<li><p>内容模型</p>
<ul>
<li><p>一般块级元素可以包含行内元素和其他块级元素。这种结构上的包含继承区别可以使块级元素创建比行内元素更“大型”的结构</p>
</li>
<li><p>一般行内元素只能包含数据和其他行内元素</p>
</li>
</ul>
</li>
</ul>
<h3 id="2-4-空元素"><a href="#2-4-空元素" class="headerlink" title="2.4 空元素"></a>2.4 空元素</h3><p>    一些元素只有一个表亲啊，通常用来在此元素所在位置插入/嵌入一些东西，这些元素被称为空元素</p>
<h2 id="3-属性"><a href="#3-属性" class="headerlink" title="3. 属性"></a>3. 属性</h2><p>    元素拥有属性，属性包含元素的额外信息，这些信息不会出现在实际的内容中</p>
<p>    属性必须包含</p>
<ul>
<li><p>一个空格：在属性和元素名称之间。如果一个元素具有多个属性，则每个属性之间必须用空格分隔</p>
</li>
<li><p>属性名称，后面添加等号=</p>
</li>
<li><p>一个属性值，由一对引号引起来</p>
</li>
</ul>
<h4 id="布尔属性"><a href="#布尔属性" class="headerlink" title="布尔属性"></a>布尔属性</h4><p>    布尔属性只能有一个值，这个值一般与属性名称相同</p>
<h2 id="4-HTML文档结构"><a href="#4-HTML文档结构" class="headerlink" title="4. HTML文档结构"></a>4. HTML文档结构</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的测试站点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我的页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol>
<li><p><code>&lt;!DOCTYPE html&gt;</code>声明文档类型。</p>
</li>
<li><p><code>&lt;html&gt;&lt;/html&gt;</code> :这个元素包裹了页面中所有内容，有时被称为根元素</p>
</li>
<li><p><code>&lt;head&gt;&lt;/head&gt;</code> :这个元素是一个容器，包含了所有想包含在HTML页面中但不在HTML页面中显示的内容。这些内容包括了关键字、页面描述、CSS样式、字符集声明等。</p>
</li>
<li><p><code>&lt;meta&gt;</code>:这个元素代表了不能由其他HTML元相关元素表示的元数据。</p>
</li>
<li><p><code>&lt;title&gt;&lt;/title&gt;</code> :设置了页面的标题，即出现在该页面加载的浏览器标签中的内容</p>
</li>
<li><p><code>&lt;body&gt;&lt;/body&gt;</code> :包含了你访问页面时所有显示在页面上的内容，包含文本、图片、视频、游戏、可播放音频轨道等等。</p>
</li>
</ol>
<h3 id="4-1HTML头部"><a href="#4-1HTML头部" class="headerlink" title="4.1HTML头部"></a>4.1HTML头部</h3><p>    HTML头部包含HTML <code>&lt;head&gt;</code> 元素的内容，与<code>&lt;body&gt;</code> 元素内容不同，页面在浏览器加载后它的内容不会显示，它的作用是保存页面的一些元数据。</p>
<h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>    采用<code>&lt;title&gt;</code> 元素为文档添加标题</p>
<ul>
<li><p><code>&lt;h1&gt;</code> (en-US)元素在页面加载完毕时显示在页面中，通常只出现一次，用来标记页面内容的标题（故事名称、新闻摘要等等）。</p>
</li>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/title"><code>&lt;title&gt;</code></a> 元素是一项元数据，用于表示整个 HTML 文档的标题（而不是文档内容）。</p>
</li>
</ul>
<h4 id="元数据-lt-meta-gt-元素"><a href="#元数据-lt-meta-gt-元素" class="headerlink" title="元数据&lt;meta&gt; 元素"></a>元数据<code>&lt;meta&gt;</code> 元素</h4><p>    元数据就是描述数据的数据</p>
<h5 id="指定文档中的字符编码"><a href="#指定文档中的字符编码" class="headerlink" title="指定文档中的字符编码"></a>指定文档中的字符编码</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt; </span><br></pre></td></tr></table></figure>

<p>    用改元素指定了文档中被允许使用的字符集，<code>&lt;utf-8&gt;</code> 是一个通用的字符集，包含了任何人类语言中的大部分的字符，意味着web页面可以显示任意的语言。</p>
<blockquote>
<p> 一些浏览器（比如 Chrome）会自动修正错误的编码，所以根据你所使用的浏览器不同，你或许不会看到这个问题。无论如何，你仍然应该为你的页面手动设置编码为 <code>utf-8</code>，来避免在其他浏览器中可能出现的问题。</p>
</blockquote>
<h5 id="添加作者和描述"><a href="#添加作者和描述" class="headerlink" title="添加作者和描述"></a>添加作者和描述</h5><p>    <code>&lt;meta&gt;</code> 元素包含了<code>name</code> 和 <code>content</code> 属性</p>
<ul>
<li><code>name</code> 指定了 meta 元素的类型；说明该元素包含了什么类型的信息。</li>
<li><code>content</code> 指定了实际的元数据内容。</li>
</ul>
<h5 id="自定义图标"><a href="#自定义图标" class="headerlink" title="自定义图标"></a>自定义图标</h5><p>    可在元数据中添加对自定义图标的引用，最常见的用例为favicon</p>
<p>    页面添加网页图标的方式有：</p>
<ol>
<li><p>将其保存在与网站的索引页面相同的目录中，以 <code>.ico</code> 格式保存（大多数浏览器支持更通用的格式，如 <code>.gif</code> 或 <code>.png</code>）</p>
</li>
<li><p>将以下行添加到 HTML 的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/head"><code>&lt;head&gt;</code></a> 块中以引用它：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;icon&quot; href=&quot;favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="4-2-应用CSS和JS"><a href="#4-2-应用CSS和JS" class="headerlink" title="4.2 应用CSS和JS"></a>4.2 应用CSS和JS</h3><p>    采用<code>&lt;link&gt;</code> 元素和 <code>&lt;script&gt;</code> 元素</p>
<ul>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/link"><code>&lt;link&gt;</code></a> 元素经常位于文档的头部，它有 2 个属性，<code>rel=&quot;stylesheet&quot;</code> 表明这是文档的样式表，而 <code>href</code> 包含了样式表文件的路径：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;my-css-file.css&quot; /&gt;</span><br></pre></td></tr></table></figure></li>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script"><code>&lt;script&gt;</code></a> 元素也应当放在文档的头部，并包含 <code>src</code> 属性来指向需要加载的 JavaScript 文件路径，同时最好加上 <code>defer</code> 以告诉浏览器在解析完成 HTML 后再加载 JavaScript。这样可以确保在加载脚本之前浏览器已经解析了所有的 HTML 内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;my-js-file.js&quot; defer&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<blockquote>
<p> <code>&lt;script&gt;</code> 元素看起来像一个空元素，但它并不是，因此需要一个结束标记。还可以选择将脚本放入 <code>&lt;script&gt;</code> 元素中，而不是指向外部脚本文件。</p>
</blockquote>
<h3 id="4-3-设置主语言"><a href="#4-3-设置主语言" class="headerlink" title="4.3 设置主语言"></a>4.3 设置主语言</h3><p>    通过添加lang属性到HTML标签</p>
<h3 id="文档的基本组成部分"><a href="#文档的基本组成部分" class="headerlink" title="文档的基本组成部分"></a>文档的基本组成部分</h3><ul>
<li><p>页眉</p>
<ul>
<li>通常横跨于整个页面顶部有一个大标题 和/或 一个标志。这是网站的主要一般信息，通常存在于所有网页。</li>
</ul>
</li>
<li><p>导航栏</p>
<ul>
<li>指向网站各个主要区段的超链接。通常用菜单按钮、链接或标签页表示。类似于标题栏，导航栏通常应在所有网页之间保持一致。</li>
</ul>
</li>
<li><p>主内容</p>
<ul>
<li>中心的大部分区域是当前网页大多数的独有内容，例如视频、文章、地图、新闻等。这些内容是网站的一部分，且会因页面而异。</li>
</ul>
</li>
<li><p>侧边栏</p>
<ul>
<li>一些外围信息、链接、引用、广告等。通常与主内容相关（例如一个新闻页面上，侧边栏可能包含作者信息或相关文章链接），还可能存在其他的重复元素，如辅助导航系统。</li>
</ul>
</li>
<li><p>页脚</p>
<ul>
<li>横跨页面底部的狭长区域。和标题一样，页脚是放置公共信息（比如版权声明或联系方式）的，一般使用较小字体，且通常为次要内容。</li>
</ul>
</li>
</ul>
<h4 id="HTML构建内容"><a href="#HTML构建内容" class="headerlink" title="HTML构建内容"></a>HTML构建内容</h4><p>为了实现语义化标记，HTML 提供了明确这些区段的专用标签，如：</p>
<ul>
<li><p><code>&lt;header&gt;</code>：页眉。</p>
<blockquote>
<p>简介形式的内容。如果它是 <code>&lt;body&gt;</code>的子元素，那么就是网站的全局页眉。如果它是<code>&lt;article&gt;</code>或<code>&lt;section&gt;</code>的子元素，那么它是这些部分特有的页眉</p>
</blockquote>
</li>
<li><p><code>&lt;nav&gt;</code>：导航栏。</p>
</li>
<li><p><code>&lt;main&gt;</code>：主内容。主内容中还可以有各种子内容区段，可用<code>&lt;article&gt;</code> 和<code>&lt;div&gt;</code>等元素表示。</p>
<blockquote>
<p>存放每个页面独有的内容。每个页面上只能用一次 <code>&lt;main&gt;</code>，且直接位于<code>&lt;body&gt;</code>中。最好不要把它嵌套进其他元素。</p>
</blockquote>
</li>
<li><p><code>&lt;aside&gt;</code>：侧边栏，经常嵌套在<code>&lt;main&gt;</code> 中。</p>
</li>
<li><p><code>&lt;footer&gt;</code>：页脚。</p>
</li>
<li><p><code>&lt;section&gt;</code> 与 <code>&lt;article&gt;</code> 类似，但 <code>&lt;section&gt;</code> 更适用于组织页面使其按功能（比如迷你地图、一组文章标题和摘要）分块。一般的最佳用法是：以 标题作为开头；也可以把一篇 <code>&lt;article&gt;</code> 分成若干部分并分别置于不同的 <code>&lt;section&gt;</code> 中，也可以把一个区段 <code>&lt;section&gt;</code> 分成若干部分并分别置于不同的 <code>&lt;article&gt;</code> 中，取决于上下文。</p>
</li>
<li><p><code>&lt;span&gt;</code>是一个内联的（inline）无语义元素，最好只用于无法找到更好的语义元素来包含内容时，或者不想增加特定的含义时。</p>
</li>
<li><p><code>&lt;div&gt;</code>是一个块级无语义元素，应仅用于找不到更好的块级元素时，或者不想增加特定的意义时。</p>
</li>
</ul>
<h2 id="5-特殊字符"><a href="#5-特殊字符" class="headerlink" title="5. 特殊字符"></a>5. 特殊字符</h2><p>    在HTML中，特殊字符需要防止被浏览器视为代码。</p>
<p>    使用字符引用——表示字符的特殊编码，每个字符引用以符号&amp;开始，以分号；结束。</p>
<blockquote>
<p>只要HTML的字符编码设置为UTF-8，就不需要为任何其他字符使用实体引用</p>
</blockquote>
<table>
<thead>
<tr>
<th>原义字符</th>
<th>等价字符引用</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;</td>
<td><code>&amp;lt;</code></td>
</tr>
<tr>
<td>&gt;</td>
<td><code>&amp;gt;</code></td>
</tr>
<tr>
<td>“</td>
<td><code>&amp;quot;</code></td>
</tr>
<tr>
<td>‘</td>
<td><code>&amp;apos;</code></td>
</tr>
<tr>
<td>&amp;</td>
<td><code>&amp;amp;</code></td>
</tr>
</tbody></table>
<h2 id="6-HTML注释"><a href="#6-HTML注释" class="headerlink" title="6. HTML注释"></a>6. HTML注释</h2><p>    HTML拥有在代码中写注释的机制，为了将HTML中的一段内容置为注释，需要用<code>&lt;!--</code>和<code>--&gt;</code>包裹起来</p>
<h2 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7. 超链接"></a>7. 超链接</h2><p id="superlink">超链接</p>使文档连接到任何其他文档（或其他资源），可链接到文档的指定部分。

<p>几乎任何网络内容都可以转换为链接，点击超链接将使网络浏览器转到另一个网址（URL）</p>
<blockquote>
<p>URL 可以指向 HTML 文件、文本文件、图像、文本文档、视频和音频文件以及可以在网络上保存的任何其他内容。如果浏览器不知道如何显示或处理文件，它会询问你是否要打开文件（需要选择合适的本地应用来打开或处理文件）或下载文件（以后处理它）。</p>
</blockquote>
<h3 id="7-1-链接解析"><a href="#7-1-链接解析" class="headerlink" title="7.1 链接解析"></a>7.1 链接解析</h3><p>通过将文本或其他内容包裹在 <code>&lt;a&gt;</code> 元素内，并给其一个包含网址的 <code>href</code> 属性(也称为超文本引用或目标)来创建一个基本链接。</p>
<h4 id="块级链接"><a href="#块级链接" class="headerlink" title="块级链接"></a>块级链接</h4><p>将其包裹在锚点元素 <code>&lt;a&gt;</code> 内</p>
<h4 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h4><p>使用 <code>&lt;a&gt;</code> 元素来包裹要引用图片的 <code>&lt;img&gt;</code> 元素</p>
<h4 id="title属性添加支持信息"><a href="#title属性添加支持信息" class="headerlink" title="title属性添加支持信息"></a>title属性添加支持信息</h4><p>链接中可添加<code>title</code>属性，包含关于链接的补充信息，当鼠标指针悬停在链接上时，标题将作为提示信息出现</p>
<h3 id="7-2-统一资源定位符（URL）与路径（path）"><a href="#7-2-统一资源定位符（URL）与路径（path）" class="headerlink" title="7.2 统一资源定位符（URL）与路径（path）"></a>7.2 统一资源定位符（URL）与路径（path）</h3><p>统一资源定位符（Uniform Resource Locator，URL）是一个定义了在网络上的位置的一个文本字符串</p>
<p>URL使用路径查找文件</p>
<ul>
<li><p>指向当前目录，只需要指定想要链接的文件名</p>
</li>
<li><p>指向子目录，需要采用层级向下的方式链接文件名</p>
</li>
<li><p>指向上级目录，需要采用../的方式逐级查找</p>
</li>
</ul>
<blockquote>
<p>如果需要，你可以将这些功能的多个实例组合成复杂的 URL。例如 <code>../../../complex/path/to/my/file.html</code>。</p>
</blockquote>
<h4 id="绝对URL和相对URL"><a href="#绝对URL和相对URL" class="headerlink" title="绝对URL和相对URL"></a>绝对URL和相对URL</h4><p>绝对URL（绝对链接）</p>
<ul>
<li><p>指向由其Web上的绝对位置定义的位置，包括协议和域名。</p>
</li>
<li><p>不管绝对URL在哪使用，它总指向确定的相同位置。</p>
</li>
</ul>
<p>相对URL（相对链接）</p>
<ul>
<li><p>指向与链接的文件相关的位置</p>
</li>
<li><p>一个相对的URL将指向不同的位置，这取决于引用文件的实际位置</p>
</li>
</ul>
<h4 id="文档片段"><a href="#文档片段" class="headerlink" title="文档片段"></a>文档片段</h4><p>超链接除了可以链接到文档外，也可以连接到HTML文档的特定部分（也被称为文档片段）</p>
<p>必须给要链接到的元素分配一个id属性</p>
<h4 id="使用download属性下载链接"><a href="#使用download属性下载链接" class="headerlink" title="使用download属性下载链接"></a>使用download属性下载链接</h4><p>当链接到要下载的资源而不是在浏览器中打开时，使用<code>download</code>属性来提供一个默认保存文件名。</p>
<h3 id="7-3-电子邮件链接"><a href="#7-3-电子邮件链接" class="headerlink" title="7.3 电子邮件链接"></a>7.3 电子邮件链接</h3><p>当点击一个链接或按钮时，可能会开启新的邮件的发送而不是链接到一个资源或页面，需要采用<code>&lt;a&gt;</code>元素和<code>mailto:</code>URL协议实现</p>
<p>其最基本和最常用的使用形式为一个指明收件人电子邮件地址的 <code>mailto:</code> 链接。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;mailto:nowhere@mozilla.org&quot;&gt;向 nowhere 发邮件&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>电子邮件的地址是可选的</li>
</ul>
<h4 id="指定详细信息"><a href="#指定详细信息" class="headerlink" title="指定详细信息"></a>指定详细信息</h4><p>除了电子邮件地址，你还可以提供其他信息。事实上，任何标准的邮件头字段可以被添加到你提供的 <code>mailto</code> URL 中。其中最常用的是主题（subject）、抄送（cc）和主体（body）（这不是一个真正的标头字段，但允许你为新邮件指定一个简短的内容消息）。每个字段及其值被指定为查询项。</p>
<p>下面是一个包含 cc、bcc、主题和主体的示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a</span><br><span class="line">  href=&quot;mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&amp;bcc=name3@rapidtables.com&amp;subject=The%20subject%20of%20the%20email&amp;body=The%20body%20of%20the%20email&quot;&gt;</span><br><span class="line">  发送含有 cc、bcc、主题和主体的邮件</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>每个字段的值必须使用 URL 编码，即使用百分号转义的非打印字符（不可见字符如制表符、换行符、分页符）和空格。同时注意使用问号（<code>?</code>）来分隔主 URL 与参数值，以及使用 &amp; 符来分隔 <code>mailto:</code> URL 中的各个参数。这是标准的 URL 查询标记方法。</p>
</blockquote>
<h2 id="8-引用"><a href="#8-引用" class="headerlink" title="8. 引用"></a>8. 引用</h2><p>HTML存在用于标记引用的特性</p>
<h3 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h3><p>如果一个块级内容（一个段落、多个段落、一个列表等）从其他地方被引用，你应该把它用 [<code>&lt;blockquote&gt;</code>]元素包裹起来表示，并且在 <code>cite</code>属性里用 URL 来指向引用的资源。</p>
<h3 id="行内引用"><a href="#行内引用" class="headerlink" title="行内引用"></a>行内引用</h3><p>除了使用 <code>&lt;q&gt;</code> 元素以外，行内元素用同样的方式工作</p>
<h3 id="引文"><a href="#引文" class="headerlink" title="引文"></a>引文</h3><p><code>cite</code> 属性需要配合JS、CSS，否则浏览器无法显示cite的内容</p>
<p>引文默认的字体样式为斜体</p>
]]></content>
      <categories>
        <category>Frontend Notes</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>前端</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(十五)</title>
    <url>/responsive-web-dedign-%E5%8D%81%E4%BA%94/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-CSS-Transforms-by-Building-a-Penguin"><a href="#Learn-CSS-Transforms-by-Building-a-Penguin" class="headerlink" title="Learn CSS Transforms by Building a Penguin"></a>Learn CSS Transforms by Building a Penguin</h4><span id="more"></span>

<ol>
<li><p>You will be building a happy Flappy Penguin, and further exploring CSS transforms and animations in the process.</p>
<p>Begin with your basic HTML boilerplate. Include the <code>DOCTYPE</code> declaration, <code>html</code> element with a language set to English, the appropriate <code>meta</code> tags, a <code>head</code>, <code>body</code>, and <code>title</code> element. Also, link your stylesheet to the page.</p>
</li>
<li><p>Target the <code>body</code> element to set the <code>background</code> to a linear gradient angled 45 degrees clockwise, starting at <code>rgb(118, 201, 255)</code> and ending at <code>rgb(247, 255, 222)</code>.</p>
</li>
<li><p>Normalise your page’s sizing, by removing the <code>body</code> element’s <code>margin</code> and <code>padding</code>.</p>
</li>
<li><p>Normalise your page, by setting the <code>width</code> to <code>100%</code>, and <code>height</code> to <code>100vh</code>.</p>
</li>
<li><p>Remove both the horizontal and vertical scrollbars, using only one property.</p>
</li>
<li><p>Within the <code>body</code>, add a <code>div</code> with a <code>class</code> of <code>ground</code>.</p>
</li>
<li><p>Target the <code>.ground</code> element, and set its <code>width</code> to take up the full width of the viewport. Then, set the <code>height</code> to <code>400px</code>.</p>
</li>
<li><p>Give the <code>.ground</code> element a <code>background</code> with a linear gradient angled 90 degrees clockwise, starting at <code>rgb(88, 175, 236)</code> and ending at <code>rgb(182, 255, 255)</code>.</p>
</li>
<li><p>As the <code>.ground</code> element will be third in the stacking context of the page layout, set its <code>z-index</code> to <code>3</code>, and <code>position</code> to <code>absolute</code>.</p>
</li>
<li><p>Above the <code>.ground</code> element, add a <code>div</code> with a <code>class</code> of <code>penguin</code>. This <code>div</code> will contain Flappy Penguin.</p>
</li>
<li><p>Target the <code>.penguin</code> element, and set its <code>width</code> and <code>height</code> to <code>300px</code>.</p>
</li>
<li><p>Use the <code>margin</code> property to horizontally center the <code>.penguin</code> element, and set the <code>margin-top</code> to <code>75px</code>.</p>
</li>
<li><p>To create some scenery in the background, you will add two mountains.</p>
<p>Above the <code>.penguin</code> element, add a <code>div</code> with a <code>class</code> of <code>left-mountain</code>.</p>
</li>
<li><p>Target the <code>.left-mountain</code> element, and set its <code>width</code> and <code>height</code> to <code>300px</code>. Then, set the <code>background</code> to a linear gradient starting at <code>rgb(203, 241, 228)</code> and ending at <code>rgb(80, 183, 255)</code>.</p>
</li>
<li><p>To prevent the mountain from pushing the <code>.ground</code> element, adjust its <code>position</code> to prevent it from taking up space in the page layout.</p>
</li>
<li><p>To make the mountain look more like a mountain, you can use the <code>skew</code> transform function, which takes two arguments. The first being an angle to shear the x-axis by, and the second being an angle to shear the y-axis by.</p>
<p>Use the <code>transform</code> property to skew the mountain by <code>0deg</code> in the x-axis and <code>44deg</code> in the y-axis.</p>
</li>
<li><p>Set the stack level of the mountain element such that it remains directly behind the <code>.ground</code> element.</p>
</li>
<li><p>To overlap the mountain and <code>.ground</code> elements better, give the mountain a <code>margin-top</code> of <code>100px</code>, and the <code>.ground</code> element a <code>margin-top</code> of <code>-58px</code>.</p>
</li>
<li><p>To give the effect of a mountain range, add another mountain, by creating a new <code>div</code> immediately after <code>.left-mountain</code>, and give the new <code>div</code> the <code>class</code> of <code>back-mountain</code>.</p>
</li>
<li><p>Target the <code>.back-mountain</code> element, and set its <code>width</code> and <code>height</code> to <code>300px</code>. Then, set the <code>background</code> to a linear gradient starting at <code>rgb(203, 241, 228)</code> and ending at <code>rgb(47, 170, 255)</code>.</p>
</li>
<li><p>Set the <code>position</code> property of the <code>.back-mountain</code> to prevent it from taking up space in the page layout.</p>
</li>
<li><p>Change the stack level of the <code>.back-mountain</code> element such that it is directly behind the <code>.left-mountain</code> element.</p>
</li>
<li><p>Rotate the <code>.back-mountain</code> element by <code>45deg</code> clockwise. Then, give it a <code>left</code> property of <code>110px</code>, and a <code>top</code> property of <code>225px</code>.</p>
</li>
<li><p>Rotate the <code>.back-mountain</code> element by <code>45deg</code> clockwise. Then, give it a <code>left</code> property of <code>110px</code>, and a <code>top</code> property of <code>225px</code>.</p>
</li>
<li><p>Give the <code>.sun</code> element a <code>width</code> and <code>height</code> of <code>200px</code>, and a <code>background-color</code> of <code>yellow</code>.</p>
</li>
<li><p>Set the <code>position</code> property of the sun to prevent it from taking up space in the page layout, and set the <code>border-radius</code> such that the sun’s shape is a circle.</p>
</li>
<li><p>Position the sun in the top right corner of the screen such that <code>75px</code> of its top and right edges are off screen.</p>
</li>
<li><p>Your penguin will consist of two main sections: the head, and the body.</p>
<p>Within <code>.penguin</code>, add two new <code>div</code> elements. The first with a <code>class</code> of <code>penguin-head</code>, and the second with a <code>class</code> of <code>penguin-body</code>.</p>
</li>
<li><p>Change the stack level of the <code>.penguin</code> element such that it appears in front of the <code>.ground</code> element, and give it a <code>position</code> of <code>relative</code>.</p>
</li>
<li><p>Target the <code>.penguin-head</code> element, and give it a <code>width</code> half of its parent’s, and a <code>height</code> of <code>45%</code>. Then, set the <code>background</code> to a linear gradient at <code>45deg</code> starting at <code>gray</code>, and ending at <code>rgb(239, 240, 228)</code>.</p>
</li>
<li><p><em>Most</em> penguins do not have a square head.</p>
<p>Give the penguin a slightly oval head by setting the radius of the top corners to <code>70%</code> and the radius of the bottom corners to <code>65%</code>.</p>
</li>
<li><p>Target the <code>.penguin-body</code> element, and give it a <code>width</code> of <code>53%</code>, and a <code>height</code> of <code>45%</code>. Then, set the <code>background</code> to a linear gradient at <code>45deg</code>, <code>rgb(134, 133, 133)</code> from <code>0%</code>, <code>rgb(234, 231, 231)</code> from <code>25%</code>, and <code>white</code> from <code>67%</code>.</p>
</li>
<li><p>Another interesting fact about penguins is that they do not have square bodies.</p>
<p>Use the <code>border-radius</code> property with a value of <code>80% 80% 100% 100%</code>, to give the penguin a slightly rounded body.</p>
</li>
<li><p>Target all descendent elements of the <code>.penguin</code> element, and give them a <code>position</code> of <code>absolute</code>.</p>
</li>
<li><p>Position the <code>.penguin-head</code> element <code>10%</code> from the top, and <code>25%</code> from the left of its parent.</p>
</li>
<li><p>Position the <code>.penguin-body</code> element <code>40%</code> from the top, and <code>23.5%</code> from the left of its parent.</p>
</li>
<li><p>Position the <code>.penguin-body</code> element <code>40%</code> from the top, and <code>23.5%</code> from the left of its parent.</p>
</li>
<li><p>To give the penguin body a crest, create a pseudo-element that is the first child of the <code>.penguin-body</code> element. Set the <code>content</code> property of the pseudo-element to an empty string.</p>
</li>
<li><p>Position the pseudo-element relative to its closest positioned ancestor.</p>
</li>
<li><p>Give the pseudo-element a <code>width</code> half that of its parent, a <code>height</code> of <code>45%</code>, and a <code>background-color</code> of <code>gray</code>.</p>
</li>
<li><p>Position the pseudo-element <code>10%</code> from the top and <code>25%</code> from the left of its parent.</p>
</li>
<li><p>Position the pseudo-element <code>10%</code> from the top and <code>25%</code> from the left of its parent.</p>
</li>
<li><p>Increase the pseudo-element’s transparency by <code>30%</code>.</p>
</li>
<li><p>Start the penguin’s face, by adding two <code>div</code> elements within <code>.penguin-head</code>, and giving them both a <code>class</code> of <code>face</code>.</p>
</li>
<li><p>Give the <code>.face</code> elements a <code>width</code> of <code>60%</code>, a <code>height</code> of <code>70%</code>, and a <code>background-color</code> of <code>white</code>.</p>
</li>
<li><p>Make the top corners of the <code>.face</code> elements have a radius of <code>70%</code>, and the bottom corners have a radius of <code>60%</code>.</p>
</li>
<li><p>Position the <code>.face</code> elements so that they are <code>15%</code> from the top.</p>
</li>
<li><p>Currently, the two <code>.face</code> elements are on top of each other.</p>
<p>Fix this, by adding a <code>class</code> of <code>left</code> to the first <code>.face</code> element, and a <code>class</code> of <code>right</code> to the second <code>.face</code> element.</p>
</li>
<li><p>Target the <code>.face</code> element with the <code>left</code> class, and position it <code>5%</code> left of its parent.</p>
</li>
<li><p>Target the <code>.face</code> element with the <code>right</code> class, and position it <code>5%</code> right of its parent.</p>
</li>
<li><p>Target the <code>.face</code> element with the <code>right</code> class, and position it <code>5%</code> right of its parent.</p>
</li>
<li><p>Target the <code>.chin</code> element, and give it a <code>width</code> of <code>90%</code>, <code>height</code> of <code>70%</code>, and <code>background-color</code> of <code>white</code>.</p>
</li>
<li><p>Position the <code>.chin</code> element such that it is <code>25%</code> from the top, and <code>5%</code> from the left of its parent. Then, give the top corners a radius of <code>70%</code>, and the bottom corners a radius of <code>100%</code>.</p>
</li>
<li><p>So far, the <code>.face</code> and <code>.chin</code> elements have the same <code>background-color</code>.</p>
<p>Create a custom CSS property called <code>--penguin-face</code>, and set it to <code>white</code>.</p>
</li>
<li><p>Where relevant, replace property values with your <code>--penguin-face</code> variable.</p>
</li>
<li><p>Below the <code>.chin</code> element, add two <code>div</code> elements each with a <code>class</code> of <code>eye</code>. Also, give the first <code>.eye</code> element a <code>class</code> of <code>left</code>, and the second <code>.eye</code> element a <code>class</code> of <code>right</code>.</p>
</li>
<li><p>Target the <code>.eye</code> elements, and give them a <code>width</code> of <code>15%</code>, <code>height</code> of <code>17%</code>, and <code>background-color</code> of <code>black</code>.</p>
</li>
<li><p>Position the <code>.eye</code> elements <code>45%</code> from the top of their parent, and give all corners a radius of <code>50%</code>.</p>
</li>
<li><p>Target the <code>.eye</code> element with the <code>left</code> class, and position it <code>25%</code> from the left of its parent. Then, target the <code>.eye</code> element with the <code>right</code> class, and position it <code>25%</code> from the right of its parent.</p>
</li>
<li><p>Within each <code>.eye</code> element, add a <code>div</code> with a <code>class</code> of <code>eye-lid</code>.</p>
</li>
<li><p>Target the <code>.eye-lid</code> elements, and give them a <code>width</code> of <code>150%</code>, <code>height</code> of <code>100%</code>, and <code>background-color</code> of <code>--penguin-face</code>.</p>
</li>
<li><p>Position the <code>.eye-lid</code> elements <code>25%</code> from the top, and <code>-23%</code> from the left of their parents. Then, give all corners a radius of <code>50%</code>.</p>
</li>
<li><p>Below the <code>.eye.right</code> element, add two <code>div</code> elements each with a <code>class</code> of <code>blush</code>. Also, give the first <code>.blush</code> element a <code>class</code> of <code>left</code>, and the second <code>.blush</code> element a <code>class</code> of <code>right</code>.</p>
</li>
<li><p>Target the <code>.blush</code> elements, and give them a <code>width</code> of <code>15%</code>, <code>height</code> of <code>10%</code>, and <code>background-color</code> of <code>pink</code>.</p>
</li>
<li><p>Position the <code>.blush</code> elements <code>65%</code> from the top of their parent, and give all corners a radius of <code>50%</code>.</p>
</li>
<li><p>Target the <code>.blush</code> element with a <code>class</code> of <code>left</code>, and position it <code>15%</code> left of its parent. Then, target the <code>.blush</code> element with a <code>class</code> of <code>right</code>, and position it <code>15%</code> right of its parent.</p>
</li>
<li><p>Below the <code>.blush.right</code> element, add two <code>div</code> elements each with a <code>class</code> of <code>beak</code>. Also, give the first <code>.beak</code> element a <code>class</code> of <code>top</code>, and the second <code>.beak</code> element a <code>class</code> of <code>bottom</code>.</p>
</li>
<li><p>Target the <code>.beak</code> elements, and give them a <code>height</code> of <code>10%</code>, <code>background-color</code> of <code>orange</code>, and give all corners a radius of <code>50%</code>.</p>
</li>
<li><p>Target the <code>.beak</code> element with a <code>class</code> of <code>top</code>, give it a <code>width</code> of <code>20%</code>, and position it <code>60%</code> from the top, and <code>40%</code> from the left of its parent.</p>
</li>
<li><p>Target the <code>.beak</code> element with a <code>class</code> of <code>bottom</code>, and give it a <code>width</code> <code>4%</code> smaller than <code>.beak.top</code>, <code>5%</code> further from the top, and <code>2%</code> further from the left of its parent than <code>.beak.top</code>.</p>
</li>
<li><p>The penguin’s body looks a bit plain. Spruce him up by adding a <code>div</code> element with a <code>class</code> of <code>shirt</code>, immediately before the <code>.penguin-body</code> element.</p>
</li>
<li><p>Within the <code>.shirt</code> element, add a <code>div</code> with the following emoji as content: 💜</p>
</li>
<li><p>Within <code>.shirt</code>, after the <code>div</code> element, add a <code>p</code> element with the following content: <code>I CSS</code></p>
</li>
<li><p>Target the <code>.shirt</code> element, and set its <code>font-size</code> to <code>25px</code>, <code>font-family</code> to <code>Helvetica</code> with a fallback of <code>sans-serif</code>, and <code>font-weight</code> to <code>bold</code>.</p>
</li>
<li><p>In some browsers, the <em>heart</em> emoji may look slightly different from the previous step. This is because some of the character’s properties were overridden by the <code>font-weight</code> style of <code>bold</code>.</p>
<p>Fix this, by targeting the <code>div</code> with the heart emoji, and setting its <code>font-weight</code> to its original value.</p>
</li>
<li><p>Position the <code>div</code> with the heart emoji <code>22.5px</code> from the top, and <code>12px</code> from the left of its parent.</p>
</li>
<li><p>Position the <code>.shirt</code> element <code>165px</code> from the top, and <code>127.5px</code> from the left of its parent. Then, increase its stacking order such that it appears above the <code>.penguin-body</code> element.</p>
</li>
<li><p>For the shirt’s final touch, set the <code>color</code> to <code>#6a6969</code>.</p>
</li>
<li><p>Fun fact: Penguins cannot stand without at least two feet.</p>
<p>Within the <code>.penguin-body</code> element, add two <code>div</code> elements each with a <code>class</code> of <code>foot</code>. Give the first <code>.foot</code> a <code>class</code> of <code>left</code>, and the second <code>.foot</code> a <code>class</code> of <code>right</code>.</p>
</li>
<li><p>Target the <code>.foot</code> elements, and give them a <code>width</code> of <code>15%</code>, <code>height</code> of <code>30%</code>, and <code>background-color</code> of <code>orange</code>.</p>
</li>
<li><p>Position the <code>.foot</code> elements <code>85%</code> from the top of their parent, and give all corners a radius of <code>50%</code>.</p>
</li>
<li><p>The penguin’s beak and feet share the same <code>color</code>.</p>
<p>Create a new custom CSS variable named <code>--penguin-picorna</code>, and replace all relavant property values with it</p>
</li>
<li><p>Target the <code>.foot</code> element with a <code>class</code> of <code>left</code>, and position it <code>25%</code> left of its parent. Then, target the <code>.foot</code> element with a <code>class</code> of <code>right</code>, and position it <code>25%</code> right of its parent.</p>
</li>
<li><p>To make the penguin’s feet look more <em>penguiny</em>, rotate the left foot by <code>80deg</code>, and the right by <code>-80deg</code>.</p>
</li>
<li><p>Change the stacking order of the <code>.foot</code> elements such that they appear beneath the <code>.penguin-body</code> element.</p>
</li>
<li><p>Fun fact: Penguins cannot fly without wings.</p>
<p>Within <code>.penguin-body</code>, before the <code>.foot</code> elements, add two <code>div</code> elements each with a <code>class</code> of <code>arm</code>. Give the first <code>.arm</code> a <code>class</code> of <code>left</code>, and the second <code>.arm</code> a <code>class</code> of <code>right</code>.</p>
</li>
<li><p>Fun fact: Penguins cannot fly without wings.</p>
<p>Within <code>.penguin-body</code>, before the <code>.foot</code> elements, add two <code>div</code> elements each with a <code>class</code> of <code>arm</code>. Give the first <code>.arm</code> a <code>class</code> of <code>left</code>, and the second <code>.arm</code> a <code>class</code> of <code>right</code>.</p>
</li>
<li><p>Create a custom CSS variable named <code>--penguin-skin</code>, and set it to <code>gray</code>. Then, replace all relevant property values with it.</p>
</li>
<li><p>Target the <code>.arm</code> element with a <code>class</code> of <code>left</code>, and position it <code>35%</code> from the top, and <code>5%</code> from the left of its parent. Then, target the <code>.arm</code> element with a <code>class</code> of <code>right</code>, and position it <code>0%</code> from the top, and <code>-5%</code> from the right of its parent.</p>
</li>
<li><p>Within the <code>.arm.left</code> selector, alter the origin of the <code>transform</code> function to be the top left corner of its parent.</p>
</li>
<li><p>To keep the linear gradient on the correct side of the penguin’s left arm, first rotate it by <code>130deg</code>, then invert the x-axis.</p>
</li>
<li><p>Rotate the right arm by <code>45deg</code> counterclockwise.</p>
</li>
<li><p>Fun fact: Most, if not all, flippers are not naturally rectangles.</p>
<p>Give the <code>.arm</code> elements’ top-left, top-right, and bottom-right corners a radius of <code>30%</code>, and the bottom-left corner a radius of <code>120%</code>.</p>
</li>
<li><p>Change the <code>.arm</code> elements’ stacking order such that they appear behind the <code>.penguin-body</code> element.</p>
</li>
<li><p>Now, you are going to use CSS animations to make the penguin wave.</p>
<p>Define a new <code>@keyframes</code> named <code>wave</code>.</p>
</li>
<li><p>Give <code>wave</code> four waypoints starting at <code>10%</code>, and incrementing by <code>10%</code>.</p>
</li>
<li><p>Within the first waypoint, rotate to <code>110deg</code>, and retain the scaling of the left arm.</p>
</li>
<li><p>Within the second waypoint, rotate to <code>130deg</code>, and retain the scaling of the left arm.</p>
</li>
<li><p>For the third and fourth waypoints, repeat the <code>transform</code> pattern once more.</p>
</li>
<li><p>Use the <code>wave</code> animation on the left arm. Have the animation last <code>3s</code>, infinitely iterate, and have a linear timing function.</p>
</li>
<li><p>Target the <code>.penguin</code> element when it is active, and increase its size by <code>50%</code> in both dimensions.</p>
</li>
<li><p>When you activate the <code>.penguin</code> element, it might look as though you can drag it around. This is not true.</p>
<p>Indicate this to users, by giving the active element a <code>cursor</code> property of <code>not-allowed</code>.</p>
</li>
<li><p>Change the <code>.penguin</code> element’s <code>transition</code> behavior during transformation to have a duration of <code>1s</code>, a timing function of <code>ease-in-out</code>, and a delay of <code>0ms</code>.</p>
</li>
<li><p>Finally, calculate the <code>height</code> of the <code>.ground</code> element to be the height of the viewport minus the height of the <code>.penguin</code> element.</p>
<p>Congratulations! You have completed the Responsive Web Design certification.</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./styles.css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Penguin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left-mountain&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;back-mountain&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sun&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;penguin&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;penguin-head&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;face left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;face right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eye left&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eye-lid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eye right&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eye-lid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;blush left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;blush right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;beak top&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;beak bottom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;shirt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>💜<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>I CSS<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;penguin-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arm left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arm right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;foot left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;foot right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ground&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--penguin-face</span>: white;</span><br><span class="line">  <span class="attr">--penguin-picorna</span>: orange;</span><br><span class="line">  <span class="attr">--penguin-skin</span>: gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, <span class="built_in">rgb</span>(<span class="number">118</span>, <span class="number">201</span>, <span class="number">255</span>), <span class="built_in">rgb</span>(<span class="number">247</span>, <span class="number">255</span>, <span class="number">222</span>));</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left-mountain</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="built_in">rgb</span>(<span class="number">203</span>, <span class="number">241</span>, <span class="number">228</span>), <span class="built_in">rgb</span>(<span class="number">80</span>, <span class="number">183</span>, <span class="number">255</span>));</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">0deg</span>, <span class="number">44deg</span>);</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.back-mountain</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="built_in">rgb</span>(<span class="number">203</span>, <span class="number">241</span>, <span class="number">228</span>), <span class="built_in">rgb</span>(<span class="number">47</span>, <span class="number">170</span>, <span class="number">255</span>));</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">110px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">225px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sun</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">75px</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">75px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.penguin</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">75px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">4</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1s</span> ease-in-out <span class="number">0ms</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.penguin</span> * &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.penguin</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.5</span>);</span><br><span class="line">  <span class="attribute">cursor</span>: not-allowed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.penguin-head</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    <span class="number">45deg</span>,</span><br><span class="line">    <span class="built_in">var</span>(--penguin-skin),</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">239</span>, <span class="number">240</span>, <span class="number">228</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">70%</span> <span class="number">70%</span> <span class="number">65%</span> <span class="number">65%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.face</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--penguin-face);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">70%</span> <span class="number">70%</span> <span class="number">60%</span> <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">15%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.face</span><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">5%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.face</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">5%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.chin</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--penguin-face);</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">5%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">70%</span> <span class="number">70%</span> <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.eye</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">15%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">17%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">45%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.eye</span><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">25%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.eye</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">25%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.eye-lid</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--penguin-face);</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">23%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.blush</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">15%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">65%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.blush</span><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">15%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.blush</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">15%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.beak</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--penguin-picorna);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.beak</span><span class="selector-class">.top</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">40%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.beak</span><span class="selector-class">.bottom</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">16%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">65%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">42%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shirt</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: bold <span class="number">25px</span> Helvetica, sans-serif;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">165px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">127.5px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#6a6969</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shirt</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>:  initial;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">22.5px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.penguin-body</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">53%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    <span class="number">45deg</span>,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">134</span>, <span class="number">133</span>, <span class="number">133</span>) <span class="number">0%</span>,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">234</span>, <span class="number">231</span>, <span class="number">231</span>) <span class="number">25%</span>,</span><br><span class="line">    white <span class="number">67%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80%</span> <span class="number">80%</span> <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">40%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">23.5%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.penguin-body</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--penguin-skin);</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0%</span> <span class="number">0%</span> <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">70%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.arm</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    <span class="number">90deg</span>,</span><br><span class="line">    <span class="built_in">var</span>(--penguin-skin),</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">209</span>, <span class="number">210</span>, <span class="number">199</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">30%</span> <span class="number">30%</span> <span class="number">30%</span> <span class="number">120%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.arm</span><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">35%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">5%</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: top left; </span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">130deg</span>) <span class="built_in">scaleX</span>(-<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">animation</span>: <span class="number">3s</span> linear infinite wave;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.arm</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0%</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">5%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> wave &#123;</span><br><span class="line">  <span class="number">10%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">110deg</span>) <span class="built_in">scaleX</span>(-<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">20%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">130deg</span>) <span class="built_in">scaleX</span>(-<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">30%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">110deg</span>) <span class="built_in">scaleX</span>(-<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">40%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">130deg</span>) <span class="built_in">scaleX</span>(-<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.foot</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>:  <span class="number">15%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--penguin-picorna);</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.foot</span><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">80deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.foot</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">80deg</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.ground</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100vh</span> - <span class="number">300px</span>);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, <span class="built_in">rgb</span>(<span class="number">88</span>, <span class="number">175</span>, <span class="number">236</span>), <span class="built_in">rgb</span>(<span class="number">182</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">58px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>animation</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>//</url>
    <content><![CDATA[<div class="tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><a href="#test-1">什么东西</a></li><li class="tab"><a href="#test-2">test 2</a></li><li class="tab"><a href="#test-3">test 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="test-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="test-2"><p><strong>This is Tab 2.</strong>    </p>
<p>展开查看     </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    System.out.println(&quot;Hello to see U!&quot;);</span><br><span class="line">    </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="test-3"><p><strong>This is Tab 3.</strong></p></div></div></div>


<details>
    <summary>展开查看</summary>
    <pre><code>
    System.out.println("Hello to see U!");
    </code></pre>
</details>]]></content>
  </entry>
  <entry>
    <title>Project Exercise — a Tribute Page</title>
    <url>/project-exercise-%E2%80%94-a-tribute-page/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Build-a-Tribute-Page-——-Test"><a href="#Build-a-Tribute-Page-——-Test" class="headerlink" title="Build a Tribute Page —— Test"></a>Build a Tribute Page —— Test</h4><h5 id="Objective"><a href="#Objective" class="headerlink" title="Objective:"></a><strong>Objective:</strong></h5><blockquote>
<p>Build an app that is functionally similar to <a href="https://tribute-page.freecodecamp.rocks/">https://tribute-page.freecodecamp.rocks</a></p>
</blockquote>
<span id="more"></span>

<h5 id="User-Stories"><a href="#User-Stories" class="headerlink" title="User Stories:"></a><strong>User Stories:</strong></h5><ol>
<li>Your tribute page should have a <code>main</code> element with a corresponding <code>id</code> of <code>main</code>, which contains all other elements</li>
<li>You should see an element with an <code>id</code> of <code>title</code>, which contains a string (i.e. text), that describes the subject of the tribute page (e.g. “Dr. Norman Borlaug”)</li>
<li>You should see either a <code>figure</code> or a <code>div</code> element with an <code>id</code> of <code>img-div</code></li>
<li>Within the <code>#img-div</code> element, you should see an <code>img</code> element with a corresponding <code>id=&quot;image&quot;</code></li>
<li>Within the <code>#img-div</code> element, you should see an element with a corresponding <code>id=&quot;img-caption&quot;</code> that contains textual content describing the image shown in <code>#img-div</code></li>
<li>You should see an element with a corresponding <code>id=&quot;tribute-info&quot;</code>, which contains textual content describing the subject of the tribute page</li>
<li>You should see an <code>a</code> element with a corresponding <code>id=&quot;tribute-link&quot;</code>, which links to an outside site, that contains additional information about the subject of the tribute page. HINT: You must give your element an attribute of <code>target</code> and set it to <code>_blank</code> in order for your link to open in a new tab</li>
<li>Your <code>#image</code> should use <code>max-width</code> and <code>height</code> properties to resize responsively, relative to the width of its parent element, without exceeding its original size</li>
<li>Your <code>img</code> element should be centered within its parent element</li>
</ol>
<p>Fulfill the user stories and pass all the tests below to complete this project. Give it your own personal style. Happy Coding!</p>
<blockquote>
<p>Be sure to add <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;</code> in your HTML to link your stylesheet and apply your CSS</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mate</span> <span class="attr">chartset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span>诺曼·博洛格博士<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>拯救了十亿人生命的男人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;img-div&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/testable-projects-fcc/images/tribute-page-main-image.jpg&quot;</span> <span class="attr">id</span>=<span class="string">&quot;image&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;img-caption&quot;</span>&gt;</span>Norman Borlaug博士（左三）在墨西哥培训生物学家 关于如何提高小麦产量——这是他终生反饥饿战争的一部分。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tribute-info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>以下是博洛格博士一生的时间线：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>1914 - 出生于爱荷华州克雷斯科<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>1933年 - 离开他家的农场参加 明尼苏达大学，这要归功于大萧条时期的计划 “国家青年管理局”<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>1935年 - 不得不辍学，攒更多的钱。 在平民保护团工作，帮助饥饿 美国人。“我看到了食物如何改变他们，”他说。“这一切都离开了 我身上的伤疤。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>2005 - 声明“我们将不得不使世界翻一番 到2050年粮食供应。认为转基因作物是 我们满足需求的唯一方法，因为我们的耕地用完了。说 转基因作物本质上并不危险，因为“我们一直 长期以来对植物和动物进行基因改造。长 在我们称之为科学之前，人们正在选择最好的品种。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>2009年 - 去世，享年95岁。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>如果你有时间，你应该阅读更多关于这个不可思议的人 在他的<span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;tribute-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>维基百科条目<span class="tag">&lt;/<span class="name">a</span>&gt;</span>上。<span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#image</span>&#123;</span><br><span class="line">  <span class="attribute">max-width</span>:<span class="number">100%</span>; </span><br><span class="line">  <span class="attribute">height</span>:auto;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">display</span>:block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改版"><a href="#修改版" class="headerlink" title="修改版"></a>修改版</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#image</span>&#123;</span><br><span class="line">  <span class="attribute">max-width</span>:<span class="number">100%</span>; </span><br><span class="line">  <span class="attribute">height</span>:auto;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">display</span>:block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">4rem</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#img-div</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#img-caption</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tribute-info</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>:block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">550px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">16px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h3</span>&#123;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#477ca7</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Project Exercise</category>
        <category>Primary Program</category>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>Project Exercise</tag>
      </tags>
  </entry>
  <entry>
    <title>Project Exercise — Product Landing Page</title>
    <url>/project-exercise-%E2%80%94-product-landing-page/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h5 id="Product-Landing-Page-——-Test"><a href="#Product-Landing-Page-——-Test" class="headerlink" title="Product Landing Page —— Test"></a>Product Landing Page —— Test</h5><h5 id="Objective"><a href="#Objective" class="headerlink" title="Objective:"></a><strong>Objective:</strong></h5><blockquote>
<p>Build an app that is functionally similar to <a href="https://product-landing-page.freecodecamp.rocks/">https://product-landing-page.freecodecamp.rocks</a></p>
</blockquote>
<span id="more"></span>

<p><strong>User Stories:</strong></p>
<ol>
<li>Your product landing page should have a <code>header</code> element with a corresponding <code>id=&quot;header&quot;</code></li>
<li>You can see an image within the <code>header</code> element with a corresponding <code>id=&quot;header-img&quot;</code> (A logo would make a good image here)</li>
<li>Within the <code>#header</code> element, you can see a <code>nav</code> element with a corresponding <code>id=&quot;nav-bar&quot;</code></li>
<li>You can see at least three clickable elements inside the <code>nav</code> element, each with the class <code>nav-link</code></li>
<li>When you click a <code>.nav-link</code> button in the <code>nav</code> element, you are taken to the corresponding section of the landing page</li>
<li>You can watch an embedded product video with <code>id=&quot;video&quot;</code></li>
<li>Your landing page has a <code>form</code> element with a corresponding <code>id=&quot;form&quot;</code></li>
<li>Within the form, there is an <code>input</code> field with <code>id=&quot;email&quot;</code> where you can enter an email address</li>
<li>The <code>#email</code> input field should have placeholder text to let users know what the field is for</li>
<li>The <code>#email</code> input field uses HTML5 validation to confirm that the entered text is an email address</li>
<li>Within the form, there is a submit <code>input</code> with a corresponding <code>id=&quot;submit&quot;</code></li>
<li>When you click the <code>#submit</code> element, the email is submitted to a static page (use this mock URL: <code>https://www.freecodecamp.com/email-submit</code>)</li>
<li>The navbar should always be at the top of the viewport</li>
<li>Your product landing page should have at least one media query</li>
<li>Your product landing page should utilize CSS flexbox at least once</li>
</ol>
<p>Fulfill the user stories and pass all the tests below to complete this project. Give it your own personal style. Happy Coding!</p>
<p><strong>Note:</strong> Be sure to add <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;</code> in your HTML to link your stylesheet and apply your CSS</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;header-img&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/testable-projects-fcc/images/product-landing-page-logo.png&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">&quot;nav-bar&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#feature&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span>特征<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#work&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span>工作原理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#feature&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span>定价<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span>&gt;</span>          </span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Handcrafted, home-made masterpieces<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span> <span class="attr">action</span>=<span class="string">&quot;https://www.freecodecamp.com/email-submit&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的邮箱&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;feature&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;desc&quot;</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;desc&quot;</span>&gt;</span>bb<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;desc&quot;</span>&gt;</span>cc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;work&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;video&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;https://fonts.googleapis.com/css?family=Lato:400,700&#x27;</span>;</span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Lato&#x27;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">main</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">75px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.logo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">650px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">650px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.logo</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">650px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">50px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">35vw</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">650px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Project Exercise</category>
        <category>Primary Program</category>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>Project Exercise</tag>
      </tags>
  </entry>
  <entry>
    <title>Project Exercise — Build a Technical Documentation Page</title>
    <url>/project-exercise-%E2%80%94-build-a-technical-documentation-page/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h5 id="Build-a-Technical-Documentation-Page-——-Test"><a href="#Build-a-Technical-Documentation-Page-——-Test" class="headerlink" title="Build a Technical Documentation Page —— Test"></a>Build a Technical Documentation Page —— Test</h5><h5 id="Objective"><a href="#Objective" class="headerlink" title="Objective:"></a><strong>Objective:</strong></h5><blockquote>
<p>Build an app that is functionally similar to <a href="https://technical-documentation-page.freecodecamp.rocks/">https://technical-documentation-page.freecodecamp.rocks</a></p>
</blockquote>
<span id="more"></span>

<h5 id="User-Stories"><a href="#User-Stories" class="headerlink" title="User Stories:"></a><strong>User Stories:</strong></h5><ol>
<li>You can see a <code>main</code> element with a corresponding <code>id=&quot;main-doc&quot;</code>, which contains the page’s main content (technical documentation)</li>
<li>Within the <code>#main-doc</code> element, you can see several <code>section</code> elements, each with a class of <code>main-section</code>. There should be a minimum of five</li>
<li>The first element within each <code>.main-section</code> should be a <code>header</code> element, which contains text that describes the topic of that section.</li>
<li>Each <code>section</code> element with the class of <code>main-section</code> should also have an <code>id</code> that corresponds with the text of each <code>header</code> contained within it. Any spaces should be replaced with underscores (e.g. The section that contains the header “JavaScript and Java” should have a corresponding <code>id=&quot;JavaScript_and_Java&quot;</code>)</li>
<li>The <code>.main-section</code> elements should contain at least ten <code>p</code> elements total (not each)</li>
<li>The <code>.main-section</code> elements should contain at least five <code>code</code> elements total (not each)</li>
<li>The <code>.main-section</code> elements should contain at least five <code>li</code> items total (not each)</li>
<li>You can see a <code>nav</code> element with a corresponding <code>id=&quot;navbar&quot;</code></li>
<li>The navbar element should contain one <code>header</code> element which contains text that describes the topic of the technical documentation</li>
<li>Additionally, the navbar should contain link (<code>a</code>) elements with the class of <code>nav-link</code>. There should be one for every element with the class <code>main-section</code></li>
<li>The <code>header</code> element in the <code>#navbar</code> must come before any link (<code>a</code>) elements in the navbar</li>
<li>Each element with the class of <code>nav-link</code> should contain text that corresponds to the <code>header</code> text within each <code>section</code> (e.g. if you have a “Hello world” section/header, your navbar should have an element which contains the text “Hello world”)</li>
<li>When you click on a navbar element, the page should navigate to the corresponding section of the <code>#main-doc</code> element (e.g. If you click on a <code>.nav-link</code> element that contains the text “Hello world”, the page navigates to a <code>section</code> element with that id, and contains the corresponding header)</li>
<li>On regular sized devices (laptops, desktops), the element with <code>id=&quot;navbar&quot;</code> should be shown on the left side of the screen and should always be visible to the user</li>
<li>Your technical documentation should use at least one media query</li>
</ol>
<blockquote>
<p><strong>Note:</strong> Be sure to add <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;</code> in your HTML to link your stylesheet and apply your CSS</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">&quot;navbar&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">header</span>&gt;</span>Js<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#Introduction&quot;</span>&gt;</span>Introduction<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#What_you_should_already_know&quot;</span>&gt;</span>What you should already know<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#JavaScript_and_Java&quot;</span>&gt;</span>JavaScript and Java<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#Hello_world&quot;</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#Declaring_variables&quot;</span>&gt;</span>Declaring variables<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span> <span class="attr">id</span>=<span class="string">&quot;main-doc&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;main-section&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Introduction&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span>Introduction<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>JavaScript 是一种跨平台、面向对象的脚本语言。 它是一种小巧轻量级的语言。在主机环境中 （例如，Web浏览器），JavaScript可以连接到 其环境的对象，以提供对 他们。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>JavaScript 包含一个标准的对象库，例如 Array、 日期和数学，以及一组核心语言元素，例如 运算符、控制结构和语句。核心JavaScript可以 通过补充它来扩展各种目的 附加对象;例如：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;main-section&quot;</span> <span class="attr">id</span>= <span class="string">&quot;What_you_should_already_know&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span>What you should already know<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>对互联网和万维网的一般了解 （万维网）。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>对互联网和万维网的一般了解 （万维网）。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>对互联网和万维网的一般了解 （万维网）。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>对互联网和万维网的一般了解 （万维网）。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>对互联网和万维网的一般了解 （万维网）。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>对互联网和万维网的一般了解 （万维网）。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>对互联网和万维网的一般了解 （万维网）。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;main-section&quot;</span> <span class="attr">id</span>=<span class="string">&quot;JavaScript_and_Java&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span>JavaScript and Java<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;main-section&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Hello_world&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">code</span>&gt;</span>&quot;function greetMe(yourName) &#123; alert(&quot;Hello &quot; + yourName); &#125; greetMe(&quot;World&quot;); &quot;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">code</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">code</span>&gt;</span>var x = 32;<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;main-section&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Declaring_variables&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span>Declaring variables<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">290px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4d4e53</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Open Sans&#x27;</span>, Arial, sans-serif;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#navbar</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">290px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border-right</span>: solid;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: black;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.8em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: thin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main-doc</span> <span class="selector-tag">header</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#navbar</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">88%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">  <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#navbar</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4d4e53</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#navbar</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4d4e53</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main-doc</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">310px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">110px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">article</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4d4e53</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.96em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">white-space</span>: pre-line;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">word-break</span>: normal;</span><br><span class="line">  <span class="attribute">word-wrap</span>: normal;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">815px</span>) &#123;</span><br><span class="line">  <span class="comment">/* For mobile phones: */</span></span><br><span class="line">  <span class="selector-id">#navbar</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">207px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#navbar</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">275px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#main-doc</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">270px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">400px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#main-doc</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">233px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Project Exercise</category>
        <category>Primary Program</category>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>Project Exercise</tag>
      </tags>
  </entry>
  <entry>
    <title>Project Exercise — Survey Form</title>
    <url>/project-exercise-%E2%80%94-survey-form/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Survey-Form-——-Test"><a href="#Survey-Form-——-Test" class="headerlink" title="Survey Form —— Test"></a>Survey Form —— Test</h4><h5 id="Objective"><a href="#Objective" class="headerlink" title="Objective:"></a><strong>Objective:</strong></h5><blockquote>
<p>Build an app that is functionally similar to <a href="https://survey-form.freecodecamp.rocks/">https://survey-form.freecodecamp.rocks</a></p>
</blockquote>
<span id="more"></span>

<h5 id="User-Stories-【The-requirements-are-as-follows】"><a href="#User-Stories-【The-requirements-are-as-follows】" class="headerlink" title="**User Stories:**【The requirements are as follows】"></a>**User Stories:**【The requirements are as follows】</h5><ol>
<li><p>You should have a page title in an <code>h1</code> element with an <code>id</code> of <code>title</code></p>
</li>
<li><p>You should have a short explanation in a <code>p</code> element with an <code>id</code> of <code>description</code></p>
</li>
<li><p>You should have a <code>form</code> element with an <code>id</code> of <code>survey-form</code></p>
</li>
<li><p>Inside the form element, you are <strong>required</strong> to enter your name in an <code>input</code> field that has an <code>id</code> of <code>name</code> and a <code>type</code> of <code>text</code></p>
</li>
<li><p>Inside the form element, you are <strong>required</strong> to enter your email in an <code>input</code> field that has an <code>id</code> of <code>email</code></p>
</li>
<li><p>If you enter an email that is not formatted correctly, you will see an HTML5 validation error</p>
</li>
<li><p>Inside the form, you can enter a number in an <code>input</code> field that has an <code>id</code> of <code>number</code></p>
</li>
<li><p>The number input should not accept non-numbers, either by preventing you from typing them or by showing an HTML5 validation error (depending on your browser).</p>
</li>
<li><p>If you enter numbers outside the range of the number input, which are defined by the <code>min</code> and <code>max</code> attributes, you will see an HTML5 validation error</p>
</li>
<li><p>For the name, email, and number input fields, you can see corresponding <code>label</code> elements in the form, that describe the purpose of each field with the following ids: <code>id=&quot;name-label&quot;</code>, <code>id=&quot;email-label&quot;</code>, and <code>id=&quot;number-label&quot;</code></p>
</li>
<li><p>For the name, email, and number input fields, you can see placeholder text that gives a description or instructions for each field</p>
</li>
<li><p>Inside the form element, you should have a <code>select</code> dropdown element with an <code>id</code> of <code>dropdown</code> and at least two options to choose from</p>
</li>
<li><p>Inside the form element, you can select an option from a group of at least two radio buttons that are grouped using the <code>name</code> attribute</p>
</li>
<li><p>Inside the form element, you can select several fields from a series of checkboxes, each of which must have a <code>value</code> attribute</p>
</li>
<li><p>Inside the form element, you are presented with a <code>textarea</code> for additional comments</p>
</li>
<li><p>Inside the form element, you are presented with a button with <code>id</code> of <code>submit</code> to submit all the inputs</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span>免费代码营调查表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;description&quot;</span>&gt;</span>感谢您抽出宝贵时间帮助我们改进平台<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;survey-form&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name-label&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name-label&quot;</span>&gt;</span>名字： </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的名字&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email-label&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email-label&quot;</span>&gt;</span>电子邮箱： </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的电子邮箱&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;number-label&quot;</span> <span class="attr">id</span>=<span class="string">&quot;number-label&quot;</span>&gt;</span>年龄： </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;number&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">min</span>=<span class="string">&quot;14&quot;</span> <span class="attr">max</span>=<span class="string">&quot;120&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;年龄&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span> 哪个角色更适合你？</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- &lt;input&gt;哪个角色最适合你？&lt;/input&gt; --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;&#x27;</span>&gt;</span>选择你当前角色<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span>学生<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;2&#x27;</span>&gt;</span>社畜<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;3&#x27;</span>&gt;</span>保密<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>你觉得怎么样？</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;evaluate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>很好<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;evaluate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>一般<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;evaluate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>不咋样<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>你希望看到什么？</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span>前端项目<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>后端项目<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>游戏项目<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>sex项目<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>有什么意见或建议吗？</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;bio&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请写出你的想法&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="修改版"><a href="#修改版" class="headerlink" title="修改版"></a>修改版</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span>免费代码营调查表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;description&quot;</span>&gt;</span>感谢您抽出宝贵时间帮助我们改进平台<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;survey-form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;control&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name-label&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name-label&quot;</span>&gt;</span>名字：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的名字&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;control&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email-label&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email-label&quot;</span>&gt;</span>电子邮箱：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的电子邮箱&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;control&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;number-label&quot;</span> <span class="attr">id</span>=<span class="string">&quot;number-label&quot;</span> &gt;</span>年龄:<span class="tag">&lt;/<span class="name">label</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;number&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">min</span>=<span class="string">&quot;14&quot;</span> <span class="attr">max</span>=<span class="string">&quot;120&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;年龄&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;control&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span>&gt;</span> 哪个角色更适合你？ <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;input&gt;哪个角色最适合你？&lt;/input&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;&#x27;</span>&gt;</span>选择你当前角色<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span>学生<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;2&#x27;</span>&gt;</span>社畜<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;3&#x27;</span>&gt;</span>保密<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;control&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span>&gt;</span>你觉得怎么样？<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;evaluate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input-radio&quot;</span>&gt;</span>很好<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;evaluate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input-radio&quot;</span>&gt;</span>一般<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;evaluate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input-radio&quot;</span>&gt;</span>不咋样<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;control&quot;</span>&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>你希望看到什么？<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input-checkbox&quot;</span>&gt;</span>前端项目<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input-checkbox&quot;</span>&gt;</span>后端项目<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input-checkbox&quot;</span>&gt;</span>游戏项目<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input-checkbox&quot;</span>&gt;</span>**项目<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;control&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span>&gt;</span>有什么意见或建议吗？<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;bio&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请写出你的想法&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Project Exercise</category>
        <category>Primary Program</category>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>Project Exercise</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(十)</title>
    <url>/responsive-web-dedign-%E5%8D%81/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-Intermediate-CSS-by-Building-a-Picasso-Painting"><a href="#Learn-Intermediate-CSS-by-Building-a-Picasso-Painting" class="headerlink" title="Learn Intermediate CSS by Building a Picasso Painting"></a>Learn Intermediate CSS by Building a Picasso Painting</h4><span id="more"></span>

<ol>
<li><p>Start by setting up your HTML structure. Add a <code>&lt;!DOCTYPE&gt;</code> declaration and an <code>html</code> element with a <code>lang</code> attribute set to <code>en</code>. Within the <code>html</code> element, add a <code>head</code> element and a <code>body</code> element.</p>
</li>
<li><p>Within your <code>head</code> element, add a <code>meta</code> tag with the <code>charset</code> attribute set to <code>utf-8</code>. Also add a <code>title</code> element with the text <code>Picasso Painting</code>.</p>
</li>
<li><p>Go ahead and link your CSS file now, even though you have not written any CSS yet.</p>
<p>Add a <code>link</code> element with a <code>rel</code> of <code>stylesheet</code> and an <code>href</code> of <code>styles.css</code>.</p>
</li>
<li><p>FontAwesome is a library of SVG-powered icons, many of which are freely available to use. You will be using some of these icons in this project, so you will need to link the external stylesheet to your HTML.</p>
<p>Add a <code>link</code> element with a <code>rel</code> of <code>stylesheet</code> and an <code>href</code> of <code>https://use.fontawesome.com/releases/v5.8.2/css/all.css</code>.</p>
</li>
<li><p>To get your painting started, give your <code>body</code> element a <code>background-color</code> of <code>rgb(184, 132, 46)</code>.</p>
</li>
<li><p>Within your body tag, add a <code>div</code> element. Give it an <code>id</code> of <code>back-wall</code>.</p>
</li>
<li><p>Use an id selector to give the element with the id <code>back-wall</code> a <code>background-color</code> of <code>#8B4513</code>.</p>
</li>
<li><p>Give the <code>#back-wall</code> element a <code>width</code> of <code>100%</code> and a <code>height</code> of <code>60%</code>.</p>
</li>
<li><p>Typically, HTML is rendered in a top-down manner. Elements at the top of the code are positioned at the top of the page. However, many times you may want to move the elements to different positions. You can do this with the <code>position</code> property.</p>
<p>Set the <code>position</code> property for the <code>#back-wall</code> element to <code>absolute</code>. An <code>absolute</code> position takes the element out of that top-down document flow and allows you to adjust it relative to its container.</p>
<p>When an element is manually positioned, you can shift its layout with <code>top</code>, <code>left</code>, <code>right</code>, and <code>bottom</code>. Set the <code>#back-wall</code> element to have a <code>top</code> value of <code>0</code>, and a <code>left</code> value of <code>0</code>.</p>
</li>
<li><p>The <code>z-index</code> property is used to create “layers” for your HTML elements. If you are familiar with image editing tools, you may have worked with layers before. This is a similar concept.</p>
<p>Elements with a higher <code>z-index</code> value will appear to be layered on top of elements with a lower <code>z-index</code> value. This can be combined with the positioning in the previous lesson to create unique effects.</p>
<p>Since the <code>back-wall</code> element will need to appear “behind” the other elements you will be creating, give the <code>back-wall</code> element a <code>z-index</code> of <code>-1</code>.</p>
</li>
<li><p>Below your <code>#back-wall</code> element, create a <code>div</code> with a <code>class</code> of <code>characters</code>. This is where you will be creating your painting’s characters.</p>
</li>
<li><p>Inside that <code>.characters</code> element, create another <code>div</code> with an <code>id</code> of <code>offwhite-character</code>.</p>
</li>
<li><p>Create four <code>div</code> elements inside your <code>offwhite-character</code> element. Give those <code>div</code> elements the following <code>id</code> values, in order: <code>white-hat</code>, <code>black-mask</code>, <code>gray-instrument</code>, <code>tan-table</code>.</p>
</li>
<li><p>This character needs eyes. Create two <code>div</code> elements in the <code>#black-mask</code> element. Give them the classes <code>eyes left</code> and <code>eyes right</code>, in that order.</p>
</li>
<li><p>Create some “dots” for the instrument. Add five <code>div</code> elements within your <code>#gray-instrument</code> element. Set the <code>class</code> of each to <code>black-dot</code>.</p>
</li>
<li><p>Using an id selector, create a rule for the element with the id <code>offwhite-character</code>. Give it a <code>width</code> of <code>300px</code>, a <code>height</code> of <code>550px</code>, and a <code>background-color</code> of <code>GhostWhite</code>.</p>
</li>
<li><p>Move the <code>#offwhite-character</code> into place by giving it a <code>position</code> of <code>absolute</code>, a <code>top</code> value of <code>20%</code>, and a <code>left</code> value of <code>17.5%</code>.</p>
</li>
<li><p>Using an id selector, style the element with the id <code>white-hat</code>. Give it a <code>width</code> and <code>height</code> of <code>0</code>, and a <code>border-style</code> of <code>solid</code>.</p>
</li>
<li><p>That does not look quite right. Set a <code>border-width</code> of <code>0 120px 140px 180px</code> to size the hat properly.</p>
</li>
<li><p>Now you have a large box. Give it a <code>border-top-color</code>, <code>border-right-color</code>, and <code>border-left-color</code> of <code>transparent</code>. Set the <code>border-bottom-color</code> to <code>GhostWhite</code>. This will make it look more like a hat.</p>
</li>
<li><p>Give the hat a <code>position</code> of <code>absolute</code>, a <code>top</code> value of <code>-140px</code>, and a <code>left</code> value of <code>0</code>.</p>
</li>
<li><p>Using an id selector, create a rule for the element with the id <code>black-mask</code>. Give it a <code>width</code> of <code>100%</code>, a <code>height</code> of <code>50px</code>, and a <code>background-color</code> of <code>rgb(45, 31, 19)</code>.</p>
</li>
<li><p>Give the mask a <code>position</code> of <code>absolute</code>, and a <code>top</code> and <code>left</code> value of <code>0</code>.</p>
</li>
<li><p>To ensure you can see the mask, give it a <code>z-index</code> of <code>1</code>.</p>
</li>
<li><p>Using an id selector, give the element with the id <code>gray-instrument</code> a <code>width</code> of <code>15%</code>, a <code>height</code> of <code>40%</code>, and a <code>background-color</code> of <code>rgb(167, 162, 117)</code>.</p>
</li>
<li><p>Now move it into place with a <code>position</code> of <code>absolute</code>, a <code>top</code> value of <code>50px</code>, and a <code>left</code> value of <code>125px</code>.</p>
</li>
<li><p>Set the <code>z-index</code> to <code>1</code>.</p>
</li>
<li><p>Use a class selector to create a rule for the elements with <code>black-dot</code> class. Set the <code>width</code> to <code>10px</code>, the <code>height</code> to <code>10px</code>, and the <code>background-color</code> to <code>rgb(45, 31, 19)</code>.</p>
</li>
<li><p>These dots are just a little too square. Give the <code>black-dot</code> class a <code>border-radius</code> of <code>50%</code> to fix it.</p>
</li>
<li><p>These dots are just a little too square. Give the <code>black-dot</code> class a <code>border-radius</code> of <code>50%</code> to fix it.</p>
</li>
<li><p>Use an id selector to style the element with the id <code>tan-table</code>. Give it a <code>width</code> of <code>450px</code>, a <code>height</code> of <code>140px</code>, and a <code>background-color</code> of <code>#D2691E</code>.</p>
</li>
<li><p>Move the table into place by giving it a <code>position</code> of <code>absolute</code>, a <code>top</code> value of <code>275px</code>, and a <code>left</code> value of <code>15px</code>.</p>
</li>
<li><p>Give the table a <code>z-index</code> of <code>1</code>.</p>
</li>
<li><p>After your <code>div#offwhite-character</code> element, add a <code>div</code> with the <code>id</code> of <code>black-character</code>.</p>
</li>
<li><p>Within your new <code>#black-character</code> element, add three <code>div</code> elements with the following <code>id</code> values, in order: <code>black-hat</code>, <code>gray-mask</code>, <code>white-paper</code>.</p>
</li>
<li><p>The mask needs eyes. Within your <code>#gray-mask</code> element, add two <code>div</code> elements. The first should have the <code>class</code> set to <code>eyes left</code>, and the second should have the <code>class</code> set to <code>eyes right</code>.</p>
</li>
<li><p>Time to use some FontAwesome icons.</p>
<p>The <code>i</code> element is used for idiomatic text, or text that is separate from the “normal” text content. This could be for <em>italic</em> text, such as scientific terms, or for icons like those provided by FontAwesome.</p>
<p>Within your <code>#white-paper</code> element, add four <code>i</code> elements. Give them all a <code>class</code> value of <code>fas fa-music</code>.</p>
<p>This special class is how FontAwesome determines which icon to load. <code>fas</code> indicates the category of icons (FontAwesome Solid, here), while <code>fa-music</code> selects the specific icon.</p>
</li>
<li><p>Use an id selector to create a rule for the element with the id <code>black-character</code>. Set the <code>width</code> to <code>300px</code>, the <code>height</code> to <code>500px</code>, and the <code>background-color</code> to <code>rgb(45, 31, 19)</code>.</p>
</li>
<li><p>Move the <code>#black-character</code> element into place by setting the <code>position</code> to <code>absolute</code>, the <code>top</code> to <code>30%</code>, and the <code>left</code> to <code>59%</code>.</p>
</li>
<li><p>Use an id selector to create a rule for the element with the id <code>black-hat</code>. Give it a <code>width</code> of <code>0</code>, a <code>height</code> of <code>0</code>, and a <code>border-style</code> of <code>solid</code>.</p>
</li>
<li><p>Set the <code>border-width</code> of the <code>#black-hat</code> to <code>150px 0 0 300px</code>.</p>
</li>
<li><p>Just like with your <code>#white-hat</code>, you should style the border for the <code>#black-hat</code> element. Give it a <code>border-top-color</code>, <code>border-right-color</code>, and <code>border-bottom-color</code> of <code>transparent</code>. Set the <code>border-left-color</code> to <code>rgb(45, 31, 19)</code>.</p>
</li>
<li><p>Now position the <code>#black-hat</code> element. Give it a <code>position</code> of <code>absolute</code>, with a <code>top</code> of <code>-150px</code> and a <code>left</code> of <code>0</code>.</p>
</li>
<li><p>Using an id selector, style the element with the id <code>gray-mask</code>. Give it a <code>width</code> of <code>150px</code>, a <code>height</code> of <code>150px</code>, and a <code>background-color</code> of <code>rgb(167, 162, 117)</code>.</p>
</li>
<li><p>Position the <code>#gray-mask</code> element by setting <code>position</code> to <code>absolute</code>, the <code>top</code> to <code>-10px</code>, and the <code>left</code> to <code>70px</code>.</p>
</li>
<li><p>Using an id selector, create a rule for the id <code>white-paper</code>. Set the <code>width</code> to <code>400px</code>, the <code>height</code> to <code>100px</code>, and the <code>background-color</code> to <code>GhostWhite</code>.</p>
</li>
<li><p>Give the <code>#white-paper</code> a <code>position</code> of <code>absolute</code>, a <code>top</code> of <code>250px</code>, and a <code>left</code> of <code>-150px</code> to move it into place.</p>
</li>
<li><p>Set the <code>z-index</code> of the <code>#white-paper</code> element to <code>1</code>.</p>
</li>
<li><p>FontAwesome icons come with their own styling to define the icon. However, you can still set the styling yourself as well, to change things like the color and size. For now, use a class selector to target the icons with the class <code>fa-music</code>. Set the <code>display</code> to <code>inline-block</code>, the <code>margin-top</code> to <code>8%</code>, and the <code>margin-left</code> to <code>13%</code>.</p>
</li>
<li><p>Below your <code>#black-character</code> element, add two new <code>div</code> elements. These will be the shawl. Give both of them a <code>class</code> of <code>blue</code>. Then give the first one an <code>id</code> of <code>blue-left</code>, and the second an <code>id</code> of <code>blue-right</code>.</p>
</li>
<li><p>Use a class selector to target the new elements with the class <code>blue</code>. Set the <code>background-color</code> to <code>#1E90FF</code>.</p>
</li>
<li><p>Select the element with the id <code>blue-left</code> using an id selector. Give it a <code>width</code> of <code>500px</code> and a <code>height</code> of <code>300px</code>.</p>
</li>
<li><p>Now set the <code>position</code> to <code>absolute</code>, the <code>top</code> to <code>20%</code>, and the <code>left</code> to <code>20%</code>.</p>
</li>
<li><p>Next, target the element with the id <code>blue-right</code> using an id selector. Set the <code>width</code> to <code>400px</code> and the <code>height</code> to <code>300px</code>.</p>
</li>
<li><p>Give the <code>#blue-right</code> element the correct positioning with <code>position</code> set to <code>absolute</code>, <code>top</code> set to <code>50%</code>, and <code>left</code> set to <code>40%</code>.</p>
</li>
<li><p>Below your <code>.blue</code> elements, add another <code>div</code>. Give it the <code>id</code> value of <code>orange-character</code>.</p>
</li>
<li><p>Within that <code>#orange-character</code> element, add four <code>div</code> elements. Give them the <code>id</code> values of <code>black-round-hat</code>, <code>eyes-div</code>, <code>triangles</code>, and <code>guitar</code>, in order.</p>
</li>
<li><p>The <code>#eyes-div</code> element should hold some eyes. Add two <code>div</code> elements inside. Give the first a <code>class</code> of <code>eyes left</code>, and give the second a <code>class</code> of <code>eyes right</code>.</p>
</li>
<li><p>Within the <code>#triangles</code> div, you will need to add the elements that will become your triangles. Create thirty <code>div</code> elements and give each of them the class <code>triangle</code>.</p>
</li>
<li><p>Within the <code>#guitar</code> element, create three <code>div</code> elements. Give the first two a <code>class</code> value of <code>guitar</code>. Then give the first an <code>id</code> of <code>guitar-left</code>, and the second an <code>id</code> of <code>guitar-right</code>. Add an <code>id</code> to the third <code>div</code> with the value <code>guitar-neck</code>.</p>
<p>The third <code>div</code> should not have the <code>guitar</code> class.</p>
</li>
<li><p>Use another FontAwesome icon for your <code>.guitar</code>. Inside both the <code>#guitar-left</code> and <code>#guitar-right</code> elements, add an <code>i</code> element and give it a <code>class</code> of <code>fas fa-bars</code>.</p>
</li>
<li><p>Select your <code>orange-character</code> element with an id selector. Give it a <code>width</code> of <code>250px</code>, a <code>height</code> of <code>550px</code>, and a <code>background-color</code> of <code>rgb(240, 78, 42)</code>.</p>
</li>
<li><p>Give the <code>#orange-character</code> element a <code>position</code> of <code>absolute</code>, a <code>top</code> of <code>25%</code>, and a <code>left</code> of <code>40%</code>.</p>
</li>
<li><p>Give the <code>#orange-character</code> element a <code>position</code> of <code>absolute</code>, a <code>top</code> of <code>25%</code>, and a <code>left</code> of <code>40%</code>.</p>
</li>
<li><p>The <code>#black-round-hat</code> element should probably be round. Give it a <code>border-radius</code> of <code>50%</code> to fix this.</p>
</li>
<li><p>Move the <code>#black-round-hat</code> element into place with a <code>position</code> of <code>absolute</code>, a <code>top</code> of <code>-100px</code>, and a <code>left</code> of <code>5px</code>.</p>
</li>
<li><p>Put the <code>#black-round-hat</code> element on the correct layer with a <code>z-index</code> of <code>-1</code>.</p>
</li>
<li><p>Use an id selector to create a rule for the element with the id <code>eyes-div</code>. Set the <code>width</code> to <code>180px</code> and the <code>height</code> to <code>50px</code>.</p>
</li>
<li><p>Now move the <code>#eyes-div</code> element into position with <code>position</code> set to <code>absolute</code>, <code>top</code> set to <code>-40px</code>, and <code>left</code> set to <code>20px</code>.</p>
</li>
<li><p>Give the <code>#eyes-div</code> element a <code>z-index</code> of <code>3</code>.</p>
</li>
<li><p>Target the element with the id <code>triangles</code> using an id selector. Set the <code>width</code> to <code>250px</code> and the <code>height</code> to <code>550px</code>.</p>
</li>
<li><p>Create a class selector for the elements with the <code>triangle</code> class. Set the <code>width</code> to <code>0</code> and the <code>height</code> to <code>0</code>.</p>
</li>
<li><p>Style the border of your <code>.triangle</code> elements. Set the <code>border-style</code> to <code>solid</code> and the <code>border-width</code> to <code>42px 45px 45px 0</code>.</p>
</li>
<li><p>Give your <code>.triangle</code> elements the correct color. Set the <code>border-top-color</code>, <code>border-bottom-color</code>, and <code>border-left-color</code> to <code>transparent</code>. Set the <code>border-right-color</code> to <code>Gold</code>.</p>
</li>
<li><p>Adjust the layout of the <code>.triangle</code> elements with a <code>display</code> of <code>inline-block</code>.</p>
</li>
<li><p>Now use an id selector for <code>guitar</code>. Set the <code>width</code> to <code>100%</code>, and the <code>height</code> to <code>100px</code>.</p>
</li>
<li><p>In the same <code>#guitar</code> selector, set the <code>position</code> to <code>absolute</code>, the <code>top</code> to <code>120px</code>, and the <code>left</code> to <code>0px</code>.</p>
</li>
<li><p>Give the <code>#guitar</code> rule a <code>z-index</code> of <code>3</code>.</p>
</li>
<li><p>Now use a class selector to target <code>guitar</code>. This will style the two “halves” of your guitar. Set the <code>width</code> to <code>150px</code>, the <code>height</code> to <code>120px</code>, the <code>background-color</code> to <code>Goldenrod</code>, and the <code>border-radius</code> to <code>50%</code>.</p>
</li>
<li><p>Select the <code>id</code> with value <code>guitar-left</code>, and set the <code>position</code> to <code>absolute</code> and the <code>left</code> to <code>0px</code>.</p>
</li>
<li><p>Select the <code>id</code> with value <code>guitar-right</code>, and also set <code>position</code> to <code>absolute</code>. This time, set <code>left</code> to <code>100px</code>.</p>
</li>
<li><p>Now you need to move the bar icons into place. Create a class selector for the <code>fa-bars</code> class. Set the <code>display</code> to <code>block</code>, the <code>margin-top</code> to <code>30%</code>, and the <code>margin-left</code> to <code>40%</code>.</p>
</li>
<li><p>Use an id selector to create a rule for the id <code>guitar-neck</code>. Set the <code>width</code> to <code>200px</code>, the <code>height</code> to <code>30px</code>, and the <code>background-color</code> to <code>#D2691E</code>.</p>
</li>
<li><p>Now move the <code>#guitar-neck</code> element with a <code>position</code> of <code>absolute</code>, a <code>top</code> value of <code>45px</code>, and a <code>left</code> value of <code>200px</code>.</p>
</li>
<li><p>Give the <code>#guitar-neck</code> element a <code>z-index</code> of <code>3</code>.</p>
</li>
<li><p>Time to style the elements with the <code>eyes</code> class. Use a class selector to set the <code>width</code> to <code>35px</code>, the <code>height</code> to <code>20px</code>, the <code>background-color</code> to <code>#8B4513</code>, and the <code>border-radius</code> to <code>20px 50%</code>.</p>
</li>
<li><p>Target the <code>class</code> with value <code>right</code> and set the <code>position</code> to <code>absolute</code>, <code>top</code> to <code>15px</code>, and <code>right</code> to <code>30px</code>.</p>
</li>
<li><p>For the <code>class</code> with value <code>left</code>, create the selector and set the <code>position</code> to <code>absolute</code>, the <code>top</code> to <code>15px</code>, and the <code>left</code> to <code>30px</code>.</p>
</li>
<li><p>One last step. The FontAwesome icons are a little too small. Target all of them with a class selector for <code>fas</code>, and set the <code>font-size</code> to <code>30px</code>.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Picasso Painting<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./styles.css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://use.fontawesome.com/releases/v5.8.2/css/all.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;back-wall&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;characters&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;offwhite-character&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;white-hat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;black-mask&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eyes left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eyes right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;gray-instrument&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;black-dot&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;black-dot&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;black-dot&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;black-dot&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;black-dot&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tan-table&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;black-character&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;black-hat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;gray-mask&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eyes left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eyes right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;white-paper&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-music&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-music&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-music&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-music&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;blue&quot;</span> <span class="attr">id</span>=<span class="string">&quot;blue-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;blue&quot;</span> <span class="attr">id</span>=<span class="string">&quot;blue-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;orange-character&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;black-round-hat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;eyes-div&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eyes left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;eyes right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;triangles&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;guitar&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;guitar&quot;</span> <span class="attr">id</span>=<span class="string">&quot;guitar-left&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-bars&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;guitar&quot;</span> <span class="attr">id</span>=<span class="string">&quot;guitar-right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-bars&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;guitar-neck&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">184</span>, <span class="number">132</span>, <span class="number">46</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#back-wall</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#8B4513</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#offwhite-character</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">550px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: GhostWhite;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">20%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">17.5%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#white-hat</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">120px</span> <span class="number">140px</span> <span class="number">180px</span>;</span><br><span class="line">  <span class="attribute">border-top-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-right-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: GhostWhite;</span><br><span class="line">  <span class="attribute">border-left-color</span>: transparent;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">140px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#black-mask</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">45</span>, <span class="number">31</span>, <span class="number">19</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#gray-instrument</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">15%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">167</span>, <span class="number">162</span>, <span class="number">117</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">125px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.black-dot</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">45</span>, <span class="number">31</span>, <span class="number">19</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">65%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tan-table</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">140px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#D2691E</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">275px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#black-character</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">45</span>, <span class="number">31</span>, <span class="number">19</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">59%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#black-hat</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">150px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">border-top-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-right-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-left-color</span>: <span class="built_in">rgb</span>(<span class="number">45</span>, <span class="number">31</span>, <span class="number">19</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#gray-mask</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">167</span>, <span class="number">162</span>, <span class="number">117</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#white-paper</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: GhostWhite;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">250px</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fa-music</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">8%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">13%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#1E90FF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#blue-left</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">20%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#blue-right</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">40%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#orange-character</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">550px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">240</span>, <span class="number">78</span>, <span class="number">42</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">40%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#black-round-hat</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">180px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">45</span>, <span class="number">31</span>, <span class="number">19</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#eyes-div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">180px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#triangles</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">550px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.triangle</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">42px</span> <span class="number">45px</span> <span class="number">45px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-top-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-right-color</span>: Gold; <span class="comment">/* yellow */</span></span><br><span class="line">  <span class="attribute">border-bottom-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border-left-color</span>: transparent;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#guitar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.guitar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: Goldenrod;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#guitar-left</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#guitar-right</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fa-bars</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">40%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#guitar-neck</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#D2691E</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.eyes</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#8B4513</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.fas</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>真丑啊！！！ </p>
</li>
</ol>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(一)</title>
    <url>/responsive-web-dedign-%E4%B8%80/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-HTML-by-Building-a-Cat-Photo-App"><a href="#Learn-HTML-by-Building-a-Cat-Photo-App" class="headerlink" title="Learn HTML by Building a Cat Photo App"></a>Learn HTML by Building a Cat Photo App</h4><span id="more"></span>

<ol>
<li><p>The <code>h1</code> through <code>h6</code> heading elements are used to signify the importance of content below them. The lower the number, the higher the importance, so <code>h2</code> elements have less importance than <code>h1</code> elements. Only use one <code>h1</code> element per page and place lower importance headings below higher importance headings.</p>
</li>
<li><p>The <code>p</code> element is used to create a paragraph of text on websites. Create a <code>p</code> element below your <code>h2</code> element and give it the following text:<code>See more cat photos in our gallery</code></p>
</li>
<li><p>Commenting allows you to leave messages without affecting the browser display. It also allows you to make code inactive. A comment in HTML starts with <code>&lt;!--</code>, contains any number of lines of text, and ends with <code>--&gt;</code>. For example, the comment <code>&lt;!-- TODO: Remove h1 --&gt;</code> contains the text <code>TODO: Remove h1</code>.</p>
</li>
<li><p>HTML5 has some elements that identify different content areas. These elements make your HTML easier to read and help with Search Engine Optimization (SEO) and accessibility.</p>
<p>Identify the main section of this page by adding a <code>&lt;main&gt;</code> opening tag before the <code>h1</code> element, and a <code>&lt;/main&gt;</code> closing tag after the <code>p</code> element.</p>
</li>
<li><p>In the previous step, you put the <code>h1</code>, <code>h2</code>, comment, and <code>p</code> elements inside the <code>main</code> element. This is called <em>nesting</em>. Nested elements should be placed two spaces further to the right of the element they are nested in. This spacing is called indentation and it is used to make HTML easier to read.</p>
</li>
<li><p>You can add images to your website by using the <code>img</code> element. <code>img</code> elements have an opening tag without a closing tag. A tag for an element without a closing tag is known as a self-closing tag.</p>
</li>
<li><p>HTML attributes are special words used inside the opening tag of an element to control the element’s behavior. The <code>src</code> attribute in an <code>img</code> element specifies the image’s URL (where the image is located).</p>
<p>Here is an example of an <code>img</code> element with a <code>src</code> attribute pointing to the freeCodeCamp logo:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/platform/universal/fcc_secondary.svg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>All <code>img</code> elements should have an <code>alt</code> attribute. The <code>alt</code> attribute’s text is used for screen readers to improve accessibility and is displayed if the image fails to load. For example, <code>&lt;img src=&quot;cat.jpg&quot; alt=&quot;A cat&quot;&gt;</code> has an <code>alt</code> attribute with the text <code>A cat</code>.</p>
</li>
<li><p>You can link to another page with the anchor (<code>a</code>) element. For example, <code>&lt;a href=&#39;https://freecodecamp.org&#39;&gt;&lt;/a&gt;</code> would link to <code>freecodecamp.org</code>.</p>
</li>
<li><p>A link’s text must be placed between the opening and closing tags of an anchor (<code>a</code>) element. For example, <code>&lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;click here to go to freeCodeCamp.org&lt;/a&gt;</code> is a link with the text <code>click here to go to freeCodeCamp.org</code>.</p>
</li>
<li><p>In the previous step you turned the words <code>link to cat pictures</code> into a link by placing them between opening and closing anchor (<code>a</code>) tags. You can do the same to words inside of an element, such as a <code>p</code> element.</p>
</li>
<li><p>In the previous step you turned the words <code>link to cat pictures</code> into a link by placing them between opening and closing anchor (<code>a</code>) tags. You can do the same to words inside of an element, such as a <code>p</code> element.</p>
</li>
<li><p>Add a <code>target</code> attribute with the value <code>_blank</code> to the anchor (<code>a</code>) element’s opening tag, so that the link opens in a new tab.</p>
</li>
<li><p>In previous steps you used an anchor element to turn text into a link. Other types of content can also be turned into a link by wrapping it in anchor tags.</p>
<p>Turn the image into a link by surrounding it with necessary element tags. Use <code>https://freecatphotoapp.com</code> as the anchor’s <code>href</code> attribute value.</p>
</li>
<li><p>Before adding any new content, you should make use of a <code>section</code> element to separate the cat photos content from the future content.</p>
<p>Take your <code>h2</code>, comment, <code>p</code>, and anchor (<code>a</code>) elements and nest them in a <code>section</code> element.</p>
</li>
<li><p>It is time to add a new section. Add a second <code>section</code> element below the existing <code>section</code> element.</p>
</li>
<li><p>Within the second <code>section</code> element, add a new <code>h2</code> element with the text <code>Cat Lists</code>.</p>
</li>
<li><p>When you add a lower rank heading element to the page, it’s implied that you’re starting a new subsection.</p>
<p>After the last <code>h2</code> element of the second <code>section</code> element, add an <code>h3</code> element with this text:<code>Things cats love:</code></p>
</li>
<li><p>After the <code>h3</code> element with the <code>Things cats love:</code> text, add an unordered list (<code>ul</code>) element. Note that nothing will be displayed at this point.</p>
</li>
<li><p>Use list item (<code>li</code>) elements to create items in a list. Here is an example of list items in an unordered list:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>cheese<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>After the unordered list, add a new image with an <code>src</code> attribute value set to:</p>
<p><code>https://cdn.freecodecamp.org/curriculum/cat-photo-app/lasagna.jpg</code></p>
<p>And its <code>alt</code> attribute value to:<code>A slice of lasagna on a plate.</code></p>
</li>
<li><p>The <code>figure</code> element represents self-contained content and will allow you to associate an image with a caption.Nest the image you just added within a <code>figure</code> element.</p>
</li>
<li><p>A figure caption (<code>figcaption</code>) element is used to add a caption to describe the image contained within the <code>figure</code> element. For example, <code>&lt;figcaption&gt;A cute cat&lt;/figcaption&gt;</code> adds the caption <code>A cute cat</code>.</p>
<p>After the image nested in the <code>figure</code> element, add a <code>figcaption</code> element with text set to:<code>Cats love lasagna.</code></p>
</li>
<li><p>Emphasize the word <code>love</code> in the <code>figcaption</code> element by wrapping it in an emphasis <code>em</code> element.</p>
</li>
<li><p>After the <code>figure</code> element, add another <code>h3</code> element with the text:<code>Top 3 things cats hate:</code></p>
</li>
<li><p>The code for an ordered list (<code>ol</code>) is similar to an unordered list, but list items in an ordered list are numbered when displayed.</p>
<p>After the second <code>section</code> element’s last <code>h3</code> element, add an ordered list with these three list items:<code>flea treatment</code> <code>thunder</code> <code>other cats</code></p>
</li>
<li><p>After the ordered list, add another <code>figure</code> element.</p>
</li>
<li><p>Inside the <code>figure</code> element you just added, nest an <code>img</code> element with a <code>src</code> attribute set to <code>https://cdn.freecodecamp.org/curriculum/cat-photo-app/cats.jpg</code>.</p>
</li>
<li><p>To improve accessibility of the image you added, add an <code>alt</code> attribute with the text:<code>Five cats looking around a field.</code></p>
</li>
<li><p>After the last <code>img</code> element, add a <code>figcaption</code> element with the text <code>Cats hate other cats.</code></p>
</li>
<li><p>The <code>strong</code> element is used to indicate that some text is of strong importance or urgent.In the <code>figcaption</code> you just added, indicate that <code>hate</code> is of strong importance by wrapping it in a <code>strong</code> element.</p>
</li>
<li><p>It is time to add a new section. Add a third <code>section</code> element below the second <code>section</code> element.</p>
</li>
<li><p>Inside the third <code>section</code> element, add an <code>h2</code> element with the text:<code>Cat Form</code></p>
</li>
<li><p>Now you will add a web form to collect information from users.</p>
<p>After the <code>Cat Form</code> heading, add a <code>form</code> element.</p>
</li>
<li><p>The <code>action</code> attribute indicates where form data should be sent. For example, <code>&lt;form action=&quot;/submit-url&quot;&gt;&lt;/form&gt;</code> tells the browser that the form data should be sent to the path <code>/submit-url</code>.</p>
<p>Add an <code>action</code> attribute with the value <code>https://freecatphotoapp.com/submit-cat-photo</code> to the <code>form</code> element.</p>
</li>
<li><p>The <code>input</code> element allows you several ways to collect data from a web form. Like <code>img</code> elements, <code>input</code> elements are self-closing and do not need closing tags.Nest an <code>input</code> element in the <code>form</code> element.</p>
</li>
<li><p>There are many kinds of inputs you can create using the <code>type</code> attribute. You can easily create a password field, reset button, or a control to let users select a file from their computer.</p>
<p>Create a text field to get text input from a user by adding the <code>type</code> attribute with the value <code>text</code> to the <code>input</code> element.</p>
</li>
<li><p>In order for a form’s data to be accessed by the location specified in the <code>action</code> attribute, you must give the text field a <code>name</code> attribute and assign it a value to represent the data being submitted. For example, you could use the following syntax for an email address text field: <code>&lt;input type=&quot;text&quot; name=&quot;email&quot;&gt;</code>.</p>
<p>Add the <code>name</code> attribute with the value <code>catphotourl</code> to your text field.</p>
</li>
<li><p>Placeholder text is used to give people a hint about what kind of information to enter into an input. For example, <code>&lt;input type=&quot;text&quot; placeholder=&quot;Email address&quot;&gt;</code>.Add the placeholder text <code>cat photo URL</code> to your <code>input</code> element.</p>
</li>
<li><p>To prevent a user from submitting your form when required information is missing, you need to add the <code>required</code> attribute to an <code>input</code> element. There’s no need to set a value to the <code>required</code> attribute. Instead, just add the word <code>required</code> to the <code>input</code> element, making sure there is space between it and other attributes.</p>
</li>
<li><p>Use the <code>button</code> element to create a clickable button. For example, <code>&lt;button&gt;Click Here&lt;/button&gt;</code> creates a button with the text <code>Click Here</code>.</p>
<p>Add a <code>button</code> element with the text <code>Submit</code> below the <code>input</code> element. The default behavior of clicking a form button without any attributes submits the form to the location specified in the form’s <code>action</code> attribute.</p>
</li>
<li><p>Even though you added your button below the text input, they appear next to each other on the page. That’s because both <code>input</code> and <code>button</code> elements are inline elements, which don’t appear on new lines.</p>
<p>The button you added will submit the form by default. However, relying on default behavior may cause confusion. Add the <code>type</code> attribute with the value <code>submit</code> to the <code>button</code> to make it clear that it is a submit button.</p>
</li>
<li><p>You can use radio buttons for questions where you want only one answer out of multiple options.</p>
<p>Here is an example of a radio button with the option of <code>cat</code>: <code>&lt;input type=&quot;radio&quot;&gt; cat</code>. Remember that <code>input</code> elements are self-closing.</p>
<p>Before the text input, add a radio button with the option set as:<code>Indoor</code></p>
</li>
<li><p><code>label</code> elements are used to help associate the text for an <code>input</code> element with the <code>input</code> element itself (especially for assistive technologies like screen readers). For example, <code>&lt;label&gt;&lt;input type=&quot;radio&quot;&gt; cat&lt;/label&gt;</code> makes it so clicking the word <code>cat</code> also selects the corresponding radio button.</p>
<p>Nest your <code>radio</code> button inside a <code>label</code> element.</p>
</li>
<li><p>The <code>id</code> attribute is used to identify specific HTML elements. Each <code>id</code> attribute’s value must be unique from all other <code>id</code> values for the entire page.</p>
<p>Add an <code>id</code> attribute with the value <code>indoor</code> to the radio button. When elements have multiple attributes, the order of the attributes doesn’t matter.</p>
</li>
<li><p>Create another radio button below the first one. Nest it inside a <code>label</code> element with <code>Outdoor</code> as the <code>label</code> text. Give the radio button an <code>id</code> attribute with <code>outdoor</code> as the value.</p>
</li>
<li><p>Notice that both radio buttons can be selected at the same time. To make it so selecting one radio button automatically deselects the other, both buttons must have a <code>name</code> attribute with the same value.</p>
<p>Add the <code>name</code> attribute with the value <code>indoor-outdoor</code> to both radio buttons.</p>
</li>
<li><p>If you select the <code>Indoor</code> radio button and submit the form, the form data for the button is based on its <code>name</code> and <code>value</code> attributes. Since your radio buttons do not have a <code>value</code> attribute, the form data will include <code>indoor-outdoor=on</code>, which is not useful when you have multiple buttons.</p>
<p>Add a <code>value</code> attribute to both radio buttons. For convenience, set the button’s <code>value</code> attribute to the same value as its <code>id</code> attribute.</p>
</li>
<li><p>The <code>fieldset</code> element is used to group related inputs and labels together in a web form. <code>fieldset</code> elements are block-level elements, meaning that they appear on a new line.</p>
<p>Nest the <code>Indoor</code> and <code>Outdoor</code> radio buttons within a <code>fieldset</code> element, and don’t forget to indent the radio buttons.</p>
</li>
<li><p>The <code>legend</code> element acts as a caption for the content in the <code>fieldset</code> element. It gives users context about what they should enter into that part of the form.</p>
<p>Add a <code>legend</code> element with the text <code>Is your cat an indoor or outdoor cat?</code> above both of the radio buttons.</p>
</li>
<li><p>Next, you are going to add some new form <code>input</code> elements, so add another <code>fieldset</code> element directly below the current <code>fieldset</code> element.</p>
</li>
<li><p>Add a <code>legend</code> element with the text <code>What&#39;s your cat&#39;s personality?</code> inside the second <code>fieldset</code> element.</p>
</li>
<li><p>Forms commonly use checkboxes for questions that may have more than one answer. For example, here’s a checkbox with the option of <code>tacos</code>: <code>&lt;input type=&quot;checkbox&quot;&gt; tacos</code>.</p>
<p>Under the <code>legend</code> element you just added, add an <code>input</code> with its <code>type</code> attribute set to <code>checkbox</code> and give it the option of:<code>Loving</code></p>
</li>
<li><p>Add an <code>id</code> attribute with the value <code>loving</code> to the checkbox input.</p>
</li>
<li><p>There’s another way to associate an <code>input</code> element’s text with the element itself. You can nest the text within a <code>label</code> element and add a <code>for</code> attribute with the same value as the <code>input</code> element’s <code>id</code> attribute.</p>
<p>Associate the text <code>Loving</code> with the checkbox by nesting only the text <code>Loving</code> in a <code>label</code> element and giving it an appropriate <code>for</code> attribute.</p>
</li>
<li><p>Add the <code>name</code> attribute with the value <code>personality</code> to the checkbox <code>input</code> element.</p>
<p>While you won’t notice this in the browser, doing this makes it easier for a server to process your web form, especially when there are multiple checkboxes.</p>
</li>
<li><p>Add another checkbox after the one you just added. The <code>id</code> attribute value should be <code>lazy</code> and the <code>name</code> attribute value should be the same as the last checkbox.</p>
<p>Also add a <code>label</code> element to the right of the new checkbox with the text <code>Lazy</code>. Make sure to associate the <code>label</code> element with the new checkbox using the <code>for</code> attribute.</p>
</li>
<li><p>Add a final checkbox after the previous one with an <code>id</code> attribute value of <code>energetic</code>. The <code>name</code> attribute should be the same as the previous checkbox.</p>
<p>Also add a <code>label</code> element to the right of the new checkbox with text <code>Energetic</code>. Make sure to associate the <code>label</code> element with the new checkbox.</p>
</li>
<li><p>Like radio buttons, form data for selected checkboxes are <code>name</code> / <code>value</code> attribute pairs. While the <code>value</code> attribute is optional, it’s best practice to include it with any checkboxes or radio buttons on the page.</p>
<p>Add a <code>value</code> attribute to each checkbox. For convenience, set each checkbox’s <code>value</code> attribute to the same value as its <code>id</code> attribute.</p>
</li>
<li><p>In order to make a checkbox checked or radio button selected by default, you need to add the <code>checked</code> attribute to it. There’s no need to set a value to the <code>checked</code> attribute. Instead, just add the word <code>checked</code> to the <code>input</code> element, making sure there is space between it and other attributes.</p>
<p>Make the first radio button and the first checkbox selected by default.</p>
</li>
<li><p>Now you will add a footer section to the page.</p>
<p>After the <code>main</code> element, add a <code>footer</code> element.</p>
</li>
<li><p>Nest a <code>p</code> element with the text <code>No Copyright - freeCodeCamp.org</code> within the <code>footer</code> element.</p>
</li>
<li><p>Make the text <code>freeCodeCamp.org</code> into a link by enclosing it in an anchor (<code>a</code>) element. The <code>href</code> attribute should be set to <code>https://www.freecodecamp.org</code>.</p>
</li>
<li><p>Notice that everything you’ve added to the page so far is inside the <code>body</code> element. All page content elements that should be rendered to the page go inside the <code>body</code> element. However, other important information goes inside the <code>head</code> element.</p>
<p>Add a <code>head</code> element above the <code>body</code> element.</p>
</li>
<li><p>The <code>title</code> element determines what browsers show in the title bar or tab for the page.</p>
<p>Add a <code>title</code> element within the <code>head</code> element using the text below:</p>
<p><code>CatPhotoApp</code></p>
</li>
<li><p>Notice that the entire contents of the page are nested within an <code>html</code> element. All other elements must be descendants of this <code>html</code> element.</p>
<p>Add the <code>lang</code> attribute with the value <code>en</code> to the opening <code>html</code> tag to specify that the language of the page is English.</p>
</li>
<li><p>All pages should begin with <code>&lt;!DOCTYPE html&gt;</code>. This special string is known as a declaration and ensures the browser tries to meet industry-wide specifications.</p>
<p>Add this declaration as the first line of the code.</p>
</li>
<li><p>You can set browser behavior by adding self-closing <code>meta</code> elements in the <code>head</code>. Here’s an example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">attribute</span>=<span class="string">&quot;value&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Tell the browser to parse the markup into multiple languages by creating a <code>meta</code> element as a child of the <code>head</code> element. Set its <code>charset</code> attribute to <code>UTF-8</code>.</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;CatPhotoApp&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;main&gt;</span><br><span class="line">            &lt;h1&gt; CatPhotoApp &lt;/h1&gt;</span><br><span class="line">            &lt;section&gt;</span><br><span class="line">                &lt;h2&gt; Cat Photos &lt;/h2&gt;</span><br><span class="line">                &lt;!-- TODO: Add link to cat photos --&gt;</span><br><span class="line">                &lt;p&gt;See more &lt;a href=&quot;https://freecatphotoapp.com&quot; target=&quot;_blank&quot;&gt;cat photos&lt;/a&gt; in our gallery.&lt;/p&gt;</span><br><span class="line">                &lt;!-- 删除a链接： &lt;a href=&quot;https://freecatphotoapp.com&quot;&gt;link to cat pictures&lt;/a&gt;--&gt;</span><br><span class="line">                &lt;a href=&quot;https://freecatphotoapp.com&quot;&gt;</span><br><span class="line">                    &lt;img src=&quot;https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg&quot; alt=&quot;A cute orange cat lying on its back.&quot;&gt;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">            &lt;/section&gt;</span><br><span class="line">            &lt;section&gt;</span><br><span class="line">                &lt;h2&gt;Cat Lists&lt;/h2&gt;</span><br><span class="line">                &lt;h3&gt;Things cats love:&lt;/h3&gt;   </span><br><span class="line">                &lt;ul&gt;         </span><br><span class="line">                    &lt;li&gt;cat nip&lt;/li&gt;</span><br><span class="line">                    &lt;li&gt;laser pointers&lt;/li&gt;</span><br><span class="line">                    &lt;li&gt;lasagna&lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">                &lt;figure&gt;</span><br><span class="line">                    &lt;img src=&quot;https://cdn.freecodecamp.org/curriculum/cat-photo-app/lasagna.jpg&quot; alt=&quot;A slice of lasagna on a plate.&quot;&gt;     </span><br><span class="line">                    &lt;figcaption&gt;Cats &lt;em&gt;love&lt;/em&gt; lasagna.&lt;/figcaption&gt;</span><br><span class="line">                &lt;/figure&gt;</span><br><span class="line">                &lt;h3&gt;Top 3 things cats hate:&lt;/h3&gt;</span><br><span class="line">                &lt;ol&gt;</span><br><span class="line">                    &lt;li&gt;flea treatment&lt;/li&gt;</span><br><span class="line">                    &lt;li&gt;thunder&lt;/li&gt;</span><br><span class="line">                    &lt;li&gt;other cats&lt;/li&gt;</span><br><span class="line">                &lt;/ol&gt;</span><br><span class="line">                &lt;figure&gt;</span><br><span class="line">                    &lt;img src=&quot;https://cdn.freecodecamp.org/curriculum/cat-photo-app/cats.jpg&quot; alt=&quot;Five cats looking around a field.&quot;&gt;</span><br><span class="line">                    &lt;figcaption&gt;Cats  &lt;strong&gt; hate &lt;/strong&gt; other cats.&lt;/figcaption&gt; </span><br><span class="line">                &lt;/figure&gt;</span><br><span class="line">            &lt;/section&gt;</span><br><span class="line">            &lt;section&gt;</span><br><span class="line">                &lt;form action=&quot;https://freecatphotoapp.com/submit-cat-photo&quot;&gt;</span><br><span class="line">                      &lt;fieldset&gt; </span><br><span class="line">                          &lt;legend&gt;Is your cat an indoor or outdoor cat?&lt;/legend&gt;   </span><br><span class="line">                          &lt;label&gt;&lt;input id=&quot;indoor&quot; type=&quot;radio&quot; name=&quot;indoor-outdoor&quot; value=&quot;indoor&quot; checked&gt; Indoor&lt;/label&gt;</span><br><span class="line">                          &lt;label&gt;&lt;input id=&quot;outdoor&quot; type=&quot;radio&quot; name=&quot;indoor-outdoor&quot; value=&quot;outdoor&quot;&gt; Outdoor&lt;/label&gt;</span><br><span class="line">                      &lt;/fieldset&gt;</span><br><span class="line">                      &lt;fieldset&gt;</span><br><span class="line">                          &lt;legend&gt;What&#x27;s your cat&#x27;s personality?&lt;/legend&gt;</span><br><span class="line">                          &lt;input id=&quot;loving&quot; type=&quot;checkbox&quot; name=&quot;personality&quot; value=&quot;loving&quot; checked&gt; &lt;label for=&quot;loving&quot;&gt;Loving&lt;/label&gt;</span><br><span class="line">                          &lt;input id=&quot;lazy&quot; type=&quot;checkbox&quot; name=&quot;personality&quot; value=&quot;lazy&quot;&gt; &lt;label for=&quot;lazy&quot;&gt;Lazy&lt;/label&gt;</span><br><span class="line">                          &lt;input id=&quot;energetic&quot; type=&quot;checkbox&quot; name=&quot;personality&quot; value=&quot;energetic&quot;&gt; &lt;label for=&quot;energetic&quot;&gt; Energetic&lt;/label&gt;</span><br><span class="line">                      &lt;/fieldset&gt;</span><br><span class="line">                      &lt;input type=&quot;text&quot; name=&quot;catphotourl&quot; placeholder=&quot;cat photo URL&quot; required&gt;</span><br><span class="line">                      &lt;button type=&quot;submit&quot;&gt;Submit&lt;/button&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/section&gt;</span><br><span class="line">        &lt;/main&gt;</span><br><span class="line">        &lt;footer&gt;</span><br><span class="line">             &lt;p&gt;No Copyright - &lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/footer&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">&lt;/html&gt;                     </span><br></pre></td></tr></table></figure>

<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>CatPhotoApp</title>
    </head>
    <body>
        <main>
            <h1> CatPhotoApp </h1>
            <section>
                <h2> Cat Photos </h2>
                <!-- TODO: Add link to cat photos -->
                <p>See more <a href="https://freecatphotoapp.com" target="_blank">cat photos</a> in our gallery.</p>
                <!-- 删除a链接： <a href="https://freecatphotoapp.com">link to cat pictures</a>-->
                <a href="https://freecatphotoapp.com">
                    <img src="https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg" alt="A cute orange cat lying on its back.">
                </a>
            </section>
            <section>
                <h2>Cat Lists</h2>
                <h3>Things cats love:</h3>   
                <ul>         
                    <li>cat nip</li>
                    <li>laser pointers</li>
                    <li>lasagna</li>
                </ul>
                <figure>
                    <img src="https://cdn.freecodecamp.org/curriculum/cat-photo-app/lasagna.jpg" alt="A slice of lasagna on a plate.">     
                    <figcaption>Cats <em>love</em> lasagna.</figcaption>
                </figure>
                <h3>Top 3 things cats hate:</h3>
                <ol>
                    <li>flea treatment</li>
                    <li>thunder</li>
                    <li>other cats</li>
                </ol>
                <figure>
                    <img src="https://cdn.freecodecamp.org/curriculum/cat-photo-app/cats.jpg" alt="Five cats looking around a field.">
                    <figcaption>Cats  <strong> hate </strong> other cats.</figcaption> 
                </figure>
            </section>
            <section>
                <form action="https://freecatphotoapp.com/submit-cat-photo">
                      <fieldset> 
                          <legend>Is your cat an indoor or outdoor cat?</legend>   
                          <label><input id="indoor" type="radio" name="indoor-outdoor" value="indoor" checked> Indoor</label>
                          <label><input id="outdoor" type="radio" name="indoor-outdoor" value="outdoor"> Outdoor</label>
                      </fieldset>
                      <fieldset>
                          <legend>What's your cat's personality?</legend>
                          <input id="loving" type="checkbox" name="personality" value="loving" checked> <label for="loving">Loving</label>
                          <input id="lazy" type="checkbox" name="personality" value="lazy"> <label for="lazy">Lazy</label>
                          <input id="energetic" type="checkbox" name="personality" value="energetic"> <label for="energetic"> Energetic</label>
                      </fieldset>
                      <input type="text" name="catphotourl" placeholder="cat photo URL" required>
                      <button type="submit">Submit</button>
                </form>
            </section>
        </main>
        <footer>
             <p>No Copyright - <a href="https://www.freecodecamp.org">freeCodeCamp.org</a></p>
        </footer>
    <body>
<html>
</html></body></body></html>]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(十一)</title>
    <url>/responsive-web-dedign-%E5%8D%81%E4%B8%80/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-Responsive-Web-Design-by-Building-a-Piano"><a href="#Learn-Responsive-Web-Design-by-Building-a-Piano" class="headerlink" title="Learn Responsive Web Design by Building a Piano"></a>Learn Responsive Web Design by Building a Piano</h4><span id="more"></span>

<ol>
<li><p>Begin with the basic HTML structure. Add a <code>DOCTYPE</code> declaration and <code>html</code>, <code>head</code>, <code>body</code>, and <code>title</code> elements.</p>
<p>Set the language of this page to English. Set the <code>title</code> to <code>Piano</code>.</p>
</li>
<li><p>Add two <code>meta</code> tags, one to optimize your page for mobile devices, and one to specify an accepted <code>charset</code> for the page.</p>
</li>
<li><p>Time to start working on the piano. Create a <code>div</code> element within your <code>body</code> element with the <code>id</code> set to <code>piano</code>.</p>
</li>
<li><p>Nest a second <code>div</code> within your existing <code>div</code>, and set the <code>class</code> to be <code>keys</code>.</p>
</li>
<li><p>Within your <code>.keys</code> element, add seven <code>div</code> elements. Give them all the class <code>key</code>.</p>
</li>
<li><p>Remember that a <code>class</code> attribute can have multiple values. To separate your white keys from your black keys, you’ll add a second <code>class</code> value of <code>black--key</code>. Add this to your second, third, fifth, sixth, and seventh <code>.key</code> elements.</p>
</li>
<li><p>Now copy the set of seven <code>.key</code> elements, and paste two more sets into the <code>.keys</code> div.</p>
</li>
<li><p>Add a <code>link</code> element within your <code>head</code> element. For that <code>link</code> element, set the <code>rel</code> attribute to <code>stylesheet</code> and the <code>href</code> to <code>./styles.css</code>.</p>
</li>
<li><p>Browsers can apply default margin and padding values to specific elements. To make sure your piano looks correct, you need to reset the box model.</p>
<p>Add an <code>html</code> rule selector to your CSS file, and set the <code>box-sizing</code> property to <code>border-box</code>.</p>
</li>
<li><p>The <code>::before</code> selector creates a pseudo-element which is the first child of the selected element, while the <code>::after</code> selector creates a pseudo-element which is the last child of the selected element. These pseudo-elements are often used to create cosmetic content, which you will see later in this project.</p>
<p>For now, create a CSS selector to target all elements with <code>*</code>, and include the pseudo-elements with <code>::before</code> and <code>::after</code>. Set the <code>box-sizing</code> property to <code>inherit</code>.</p>
</li>
<li><p>Now target your <code>#piano</code> element with an <code>id</code> selector. Set <code>background-color</code> property to <code>#00471b</code>, the <code>width</code> property to <code>992px</code> and the <code>height</code> property to <code>290px</code>.</p>
</li>
<li><p>Set the <code>margin</code> of the <code>#piano</code> to <code>80px auto</code>.</p>
</li>
<li><p>Time to style the keys. Below the <code>#piano</code> rule, target the <code>.keys</code> element with a <code>class</code> selector. Give the new rule a <code>background-color</code> property of <code>#040404</code>, a <code>width</code> property of <code>949px</code> and a <code>height</code> property of <code>180px</code>.</p>
</li>
<li><p>Give the <code>.keys</code> a <code>padding-left</code> of <code>2px</code>.</p>
</li>
<li><p>Move the keys into position by adjusting the <code>#piano</code> selector. Set the <code>padding</code> property to <code>90px 20px 0 20px</code>.</p>
</li>
<li><p>Time to style the keys themselves. Create a <code>class</code> selector for the <code>.key</code> elements. Set the <code>background-color</code> set to the value <code>#ffffff</code>, the <code>position</code> property to <code>relative</code>, the <code>width</code> property to <code>41px</code>, and the <code>height</code> property to <code>175px</code>.</p>
</li>
<li><p>Give the <code>.key</code> a <code>margin</code> of <code>2px</code> and a <code>float</code> property set to <code>left</code>.</p>
</li>
<li><p>Now it is time to use the pseudo-selectors you prepared for earlier. To create the black keys, add a new <code>.key.black--key::after</code> selector. This will target the elements with the class <code>key black--key</code>, and select the pseudo-element after these elements in the HTML.</p>
<p>In the new selector, set the <code>background-color</code> to <code>#1d1e22</code>. Also set the <code>content</code> property to <code>&quot;&quot;</code>. This will make the pseudo-elements empty.</p>
<p>The <code>content</code> property is used to set or override the content of the element. By default, the pseudo-elements created by the <code>::before</code> and <code>::after</code> pseudo-selectors are empty, and the elements will not be rendered to the page. Setting the <code>content</code> property to an empty string <code>&quot;&quot;</code> will ensure the element is rendered to the page while still being empty.</p>
<p>If you would like to experiment, try removing the <code>background-color</code> property and setting different values for the <code>content</code> property, such as <code>&quot;♥&quot;</code>. Remember to undo these changes when you are done so the tests pass.</p>
</li>
<li><p>Give the <code>.key.black--key::after</code> a <code>position</code> property set to <code>absolute</code> and a <code>left</code> property set to <code>-18px</code>.</p>
</li>
<li><p>For the <code>.key.black--key::after</code>, set the <code>width</code> to <code>32px</code> and the <code>height</code> to <code>100px</code>.</p>
</li>
<li><p>The piano needs the freeCodeCamp logo to make it official.</p>
<p>Add an <code>img</code> element before your <code>.keys</code> element. Give the <code>img</code> a <code>class</code> of <code>logo</code>, and set the <code>src</code> to <code>https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg</code>. Give it an <code>alt</code> text of <code>freeCodeCamp Logo</code>.</p>
</li>
<li><p>Start styling the logo by creating a <code>.logo</code> selector. Set the <code>width</code> to <code>200px</code>, a <code>position</code> of <code>absolute</code> and a <code>top</code> set to <code>23px</code>.</p>
</li>
<li><p>The <code>img</code> element needs its parent to have a <code>position</code> set as a point of reference. Set the <code>position</code> of the <code>#piano</code> selector to <code>relative</code>.</p>
</li>
<li><p>To smooth the sharp edges of the piano and keys, start by giving the <code>#piano</code> a <code>border-radius</code> of <code>10px</code>.</p>
</li>
<li><p>Give the <code>.key</code> selector a <code>border-radius</code> value of <code>0 0 3px 3px</code>.</p>
</li>
<li><p>Give the <code>.key.black--key::after</code> selector a <code>border-radius</code> of <code>0 0 3px 3px</code> to match the keys.</p>
</li>
<li><p>The <code>@media</code> at-rule, also known as a media query, is used to conditionally apply CSS. Media queries are commonly used to apply CSS based on the viewport width using the <code>max-width</code> and <code>min-width</code> properties.</p>
<p>In the below example the padding is applied to the <code>.card</code> class when the viewport is <code>960px</code> wide and below.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">960px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.card</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Add a media query that will be applied when the viewport is <code>768px</code> wide and below.</p>
</li>
<li><p>Add a new <code>#piano</code> selector within your <code>@media</code> query, and set the <code>width</code> to <code>358px</code>.</p>
</li>
<li><p>Within the <code>@media</code> query, add a <code>.keys</code> selector and set the <code>width</code> to <code>318px</code>.</p>
</li>
<li><p>Now add a <code>.logo</code> selector to the <code>@media</code> query, and set the <code>width</code> property to <code>150px</code>.</p>
</li>
<li><p>You might have noticed the keys collapse when the browser window is smaller than <code>768px</code>. Set <code>overflow</code> to <code>hidden</code> in the first <code>.keys</code> selector, to take care of this issue. This property will hide any element that is pushed outside the set <code>width</code> value of <code>.keys</code>.</p>
</li>
<li><p>Logical operators can be used to construct more complex media queries. The <code>and</code> logical operator is used to query two media conditions.</p>
<p>For example, a media query that targets a display width between 500px and 1000px would be:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">500px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1000px</span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Add another <code>@media</code> rule to apply if the browser window is wider than <code>769px</code> but smaller than <code>1199px</code>.</p>
</li>
<li><p>For the new <code>@media</code> rule, set the <code>width</code> of the <code>#piano</code> to <code>675px</code> and the <code>width</code> of the <code>.keys</code> to <code>633px</code>.</p>
<p>With that, your piano is complete!</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Piano<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;piano&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;freeCodeCamp Logo&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;keys&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;key black--key&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*, *<span class="selector-pseudo">::before</span>, *<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#piano</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#00471b</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">992px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">290px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">80px</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">90px</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.keys</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#040404</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">949px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">180px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.key</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">41px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">175px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.key</span><span class="selector-class">.black--key</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#1d1e22</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">23px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#piano</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">358px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.keys</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">318px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>media</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(十二)</title>
    <url>/responsive-web-dedign-%E5%8D%81%E4%BA%8C/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-CSS-Variables-by-Building-a-City-Skyline"><a href="#Learn-CSS-Variables-by-Building-a-City-Skyline" class="headerlink" title="Learn CSS Variables by Building a City Skyline"></a>Learn CSS Variables by Building a City Skyline</h4><span id="more"></span>

<ol>
<li><p>Welcome to the CSS Variables Skyline project! Start by adding the <code>!DOCTYPE html</code> declaration at the top of the document so the browser knows what type of document it’s reading.</p>
</li>
<li><p>Add opening and closing <code>html</code> tags below the <code>DOCTYPE</code> so you have a place to start putting some code. Be sure to set the language to English.</p>
</li>
<li><p>Next, add opening and closing <code>head</code> and <code>body</code> tags within the <code>html</code> element.</p>
</li>
<li><p>Within the <code>head</code>, nest a <code>meta</code> element with a <code>charset</code> of <code>UTF-8</code>, a <code>title</code> element with a title of <code>City Skyline</code>, and a <code>link</code> element that links your <code>styles.css</code> file.</p>
</li>
<li><p>In CSS, you can target everything with an asterisk. Add a border to everything by using the <code>*</code> selector, and giving it a <code>border</code> of <code>1px solid black</code>. This is a trick that helps visualize where elements are and their size. You will remove this later.</p>
</li>
<li><p>Also add a <code>box-sizing</code> of <code>border-box</code> to everything. This will make it so the border you added doesn’t add any size to your elements.</p>
</li>
<li><p>You can see the <code>body</code> (it’s the inner-most box on your page); the box around it is the <code>html</code> element. Make your <code>body</code> fill the whole viewport by giving it a <code>height</code> of <code>100vh</code>. Remove the default <code>margin</code> from the <code>body</code> by setting the <code>margin</code> to <code>0</code>. Finally, set the <code>overflow</code> property to <code>hidden</code> to hide any scroll bars that appear when something extends past the viewport.</p>
</li>
<li><p>Create a <code>div</code> element in the <code>body</code> with a class of <code>background-buildings</code>. This will be a container for a group of buildings.</p>
</li>
<li><p>Give your <code>.background-buildings</code> element a <code>width</code> and <code>height</code> of <code>100%</code> to make it the full width and height of its parent, the <code>body</code>.</p>
</li>
<li><p>Nest a <code>div</code> with a class of <code>bb1</code> in the background buildings container. Open your <code>styles.css</code> file, and give <code>.bb1</code> a <code>width</code> of <code>10%</code> and <code>height</code> of <code>70%</code>. “bb” stands for “background building”, this will be your first building.</p>
</li>
<li><p>Nest four <code>div</code> elements in the <code>.bb1</code> container. Give them the classes <code>bb1a</code>, <code>bb1b</code>, <code>bb1c</code>, and <code>bb1d</code> in that order. This building will have four sections.</p>
</li>
<li><p>Give the parts of your building <code>width</code> and <code>height</code> properties with these values: <code>70%</code> and <code>10%</code> to <code>.bb1a</code>, <code>80%</code> and <code>10%</code> to <code>.bb1b</code>, <code>90%</code> and <code>10%</code> to <code>.bb1c</code>, and <code>100%</code> and <code>70%</code> to <code>.bb1d</code>. Remember that these percentages are relative to the parent and note that the heights will add up to 100% - vertically filling the container.</p>
</li>
<li><p>Center the parts of your building by turning the <code>.bb1</code> element into a flexbox parent. Use the <code>flex-direction</code> and <code>align-items</code> properties to center the children.</p>
</li>
<li><p>Now you have something that is resembling a building. You are ready to create your first variable. Variable declarations begin with two dashes (<code>-</code>) and are given a name and a value like this: <code>--variable-name: value;</code>. In the rule for the <code>bb1</code> class, create a variable named <code>--building-color1</code> and give it a value of <code>#999</code>.</p>
</li>
<li><p>To use a variable, put the variable name in parentheses with <code>var</code> in front of them like this: <code>var(--variable-name)</code>. Whatever value you gave the variable will be applied to whatever property you use it on.</p>
<p>Add the variable <code>--building-color1</code> you created in the previous step as the value of the <code>background-color</code> property of the <code>.bb1a</code> class.</p>
</li>
<li><p>Use the same variable as the <code>background-color</code> of the <code>.bb1b</code>, <code>.bb1c</code>, and <code>.bb1d</code> classes to fill in the rest of the building.</p>
</li>
<li><p>Change the value of your variable from <code>#999</code> to <code>#aa80ff</code> and you can see how it gets applied everywhere you used the variable. This is the main advantage of using variables, being able to quickly change many values in your stylesheet by just changing the value of a variable.</p>
</li>
<li><p>Your first building looks pretty good now. Nest three new <code>div</code> elements in the <code>.background-buildings</code> container and give them the classes of <code>bb2</code>, <code>bb3</code>, and <code>bb4</code> in that order. These will be three more buildings for the background.</p>
</li>
<li><p>Give the new buildings <code>width</code> and <code>height</code> properties of: <code>10%</code> and <code>50%</code> for <code>.bb2</code>, <code>10%</code> and <code>55%</code> for <code>.bb3</code>, and <code>11%</code> and <code>58%</code> for <code>.bb4</code>. You will be using almost all percent based units and some flexbox for this project, so everything will be completely responsive.</p>
</li>
<li><p>The buildings are currently stacked on top of each other. Align the buildings by turning the <code>.background-buildings</code> element into a flexbox parent. Use the <code>align-items</code> and <code>justify-content</code> properties to evenly space the buildings across the bottom of the element.</p>
</li>
<li><p>The buildings are too spaced out. Squeeze them together by adding two empty <code>div</code> elements to the top of the <code>.background-buildings</code> element, two more at the bottom of it, and one more in between <code>.bb3</code> and <code>.bb4</code>. These will be added as evenly-spaced elements across the container, effectively moving the buildings closer to the center.</p>
</li>
<li><p>Create a new variable below your <code>--building-color1</code> variable. Name your new variable <code>--building-color2</code> and give it a value of <code>#66cc99</code>. Then set it as the <code>background-color</code> of <code>.bb2</code>.</p>
</li>
<li><p>That didn’t work. You should add a fallback value to a variable by putting it as the second value of where you use the variable like this: <code>var(--variable-name, fallback-value)</code>. The property will use the fallback value when there’s a problem with the variable. Add a fallback value of <code>green</code> to the <code>background-color</code> of <code>.bb2</code>.</p>
</li>
<li><p>Create a new variable below the other ones named <code>--building-color3</code> and give it a value of <code>#cc6699</code>. Then use it as the <code>background-color</code> of the <code>.bb3</code> class and give it a fallback value of <code>pink</code>.</p>
</li>
<li><p>That didn’t work, because the variables you declared in <code>.bb1</code> do not cascade to the <code>.bb2</code> and <code>.bb3</code> sibling elements. That’s just how CSS works. Because of this, variables are often declared in the <code>:root</code> selector. This is the highest level selector in CSS; putting your variables there will make them usable everywhere. Add the <code>:root</code> selector to the top of your stylesheet, and move all your variable declarations there.</p>
</li>
<li><p>Now that you’ve worked the bugs out and the buildings are the right colors, you can remove the fallback values in the two places they were used. Go ahead and do that now.</p>
</li>
<li><p>Create another variable named <code>--building-color4</code> and give it a value of <code>#538cc6</code>. Make sure it’s in the <code>:root</code> selector this time. Then use it to fill in the last building.</p>
</li>
<li><p>The background buildings are starting to look pretty good. Create a new <code>div</code> below the <code>.background-buildings</code> element and give it a class of <code>foreground-buildings</code>. This will be another container for more buildings.</p>
</li>
<li><p>You want the <code>.foreground-buildings</code> container to sit directly on top of the <code>.background-buildings</code> element. Give it a <code>width</code> and <code>height</code> of <code>100%</code>, set the <code>position</code> to <code>absolute</code>, and the <code>top</code> to <code>0</code>. This will make it the same size as the body and move the start of it to the top left corner.</p>
</li>
<li><p>Nest six <code>div</code> elements within <code>.foreground-buildings</code> and give them the classes of <code>fb1</code> through <code>fb6</code> in that order. “fb” stands for “foreground building”. These will be six more buildings for the foreground.</p>
</li>
<li><p>Give the six new elements these <code>width</code> and <code>height</code> values: <code>10%</code> and <code>60%</code> to <code>.fb1</code>, <code>10%</code> and <code>40%</code> to <code>.fb2</code>, <code>10%</code> and <code>35%</code> to <code>.fb3</code>, <code>8%</code> and <code>45%</code> to <code>.fb4</code>, <code>10%</code> and <code>33%</code> to <code>.fb5</code>, and <code>9%</code> and <code>38%</code> to <code>.fb6</code>.</p>
</li>
<li><p>Add the same <code>display</code>, <code>align-items</code>, and <code>justify-content</code> properties and values to <code>.foreground-buildings</code> that you used on <code>.background-buildings</code>. Again, this will use Flexbox to evenly space the buildings across the bottom of their container.</p>
</li>
<li><p>You should optimize your code. Move the <code>position</code> and <code>top</code> properties and values from <code>.foreground-buildings</code> to <code>.background-buildings</code>. Then select both <code>.background-buildings</code> and <code>.foreground-buildings</code> there, effectively applying those styles to both of the elements. You can use a comma (<code>,</code>) to separate selectors like this: <code>selector1, selector2</code>.</p>
</li>
<li><p>Now that you did that, you can delete the old <code>.foreground-buildings</code> declaration and all of its properties since they aren’t needed anymore.</p>
</li>
<li><p>The skyline is coming together. Fill in the <code>background-color</code> property of the foreground buildings. Use your <code>--building-color1</code> variable to fill in <code>.fb3</code> and <code>.fb4</code>, <code>--building-color2</code> for <code>.fb5</code>, <code>--building-color3</code> for <code>.fb2</code> and <code>.fb6</code>, and <code>--building-color4</code> for <code>.fb1</code>.</p>
</li>
<li><p>Squeeze the buildings together again by adding two empty <code>div</code> elements within both the top and bottom of the <code>.foreground-buildings</code> element, and one more in between <code>.fb2</code> and <code>.fb3</code>.</p>
</li>
<li><p>Move the position of <code>.fb4</code> relative to where it is now by adding a <code>position</code> of <code>relative</code> and <code>left</code> of <code>10%</code> to it. Do the same for <code>.fb5</code> but use <code>right</code> instead of <code>left</code>. This will cover up the remaining white space in between the buildings.</p>
</li>
<li><p>Your code is starting to get quite long. Add a comment above the <code>.fb1</code> class that says <code>FOREGROUND BUILDINGS - &quot;fb&quot; stands for &quot;foreground building&quot;</code> to help people understand your code. Above the <code>.bb1</code> class add another comment that says <code>BACKGROUND BUILDINGS - &quot;bb&quot; stands for &quot;background building&quot;</code>. If you don’t remember, comments in CSS look like this: <code>/* Comment here */</code>.</p>
</li>
<li><p>Create a new variable in <code>:root</code> called <code>--window-color1</code> and give it a value of <code>black</code>. This will be a secondary color for the purple buildings.</p>
</li>
<li><p>Gradients in CSS are a way to transition between colors across the distance of an element. They are applied to the <code>background</code> property and the syntax looks like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">gradient-type(</span><br><span class="line">  color1,</span><br><span class="line">  color2</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>In the example, <code>color1</code> is solid at the top, <code>color2</code> is solid at the bottom, and in between it transitions evenly from one to the next. In <code>.bb1a</code>, add a <code>background</code> property below the <code>background-color</code> property. Set it as a gradient of type <code>linear-gradient</code> that uses <code>--building-color1</code> as the first color and <code>--window-color1</code> as the second.</p>
</li>
<li><p>You want to add the same gradient to the next two sections. Instead of doing that, create a new class selector called <code>bb1-window</code>, and move the <code>height</code> and <code>background</code> properties and values from <code>.bb1a</code> to the new class selector.</p>
</li>
<li><p>Add the new <code>bb1-window</code> class to the <code>.bb1a</code>, <code>.bb1b</code>, and <code>.bb1c</code> elements. This will apply the gradient to them.</p>
</li>
<li><p>You don’t need the <code>height</code> or <code>background-color</code> properties in <code>.bb1a</code>, <code>.bb1b</code> or <code>.bb1c</code> anymore, so go ahead and remove them.</p>
</li>
<li><p>Gradients can use as many colors as you want like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">gradient-type(</span><br><span class="line">  color1,</span><br><span class="line">  color2,</span><br><span class="line">  color3</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>Add a <code>linear-gradient</code> to <code>.bb1d</code> with <code>orange</code> as the first color, <code>--building-color1</code> as the second, and <code>--window-color1</code> as the third. Remember to use the gradient on the <code>background</code> property.</p>
</li>
<li><p>It’s a little hidden behind the foreground buildings, but you can see the three color gradient there. Since you are using that now, remove the <code>background-color</code> property from <code>.bb1d</code>.</p>
</li>
<li><p>You can specify where you want a gradient transition to complete by adding it to the color like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">gradient-type(</span><br><span class="line">  color1,</span><br><span class="line">  color2 <span class="number">20%</span>,</span><br><span class="line">  color3</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>Here, it will transition from <code>color1</code> to <code>color2</code> between <code>0%</code> and <code>20%</code> of the element and then transition to <code>color3</code> for the rest. Add <code>80%</code> to the <code>--building-color1</code> color of the <code>.bb1d</code> gradient so you can see it in action.</p>
</li>
<li><p>Remove <code>orange</code> from the <code>.bb1d</code> gradient and change the <code>80%</code> to <code>50%</code>. This will make <code>--building-color1</code> solid for the top half, and then transition to <code>--window-color1</code> for the bottom half.</p>
</li>
<li><p>Nest two new <code>div</code> elements within <code>.bb2</code>, give them the classes of <code>bb2a</code> and <code>bb2b</code>, in that order. These will be two sections for this building.</p>
</li>
<li><p>Give <code>.bb2b</code> a <code>width</code> and <code>height</code> of <code>100%</code> to make it fill the building container. You will add something on the top a little later.</p>
</li>
<li><p>Create a new variable in <code>:root</code> named <code>window-color2</code> with a value of <code>#8cd9b3</code>. This will be used as the secondary color for this building.</p>
</li>
<li><p>Gradient transitions often gradually change from one color to another. You can make the change a solid line like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">linear-gradient(</span><br><span class="line">  <span class="selector-tag">var</span>(<span class="attr">--first-color</span>) <span class="number">0%</span>,</span><br><span class="line">  <span class="selector-tag">var</span>(<span class="attr">--first-color</span>) <span class="number">40%</span>,</span><br><span class="line">  <span class="selector-tag">var</span>(<span class="attr">--second-color</span>) <span class="number">40%</span>,</span><br><span class="line">  <span class="selector-tag">var</span>(<span class="attr">--second-color</span>) <span class="number">80%</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>Add a <code>linear-gradient</code> to <code>.bb2b</code> that uses <code>--building-color2</code> from <code>0%</code> to <code>6%</code> and <code>--window-color2</code> from <code>6%</code> to <code>9%</code>.</p>
</li>
<li><p>You can see the hard color change at the top of the section. Change the gradient type from <code>linear-gradient</code> to <code>repeating-linear-gradient</code> for this section. This will make the four colors of your gradient repeat until it gets to the bottom of the element; giving you some stripes, and saving you from having to add a bunch of elements to create them.</p>
</li>
<li><p>In the next few steps, you are going to use some tricks with CSS borders to turn the <code>.bb2a</code> section into a triangle at the top of the building. First, remove the <code>background-color</code> from <code>.bb2</code> since you don’t need it anymore.</p>
</li>
<li><p>Add these properties to <code>.bb2a</code>:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">5vw</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">5vw</span>;</span><br><span class="line"><span class="attribute">border-top</span>: <span class="number">1vw</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">1vw</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-left</span>: <span class="number">1vw</span> solid <span class="number">#999</span>;</span><br><span class="line"><span class="attribute">border-right</span>: <span class="number">1vw</span> solid <span class="number">#999</span>;</span><br></pre></td></tr></table></figure>

<p>After you add these, you can see how a thick border on an element gives you some angles where two sides meet. You are going to use that bottom border as the top of the building.</p>
</li>
<li><p>Next, remove the <code>width</code> and <code>height</code> from <code>.bb2a</code>, and change the <code>border-left</code> and <code>border-right</code> to use <code>5vw</code> instead of <code>1vw</code>. The element will now have zero size and the borders will come together in the middle.</p>
</li>
<li><p>Next, change the two <code>#999</code> of <code>.bb2a</code> to <code>transparent</code>. This will make the left and right borders invisible.</p>
</li>
<li><p>Remove the <code>margin</code> and <code>border-top</code> properties and values from <code>.bb2a</code> to turn it into a triangle for the top of the building.</p>
</li>
<li><p>Finally, on the <code>border-bottom</code> property of <code>.bb2a</code>, change the <code>1vw</code> to <code>5vh</code> and change the <code>#000</code> color to your <code>--building-color2</code> variable. There you go, now it looks good! At any time throughout this project, you can comment out or remove the <code>border</code> property you added to everything at the beginning to see what the buildings will look like when that gets removed at the end.</p>
</li>
<li><p>On to the next building! Create a new variable called <code>--window-color3</code> in <code>:root</code> and give it a value of <code>#d98cb3</code>. This will be the secondary color for the pink buildings.</p>
</li>
<li><p>So far, all the gradients you created have gone from top to bottom, that’s the default direction. You can specify another direction by adding it before your colors like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">gradient-type(</span><br><span class="line">  <span class="attribute">direction</span>,</span><br><span class="line">  color1,</span><br><span class="line">  color2</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>Fill in <code>.bb3</code> with a <code>repeating-linear-gradient</code>. Use <code>90deg</code> for the direction, your <code>building-color3</code> for the first two colors, and <code>window-color3</code> at <code>15%</code> for the third. When you don’t specify a distance for a color, it will use the values that makes sense. In this case, the first two colors will default to <code>0%</code> and <code>7.5%</code> because it starts at <code>0%</code>, and <code>7.5%</code> is half of the <code>15%</code>.</p>
</li>
<li><p>Remove the <code>background-color</code> property and value from <code>.bb3</code> since you are using the gradient as the background now.</p>
</li>
<li><p>The next building will have three sections. Nest three <code>div</code> elements within <code>.bb4</code>. Give them the classes of <code>bb4a</code>, <code>bb4b</code> and <code>bb4c</code> in that order.</p>
</li>
<li><p>Give the new <code>div</code> elements these <code>width</code> and <code>height</code> values: <code>3%</code> and <code>10%</code> to <code>.bb4a</code>, <code>80%</code> and <code>5%</code> to <code>.bb4b</code>, and <code>100%</code> and <code>85%</code> to <code>.bb4c</code>.</p>
</li>
<li><p>Remove the <code>background-color</code> property and value from <code>.bb4</code>, and add it to the three new sections <code>.bb4a</code>, <code>.bb4b</code>, and <code>.bb4c</code>, so only the sections are filled.</p>
</li>
<li><p>You want <code>.bb4</code> to share the properties of <code>.bb1</code> that center the sections. Instead of duplicating that code, create a new class above the background building comment called <code>building-wrap</code>. Leave it empty for now; this class will be used in a few places to save you some coding.</p>
</li>
<li><p>Move the <code>display</code>, <code>flex-direction</code>, and <code>align-items</code> properties and values from <code>.bb1</code> to the new <code>building-wrap</code> class.</p>
</li>
<li><p>Add the new <code>building-wrap</code> class to the <code>.bb1</code> and <code>.bb4</code> elements. This will apply the centering properties to the buildings that need it.</p>
</li>
<li><p>Create a new variable called <code>--window-color4</code> in <code>:root</code> and give it a value of <code>#8cb3d9</code>. This will be the secondary color for the last background building.</p>
</li>
<li><p>Nest four new <code>div</code> elements within <code>.bb4c</code>, give them all the class of <code>bb4-window</code>. These will be windows for this building.</p>
</li>
<li><p>Give the <code>bb4-window</code> class a <code>width</code> of <code>18%</code>, a <code>height</code> of <code>90%</code>, and add your <code>--window-color4</code> variable as the <code>background-color</code>.</p>
</li>
<li><p>The windows are stacked on top of each other at the left of the section, behind the purple building. Add a new class below <code>.building-wrap</code> called <code>window-wrap</code>. Make <code>.window-wrap</code> a flexbox container, and use the <code>align-items</code> and <code>justify-content</code> properties to center its child elements vertically and evenly space them in their parent, respectively.</p>
</li>
<li><p>Add the new <code>window-wrap</code> class to the <code>.bb4c</code> element.</p>
</li>
<li><p>Looks good! On to the foreground buildings! Turn the <code>.fb1</code> building into three sections by nesting three new <code>div</code> elements within it. Give them the classes of <code>fb1a</code>, <code>fb1b</code> and <code>fb1c</code>, in that order.</p>
</li>
<li><p>Give <code>.fb1b</code> a <code>width</code> of <code>60%</code> and <code>height</code> of <code>10%</code>, and <code>.fb1c</code> a <code>width</code> of <code>100%</code> and <code>height</code> of <code>80%</code>.</p>
</li>
<li><p>Add the <code>building-wrap</code> class to the <code>.fb1</code> element to center the sections.</p>
</li>
<li><p>Move the <code>background-color</code> property and value from <code>.fb1</code> to <code>.fb1b</code>.</p>
</li>
<li><p>Don’t worry about the space at the bottom, everything will get moved down later when you add some height to the element at the top of the building.</p>
<p>Add a <code>repeating-linear-gradient</code> to <code>.fb1c</code> with a <code>90deg</code> angle, your <code>--building-color4</code> from <code>0%</code> to <code>10%</code> and <code>transparent</code> from <code>10%</code> to <code>15%</code>.</p>
</li>
<li><p>You can add multiple gradients to an element by separating them with a comma (<code>,</code>) like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">gradient1(</span><br><span class="line">  colors</span><br><span class="line">),</span><br><span class="line">gradient2(</span><br><span class="line">  colors</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>Add a <code>repeating-linear-gradient</code> to <code>.fb1c</code> below the one that’s there; use your <code>--building-color4</code> from <code>0%</code> to <code>10%</code> and <code>--window-color4</code> from <code>10%</code> and <code>90%</code>. This will fill in behind the gradient you added last.</p>
</li>
<li><p>You’re going to use some more border tricks for the top section. Add a <code>border-bottom</code> with a value of <code>7vh solid var(--building-color4)</code> to <code>.fb1a</code>. This will put a <code>7vh</code> height border on the bottom. But since the element has zero size, it only shows up as a 2px wide line from the 1px border that is on all the elements.</p>
</li>
<li><p>When you increase the size of the left and right borders, the border on the bottom will expand to be the width of the combined left and right border widths. Add <code>2vw solid transparent</code> as the value of the <code>border-left</code> and <code>border-right</code> properties of <code>.fb1a</code>. They will be invisible, but it will make the border on the bottom <code>4vw</code> wide.</p>
</li>
<li><p>On to the next building! Nest two <code>div</code> elements within <code>.fb2</code> and give them classes of <code>fb2a</code> and <code>fb2b</code>, in that order.</p>
</li>
<li><p>Give <code>.fb2a</code> a <code>width</code> of <code>100%</code> and <code>.fb2b</code> a <code>width</code> of <code>100%</code> and <code>height</code> of <code>75%</code>.</p>
</li>
<li><p>Nest three <code>div</code> elements within <code>.fb2b</code> and give them a class of <code>fb2-window</code>. These will be windows for this section of the building.</p>
</li>
<li><p>Add your <code>window-wrap</code> class to <code>.fb2b</code> to position the new window elements.</p>
</li>
<li><p>Give the <code>.fb2-window</code> elements a <code>width</code> of <code>22%</code>, <code>height</code> of <code>100%</code>, and a <code>background-color</code> of your <code>--window-color3</code> variable.</p>
</li>
<li><p>Move the <code>background-color</code> property and value from <code>.fb2</code> to <code>.fb2b</code> to just color the section and not the container.</p>
</li>
<li><p>For <code>.fb2a</code>, add a <code>border-bottom</code> of <code>10vh solid var(--building-color3)</code>, and a <code>border-left</code> and <code>border-right</code> of <code>1vw solid transparent</code>. This time the border trick will create a trapezoid shape.</p>
</li>
<li><p>For the next building, nest four <code>div</code> elements within <code>.fb3</code> with classes of <code>fb3a</code>, <code>fb3b</code>, <code>fb3a</code> again, and <code>fb3b</code> again, in that order. This building will have four sections, and the top two will be almost the same as the bottom two.</p>
</li>
<li><p>Give the <code>.fb3a</code> element a <code>width</code> of <code>80%</code> and <code>height</code> of <code>15%</code>. Then give the <code>.fb3b</code> element a <code>width</code> of <code>100%</code> and <code>height</code> of <code>35%</code>.</p>
</li>
<li><p>Remove the <code>background-color</code> property and value from <code>.fb3</code>, and add them to <code>.fb3a</code> and <code>.fb3b</code>.</p>
</li>
<li><p>Add your <code>building-wrap</code> class to the <code>.fb3</code> element to center the sections.</p>
</li>
<li><p>Nest three new <code>div</code> elements in the first <code>.fb3a</code> element. Give them each a class of <code>fb3-window</code>. These will be windows for this section.</p>
</li>
<li><p>Give the <code>.fb3-window</code> elements a <code>width</code> of <code>25%</code>, a <code>height</code> of <code>80%</code>, and use your <code>--window-color1</code> variable as the <code>background-color</code> value.</p>
</li>
<li><p>Add your <code>window-wrap</code> class to the <code>.fb3a</code> element to center and space the windows.</p>
</li>
<li><p>With CSS variables you can change values without searching everywhere in the stylesheet. Change the <code>--window-color1</code> value to <code>#bb99ff</code>.</p>
</li>
<li><p>Only three more buildings to go. Nest two new <code>div</code> elements within the <code>.fb4</code> element and give them the classes of <code>fb4a</code> and <code>fb4b</code>, in that order. Remember that you sort of flipped the location of <code>.fb4</code> and <code>.fb5</code>, so it’s the rightmost purple building you are working on now.</p>
</li>
<li><p>Give <code>.fb4b</code> a <code>width</code> of <code>100%</code> and <code>height</code> of <code>89%</code>.</p>
</li>
<li><p>Add your <code>--building-color1</code> variable as value of the <code>background-color</code> property of <code>.fb4b</code>. Then, remove the <code>background-color</code> from <code>.fb4</code>.</p>
</li>
<li><p>Nest six <code>div</code> elements within <code>.fb4b</code> and give them all a class of <code>fb4-window</code>.</p>
</li>
<li><p>Give the <code>.fb4-window</code> elements a <code>width</code> of <code>30%</code>, <code>height</code> of <code>10%</code>, and <code>border-radius</code> of <code>50%</code>. These will make some circular windows for this building.</p>
</li>
<li><p>Fill in the windows with your secondary color for this building. Also add a <code>margin</code> of <code>10%</code> to give the windows some space.</p>
</li>
<li><p>The windows are stacked on top of each other on the rightmost purple building. Turn the building into a flexbox parent, and use the <code>flex-wrap</code> property to put the windows side by side, and push them down to a new row when they don’t fit.</p>
</li>
<li><p>This building is going to have another triangle on top. Give the top section a <code>border-top</code> of <code>5vh solid transparent</code>, and a <code>border-left</code> that is <code>8vw</code>, <code>solid</code>, and uses your building color variable as the color.</p>
</li>
<li><p>On to the next building! It’s the green one in the foreground. Give it a <code>repeating-linear-gradient</code> with your building color from <code>0%</code> to <code>5%</code>, and <code>transparent</code> from <code>5%</code> to <code>10%</code>.</p>
</li>
<li><p>Add another <code>repeating-linear-gradient</code> below the one you just added. Give it a <code>90deg</code> direction, use your building color from <code>0%</code> to <code>12%</code> and window color <code>12%</code> to <code>44%</code>. This will make a bunch of rectangle windows.</p>
</li>
<li><p>You don’t need the <code>background-color</code> for this building anymore so you can remove that property.</p>
</li>
<li><p>Finally! You made it to the last building! Add a repeating gradient to it with a <code>90deg</code> direction. Use the building color from <code>0%</code> to <code>10%</code> and <code>transparent</code> from <code>10%</code> to <code>30%</code>.</p>
</li>
<li><p>Add another repeating gradient to this building; make it the same as the one you just added, except don’t add the <code>90deg</code> direction and use your window color instead of the two <code>transparent</code> colors.</p>
</li>
<li><p>You can remove the <code>background-color</code> for this building now, since it isn’t needed.</p>
</li>
<li><p>Okay, the buildings are done. Go back to the <code>*</code> selector and remove the <code>border</code> you applied to everything at the beginning and the buildings will come together.</p>
</li>
<li><p>Add <code>sky</code> as a second class to the <code>.background-buildings</code> element. You are going to make a background for the skyline.</p>
</li>
<li><p>Give the <code>sky</code> class a <code>radial-gradient</code>. Use <code>#ffcf33</code> from <code>0%</code> to <code>20%</code>, <code>#ffff66</code> at <code>21%</code>, and <code>#bbeeff</code> at <code>100%</code>. This will add circular gradient to the background that will be your sun.</p>
</li>
<li><p>At the top of the sky gradient color list, where you would put a direction for the gradient; add <code>circle closest-corner at 15% 15%,</code>. This will move the start of the gradient to <code>15%</code> from the top and left. It will make it end at the <code>closest-corner</code> and it will maintain a <code>circle</code> shape. These are some keywords built into gradients to describe how it behaves.</p>
</li>
<li><p>A media query can be used to change styles based on certain conditions, and they look like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> (condition) &#123;</span><br><span class="line"></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<p>Add an empty media query at the bottom of your stylesheet with a condition of <code>max-width: 1000px</code>. Styles added in here will take effect when the document size is 1000px wide or less.</p>
</li>
<li><p>Copy and paste your whole <code>sky</code> class along with all of its properties and values into the media query. You are going to make another color scheme for the skyline that changes it from day to night.</p>
<p>Note: You are going to need to scroll past the editable region to copy the class.</p>
</li>
<li><p>In the <code>sky</code> class of the media query, change the two <code>#ffcf33</code> color values to <code>#ccc</code>, the <code>#ffff66</code> to <code>#445</code>, and the <code>#bbeeff</code> to <code>#223</code>. Then you can resize your window to see the background change colors.</p>
</li>
<li><p>Add a <code>:root</code> selector to the top of your media query. Then redefine all four of the <code>--building-color</code> variables to use the value <code>#000</code> there.</p>
</li>
<li><p>Lastly, in the <code>:root</code> selector of the media query, redefine all four of the <code>--window-color</code> variables to use <code>#777</code>. When you’re done, resize the window and watch it go from day to night.</p>
<p>Variables are primarily used with colors, and that’s how you used them here. But they can be given any value and used on any property. Your project looks great!</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>City Skyline<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;background-buildings sky&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb1 building-wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb1a bb1-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb1b bb1-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb1c bb1-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb1d&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb2a&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb2b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb4 building-wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb4a&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb4b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb4c window-wrap&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;foreground-buildings&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb1 building-wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb1a&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb1b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb1c&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb2a&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb2b window-wrap&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb2-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb2-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb2-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb3 building-wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb3a window-wrap&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb3-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb3-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb3-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb3b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb3a&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb3b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4a&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4b&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb4-window&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fb6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--building-color1</span>: <span class="number">#aa80ff</span>;</span><br><span class="line">  <span class="attr">--building-color2</span>: <span class="number">#66cc99</span>;</span><br><span class="line">  <span class="attr">--building-color3</span>: <span class="number">#cc6699</span>;</span><br><span class="line">  <span class="attr">--building-color4</span>: <span class="number">#538cc6</span>;</span><br><span class="line">  <span class="attr">--window-color1</span>: <span class="number">#bb99ff</span>;</span><br><span class="line">  <span class="attr">--window-color2</span>: <span class="number">#8cd9b3</span>;</span><br><span class="line">  <span class="attr">--window-color3</span>: <span class="number">#d98cb3</span>;</span><br><span class="line">  <span class="attr">--window-color4</span>: <span class="number">#8cb3d9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.background-buildings</span>, <span class="selector-class">.foreground-buildings</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-end;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.building-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.window-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sky</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(</span><br><span class="line">      closest-corner circle at <span class="number">15%</span> <span class="number">15%</span>,</span><br><span class="line">      <span class="number">#ffcf33</span>,</span><br><span class="line">      <span class="number">#ffcf33</span> <span class="number">20%</span>,</span><br><span class="line">      <span class="number">#ffff66</span> <span class="number">21%</span>,</span><br><span class="line">      <span class="number">#bbeeff</span> <span class="number">100%</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* BACKGROUND BUILDINGS - &quot;bb&quot; stands for &quot;background building&quot; */</span></span><br><span class="line"><span class="selector-class">.bb1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb1a</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.bb1b</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.bb1c</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb1d</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">      <span class="built_in">var</span>(--building-color1) <span class="number">50%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color1)</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb1-window</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">      <span class="built_in">var</span>(--building-color1),</span><br><span class="line">      <span class="built_in">var</span>(--window-color1)</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb2a</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">5vh</span> solid <span class="built_in">var</span>(--building-color2);</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">5vw</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">5vw</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb2b</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">      <span class="built_in">var</span>(--building-color2),</span><br><span class="line">      <span class="built_in">var</span>(--building-color2) <span class="number">6%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color2) <span class="number">6%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color2) <span class="number">9%</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">55%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">      <span class="number">90deg</span>,</span><br><span class="line">      <span class="built_in">var</span>(--building-color3),</span><br><span class="line">      <span class="built_in">var</span>(--building-color3),</span><br><span class="line">      <span class="built_in">var</span>(--window-color3) <span class="number">15%</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb4</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">11%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">58%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb4a</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">3%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--building-color4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb4b</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">5%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--building-color4);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.bb4c</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--building-color4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bb4-window</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">18%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--window-color4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* FOREGROUND BUILDINGS - &quot;fb&quot; stands for &quot;foreground building&quot; */</span></span><br><span class="line"><span class="selector-class">.fb1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb1a</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">7vh</span> solid <span class="built_in">var</span>(--building-color4);</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">2vw</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">2vw</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb1b</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--building-color4);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.fb1c</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">      <span class="number">90deg</span>,</span><br><span class="line">      <span class="built_in">var</span>(--building-color4),</span><br><span class="line">      <span class="built_in">var</span>(--building-color4) <span class="number">10%</span>,</span><br><span class="line">      transparent <span class="number">10%</span>,</span><br><span class="line">      transparent <span class="number">15%</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">      <span class="built_in">var</span>(--building-color4),</span><br><span class="line">      <span class="built_in">var</span>(--building-color4) <span class="number">10%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color4) <span class="number">10%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color4) <span class="number">90%</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb2a</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">10vh</span> solid <span class="built_in">var</span>(--building-color3);</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1vw</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1vw</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb2b</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--building-color3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb2-window</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">22%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--window-color3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">35%</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.fb3a</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">15%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--building-color1);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.fb3b</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">35%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--building-color1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb3-window</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--window-color1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb4</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb4a</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">5vh</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">8vw</span> solid <span class="built_in">var</span>(--building-color1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb4b</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">89%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--building-color1);</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb4-window</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--window-color1);</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb5</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">33%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">      <span class="built_in">var</span>(--building-color2),</span><br><span class="line">      <span class="built_in">var</span>(--building-color2) <span class="number">5%</span>,</span><br><span class="line">      transparent <span class="number">5%</span>,</span><br><span class="line">      transparent <span class="number">10%</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">      <span class="number">90deg</span>,</span><br><span class="line">      <span class="built_in">var</span>(--building-color2),</span><br><span class="line">      <span class="built_in">var</span>(--building-color2) <span class="number">12%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color2) <span class="number">12%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color2) <span class="number">44%</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fb6</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">9%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">38%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">      <span class="number">90deg</span>,</span><br><span class="line">      <span class="built_in">var</span>(--building-color3),</span><br><span class="line">      <span class="built_in">var</span>(--building-color3) <span class="number">10%</span>,</span><br><span class="line">      transparent <span class="number">10%</span>,</span><br><span class="line">      transparent <span class="number">30%</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">      <span class="built_in">var</span>(--building-color3),</span><br><span class="line">      <span class="built_in">var</span>(--building-color3) <span class="number">10%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color3) <span class="number">10%</span>,</span><br><span class="line">      <span class="built_in">var</span>(--window-color3) <span class="number">30%</span></span><br><span class="line">    );</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">1000px</span>) &#123; </span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--building-color1</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attr">--building-color2</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attr">--building-color3</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attr">--building-color4</span>: <span class="number">#000</span>;</span><br><span class="line">      <span class="attr">--window-color1</span>: <span class="number">#777</span>;</span><br><span class="line">  <span class="attr">--window-color2</span>: <span class="number">#777</span>;</span><br><span class="line">  <span class="attr">--window-color3</span>: <span class="number">#777</span>;</span><br><span class="line">  <span class="attr">--window-color4</span>: <span class="number">#777</span>;</span><br><span class="line">  &#125; </span><br><span class="line"> <span class="selector-class">.sky</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(</span><br><span class="line">        closest-corner circle at <span class="number">15%</span> <span class="number">15%</span>,</span><br><span class="line">        <span class="number">#ccc</span>,</span><br><span class="line">        <span class="number">#ccc</span> <span class="number">20%</span>,</span><br><span class="line">        <span class="number">#445</span> <span class="number">21%</span>,</span><br><span class="line">        <span class="number">#223</span> <span class="number">100%</span></span><br><span class="line">      );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(十四)</title>
    <url>/responsive-web-dedign-%E5%8D%81%E5%9B%9B/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-CSS-Animation-by-Building-a-Ferris-Wheel"><a href="#Learn-CSS-Animation-by-Building-a-Ferris-Wheel" class="headerlink" title="Learn CSS Animation by Building a Ferris Wheel"></a>Learn CSS Animation by Building a Ferris Wheel</h4><span id="more"></span>



<ol>
<li><p>Begin with the standard boilerplate. Add your <code>DOCTYPE</code> declaration, your <code>html</code> element with the language set to English, your <code>head</code> and <code>body</code> elements.</p>
<p>Add your <code>meta</code> element for the correct <code>charset</code>, your <code>title</code> element, and a <code>link</code> element for the <code>./styles.css</code> file.</p>
<p>Set the <code>title</code> to <code>Ferris Wheel</code>.</p>
</li>
<li><p>Add a <code>div</code> within your <code>body</code> element and give it a <code>class</code> of <code>wheel</code>.</p>
<p>Inside your new <code>div</code>, add six <code>span</code> elements with a <code>class</code> set to <code>line</code>, and six <code>div</code> elements with a <code>class</code> set to <code>cabin</code>.</p>
</li>
<li><p>Create a selector for your <code>.wheel</code> element. Start by setting the <code>border</code> to <code>2px solid black</code>, the <code>border-radius</code> to <code>50%</code>, and the <code>margin-left</code> to <code>50px</code>.</p>
</li>
<li><p>Set the <code>position</code> property of the <code>.wheel</code> selector to <code>absolute</code>. Set the <code>height</code> and <code>width</code> both to <code>55vw</code>.</p>
</li>
<li><p>Give your <code>.wheel</code> selector a <code>max-height</code> and <code>max-width</code> property both set to <code>500px</code>.</p>
</li>
<li><p>Create a selector for your <code>.line</code> elements. Start by setting the <code>background-color</code> to <code>black</code>, the <code>width</code> to <code>50%</code>, and the <code>height</code> to <code>2px</code>.</p>
</li>
<li><p>Set the <code>.line</code> selector’s <code>position</code> property to <code>absolute</code>, the <code>left</code> property to <code>50%</code>, and the <code>top</code> property to <code>50%</code>.</p>
</li>
<li><p>The <code>transform-origin</code> property is used to set the point around which a CSS transformation is applied. For example, when performing a <code>rotate</code> (which you will do later in this project), the <code>transform-origin</code> determines around which point the element is rotated.</p>
<p>Give the <code>.line</code> selector a <code>transform-origin</code> property of <code>0% 0%</code>. This will offset the origin point by <code>0%</code> from the left and <code>0%</code> from the top, setting it to the top left corner of the element.</p>
</li>
<li><p>Create a selector to target your second <code>.line</code> element. Set the <code>transform</code> property to <code>rotate(60deg)</code>.</p>
<p>Remember that the <code>transform</code> property allows you to manipulate the shape of an element. In this case, using the <code>rotate(60deg)</code> value will rotate the element around its <code>transform-origin</code> point by 60 degrees clockwise.</p>
</li>
<li><p>Using the same pattern, create a separate selector for the third <code>.line</code>, the fourth <code>.line</code>, the fifth <code>.line</code>, and the sixth <code>.line</code>.</p>
<p>Set the <code>transform</code> property for the third <code>.line</code> to <code>rotate(120deg)</code>, the fourth to <code>rotate(180deg)</code>, the fifth to <code>rotate(240deg)</code>, and the sixth to <code>rotate(300deg)</code>.</p>
</li>
<li><p>Create a <code>.cabin</code> selector. Set the <code>background-color</code> to <code>red</code>, the <code>width</code> to <code>20%</code>, and the <code>height</code> to <code>20%</code>.</p>
</li>
<li><p>Give the <code>.cabin</code> a <code>position</code> of <code>absolute</code>, and a <code>border</code> of <code>2px solid</code>.</p>
</li>
<li><p>Set the <code>.cabin</code> to have a <code>transform-origin</code> property of <code>50% 0%</code>. This will set the origin point to be offset <code>50%</code> from the left and <code>0%</code> from the top, placing it in the middle of the top edge of the element.</p>
</li>
<li><p>Time to position the cabins around the wheel. Select the first <code>.cabin</code> element. Set the <code>right</code> property to <code>-8.5%</code> and the <code>top</code> property to <code>50%</code>.</p>
</li>
<li><p>Continuing the pattern, select the following <code>.cabin</code> elements and apply the specific rules to them:</p>
<ul>
<li>The second <code>.cabin</code> should have the <code>right</code> property set to <code>17%</code> and the <code>top</code> property set to <code>93.5%</code>.</li>
<li>The third <code>.cabin</code> should have the <code>right</code> property set to <code>67%</code> and the <code>top</code> property set to <code>93.5%</code>.</li>
<li>The fourth <code>.cabin</code> should have the <code>left</code> property set to <code>-8.5%</code> and the <code>top</code> property set to <code>50%</code>.</li>
<li>The fifth <code>.cabin</code> should have the <code>left</code> property set to <code>17%</code> and the <code>top</code> property set to <code>7%</code>.</li>
<li>The sixth <code>.cabin</code> should have the <code>right</code> property set to <code>17%</code> and the <code>top</code> property set to <code>7%</code>.</li>
</ul>
</li>
<li><p>The <code>@keyframes</code> at-rule is used to define the flow of a CSS animation. Within the <code>@keyframes</code> rule, you can create selectors for specific points in the animation sequence, such as <code>0%</code> or <code>25%</code>, or use <code>from</code> and <code>to</code> to define the start and end of the sequence.</p>
<p><code>@keyframes</code> rules require a name to be assigned to them, which you use in other rules to reference. For example, the <code>@keyframes freeCodeCamp &#123; &#125;</code> rule would be named <code>freeCodeCamp</code>.</p>
<p>Time to start animating. Create a <code>@keyframes</code> rule named <code>wheel</code>.</p>
</li>
<li><p>You now need to define how your animation should start. To do this, create a <code>0%</code> rule within your <code>@keyframes wheel</code> rule. The properties you set in this nested selector will apply at the beginning of your animation.</p>
<p>As an example, this would be a <code>12%</code> rule:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> freecodecamp &#123;</span><br><span class="line">  <span class="number">12%</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Give the <code>0%</code> rule a <code>transform</code> property set to <code>rotate(0deg)</code>. This will start the animation with no rotation.</p>
</li>
<li><p>Now give the <code>@keyframes wheel</code> rule a <code>100%</code> selector. Within that, set the <code>transform</code> to <code>rotate(360deg)</code>. By doing this, your animation will now complete a full rotation.</p>
</li>
<li><p>The <code>animation-name</code> property is used to link a <code>@keyframes</code> rule to a CSS selector. The value of this property should match the name of the <code>@keyframes</code> rule. Give your <code>.wheel</code> selector an <code>animation-name</code> property set to <code>wheel</code>.</p>
<p>The <code>animation-duration</code> property is used to set how long the animation should sequence to complete. The time should be specified in either seconds (<code>s</code>) or milliseconds (<code>ms</code>). Set your <code>.wheel</code> selector to have an <code>animation-duration</code> property of <code>10s</code>.</p>
</li>
<li><p>The <code>animation-iteration-count</code> property sets how many times your animation should repeat. This can be set to a number, or to <code>infinite</code> to indefinitely repeat the animation. Your Ferris wheel should never stop, so set the <code>.wheel</code> selector to have an <code>animation-iteration-count</code> of <code>infinite</code>.</p>
<p>The <code>animation-timing-function</code> property sets how the animation should progress over time. There are a few different values for this property, but you want the Ferris wheel animation to run at the same rate from start to finish. Set the <code>animation-timing-function</code> to <code>linear</code> in your <code>.wheel</code> selector.</p>
</li>
<li><p>Create another <code>@keyframes</code> rule with the name <code>cabins</code>. Use the same properties as your <code>@keyframes wheel</code>, copying both the <code>0%</code> and <code>100%</code> rules, but set the <code>transform</code> property of the <code>100%</code> selector to <code>rotate(-360deg)</code>.</p>
</li>
<li><p>With your <code>.wheel</code> selector, you created four different properties to control the animation. For your <code>.cabin</code> selector, you can use the <code>animation</code> property to set these all at once.</p>
<p>Set the <code>animation</code> property of the <code>.cabin</code> rule to <code>cabins 10s linear infinite</code>. This will set the <code>animation-name</code>, <code>animation-duration</code>, <code>animation-timing-function</code>, and <code>animation-iteration-count</code> properties in that order.</p>
</li>
<li><p>To make your cabin animation seem more like a natural swinging motion, you can use the <code>ease-in-out</code> timing function. This setting will tell the animation to start and end at a slower pace, but move more quickly in the middle of the cycle.</p>
<p>Replace <code>linear</code> to <code>ease-in-out</code> in the <code>.cabin</code> selector.</p>
</li>
<li><p>You can use <code>@keyframes</code> rules to control more than just the transformation of an element. In the <code>0%</code> selector of your <code>@keyframes cabins</code>, set the <code>background-color</code> to <code>yellow</code>.</p>
</li>
<li><p>Between the <code>0%</code> and <code>100%</code> selectors, add a <code>50%</code> selector. This will apply in the middle of the animation cycle. Set the <code>background-color</code> to <code>purple</code>.</p>
</li>
<li><p>Because the animation is on an infinite loop and the start and end colors are not the same, the transition appears jerky when it switches back to yellow from red.</p>
<p>To start fixing this, remove the <code>background-color</code> from your <code>0%</code> selector.</p>
</li>
<li><p>Create a new <code>25%</code> selector between your <code>0%</code> and <code>50%</code> selectors. Give this new selector the <code>background-color</code> property set to <code>yellow</code>.</p>
</li>
<li><p>Finally, create a new <code>75%</code> selector between your <code>50%</code> and <code>100%</code> selectors. Give this new selector a <code>background-color</code> property set to <code>yellow</code>.</p>
<p>With that, your animation is much smoother and your Ferris wheel is complete.</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Ferris Wheel<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wheel&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cabin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cabin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cabin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cabin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cabin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cabin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.wheel</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">55vw</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">55vw</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">animation-name</span>: wheel;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">10s</span>;</span><br><span class="line">  <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">  <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0%</span> <span class="number">0%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">60deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">120deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">5</span>) &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">240deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">6</span>) &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">300deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cabin</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">50%</span> <span class="number">0%</span>;</span><br><span class="line">  <span class="attribute">animation</span>: cabins <span class="number">10s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cabin</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">8.5%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cabin</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">17%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">93.5%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cabin</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">67%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">93.5%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cabin</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">8.5%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cabin</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">5</span>) &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">17%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">7%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cabin</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">6</span>) &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">17%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">7%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> wheel &#123;</span><br><span class="line">   <span class="number">0%</span> &#123;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="number">100%</span> &#123;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">@keyframes</span> cabins &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">25%</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: purple;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>animation</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(十三)</title>
    <url>/responsive-web-dedign-%E5%8D%81%E4%B8%89/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-CSS-Grid-by-Building-a-Magazine"><a href="#Learn-CSS-Grid-by-Building-a-Magazine" class="headerlink" title="Learn CSS Grid by Building a Magazine"></a>Learn CSS Grid by Building a Magazine</h4><span id="more"></span>

<ol>
<li><p>Begin with your standard HTML boilerplate. Add a <code>DOCTYPE</code> declaration, an <code>html</code> element specifying this page is in English, a <code>head</code> element, and a <code>body</code> element.</p>
<p>Add a <code>&lt;meta&gt;</code> tag with the appropriate <code>charset</code> and a <code>&lt;meta&gt;</code> tag for mobile responsiveness within the <code>head</code> element.</p>
</li>
<li><p>Add a <code>title</code> element with the text <code>Magazine</code>, a <code>link</code> element for the <code>https://fonts.googleapis.com/css?family=Anton%7CBaskervville%7CRaleway&amp;display=swap</code> font stylesheet, a <code>link</code> for the <code>https://use.fontawesome.com/releases/v5.8.2/css/all.css</code> FontAwesome stylesheet, and a <code>link</code> for your <code>./styles.css</code> stylesheet.</p>
<p>Your font stylesheet will load three separate fonts: <code>Anton</code>, <code>Baskervville</code>, and <code>Raleway</code>.</p>
</li>
<li><p>Within your <code>body</code>, create a <code>main</code> element. Then in that element, create a <code>section</code> with a <code>class</code> set to <code>heading</code>.</p>
</li>
<li><p>Within your <code>.heading</code> element, create a <code>header</code> element with the <code>class</code> set to <code>hero</code>.</p>
<p>In that element, create an <code>img</code> element with the <code>src</code> set to <code>https://cdn.freecodecamp.org/platform/universal/fcc_meta_1920X1080-indigo.png</code>, the <code>alt</code> set to <code>freecodecamp logo</code>, and the <code>class</code> set to <code>hero-img</code>.</p>
<p>The <code>loading</code> attribute on an <code>img</code> element can be set to <code>lazy</code> to tell the browser not to fetch the image resource until it is needed (as in, when the user scrolls the image into view). As an additional benefit, lazy loaded elements will not load until the non-lazy elements are loaded - this means users with slow internet connections can view the content of your page without having to wait for the images to load.</p>
<p>Give your new <code>img</code> element a <code>loading</code> attribute set to <code>lazy</code>.</p>
</li>
<li><p>After your <code>img</code> element, add an <code>h1</code> element with the <code>class</code> set to <code>hero-title</code> and the text set to <code>OUR NEW CURRICULUM</code>, followed by a <code>p</code> element with the <code>class</code> set to <code>hero-subtitle</code> and the text set to <code>Our efforts to restructure our curriculum with a more project-based focus</code>.</p>
</li>
<li><p>Your image currently takes up a lot of space. To better see what you are working on, add a <code>width</code> attribute to the <code>img</code> element, with a value of <code>400</code>.</p>
<p>You will remove this later on when you have worked on the CSS.</p>
</li>
<li><p>After your <code>header</code> element, create a <code>div</code> with the <code>class</code> set to <code>author</code>.</p>
<p>Within that <code>div</code>, create a <code>p</code> element with the <code>class</code> set to <code>author-name</code> and give it the text <code>By freeCodeCamp</code>. Wrap the <code>freeCodeCamp</code> portion in an <code>a</code> element with the <code>href</code> set to <code>https://freecodecamp.org</code>, and the <code>target</code> set to <code>_blank</code>.</p>
<p>Below that, add a second <code>p</code> element with the class <code>publish-date</code> and the text <code>March 7, 2019</code>.</p>
</li>
<li><p>The <code>Referer</code> HTTP header contains information about the address or URL of a page that a user might be visiting from. This information can be used in analytics to track how many users from your page visit freecodecamp.org, for example. Setting the <code>rel</code> attribute to <code>noreferrer</code> omits this information from the HTTP request. Give your <code>a</code> element a <code>rel</code> attribute set to <code>noreferrer</code>.</p>
</li>
<li><p>Below your <code>.author</code> element, create a new <code>div</code> element with the class <code>social-icons</code>.</p>
<p>Add five <code>a</code> elements within that new <code>div</code>, and give them the following <code>href</code> attributes.</p>
<ul>
<li>The first <code>a</code> element should have an <code>href</code> set to <code>https://www.facebook.com/freecodecamp</code>.</li>
<li>The second <code>a</code> element should have an <code>href</code> set to <code>https://twitter.com/freecodecamp</code>.</li>
<li>The third <code>a</code> element should have an <code>href</code> set to <code>https://instagram.com/freecodecamp</code>.</li>
<li>The fourth <code>a</code> element should have an <code>href</code> set to <code>https://www.linkedin.com/school/free-code-camp</code>.</li>
<li>The fifth <code>a</code> element should have an <code>href</code> set to <code>https://www.youtube.com/freecodecamp</code>.</li>
</ul>
</li>
<li><p>Within each of your new <code>a</code> elements, add an <code>i</code> element and give them the following classes:</p>
<ul>
<li>Your first <code>i</code> element should have the class <code>fab fa-facebook-f</code></li>
<li>Your second <code>i</code> element should have the class <code>fab fa-twitter</code></li>
<li>Your third <code>i</code> element should have the class <code>fab fa-instagram</code></li>
<li>Your fourth <code>i</code> element should have the class <code>fab fa-linkedin-in</code></li>
<li>Your fifth <code>i</code> element should have the class <code>fab fa-youtube</code></li>
</ul>
</li>
<li><p>Below your <code>.heading</code> element, create a new <code>section</code> element with the <code>class</code> set to <code>text</code>. Within that, create a <code>p</code> element with the <code>class</code> set to <code>first-paragraph</code> and the following text:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Soon the freeCodeCamp curriculum will be 100% project-driven learning. Instead of a series of coding challenges, you&#x27;ll learn through building projects - step by step. Before we get into the details, let me emphasize: we are not changing the certifications. All 6 certifications will still have the same 5 required projects. We are only changing the optional coding challenges.</span><br></pre></td></tr></table></figure></li>
<li><p>Create another <code>p</code> element below your <code>.first-paragraph</code> element, and give it the following text:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation! A vision! A picture in my head! A picture of this! This is what makes time travel possible: the flux capacitor!</span><br></pre></td></tr></table></figure></li>
<li><p>Add a third <code>p</code> element at the end of your <code>.text</code> element, and give it the following text:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">It wasn&#x27;t as dramatic as Doc&#x27;s revelation in Back to the Future. It just occurred to me while I was going for a run. The revelation: the entire curriculum should be a series of projects. Instead of individual coding challenges, we&#x27;ll just have projects, each with their own seamless series of tests. Each test gives you just enough information to figure out how to get it to pass. (And you can view hints if that isn&#x27;t enough.)</span><br></pre></td></tr></table></figure></li>
<li><p>After the three <code>p</code> elements within your <code>.text</code> element, create a <code>blockquote</code> element. Within that, add an <code>hr</code> element, a <code>p</code> element with the <code>class</code> set to <code>quote</code>, and a second <code>hr</code> element.</p>
<p>Give the <code>.quote</code> element the text <code>The entire curriculum should be a series of projects</code>.</p>
</li>
<li><p>Below your <code>blockquote</code> element, add another <code>p</code> element with the following text:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">No more walls of explanatory text. No more walls of tests. Just one test at a time, as you build up a working project. Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals. There is no transition between lessons and projects, because the lessons themselves are baked into projects. And there&#x27;s plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition.</span><br></pre></td></tr></table></figure></li>
<li><p>Create a fifth <code>p</code> element at the end of your <code>.text</code> element, and give it the following text:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text. Each project will involve dozens of tests like this. People will be coding the entire time, rather than switching back and forth from &quot;reading mode&quot; to &quot;coding mode&quot;.</span><br></pre></td></tr></table></figure></li>
<li><p>Create one final <code>p</code> element at the end of your <code>.text</code> element and give it the following text:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Instead of a series of coding challenges, people will be in their code</span><br><span class="line">editor passing one test after another, quickly building up a project.</span><br><span class="line">People will get into a real flow state, similar to what they</span><br><span class="line">experience when they build the required projects at the end of each</span><br><span class="line">certification. They&#x27;ll get that sense of forward progress right from</span><br><span class="line">the beginning. And freeCodeCamp will be a much smoother experience.</span><br></pre></td></tr></table></figure></li>
<li><p>Below your <code>.text</code> element, create a new <code>section</code> element and give it a <code>class</code> of <code>text text-with-images</code>. Within that, create an <code>article</code> element with a <code>class</code> set to <code>brief-history</code>, and an <code>aside</code> element with the <code>class</code> set to <code>image-wrapper</code>.</p>
</li>
<li><p>Within your <code>article</code> element, create an <code>h3</code> element with the <code>class</code> set to <code>list-title</code> and the text of <code>A Brief History</code>. Below that, create a <code>p</code> element with the text <code>Of the Curriculum</code>. Then create a <code>ul</code> element with the class <code>lists</code>.</p>
</li>
<li><p>Within your <code>ul</code> element, create six <code>li</code> elements. Add an <code>h4</code> element with a <code>class</code> set to <code>list-subtitle</code> and a <code>p</code> element to each of your <code>li</code> elements.</p>
<p>Then give the <code>h4</code> and <code>p</code> elements the following text content, in order, with each <code>h4</code> using what’s on the left side of the colon, and each <code>p</code> using what’s on the right:</p>
<ul>
<li><code>V1 - 2014</code>: <code>We launched freeCodeCamp with a simple list of 15 resources, including Harvard&#39;s CS50 and Stanford&#39;s Database Class.</code></li>
<li><code>V2 - 2015</code>: <code>We added interactive algorithm challenges.</code></li>
<li><code>V3 - 2015</code>: <code>We added our own HTML+CSS challenges (before we&#39;d been relying on General Assembly&#39;s Dash course for these).</code></li>
<li><code>V4 - 2016</code>: <code>We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization. They each had 10 required projects, but only the Front End section had its own challenges. For the other certs, we were still using external resources like Node School.</code></li>
<li><code>V5 - 2017</code>: <code>We added the back end and data visualization challenges.</code></li>
<li><code>V6 - 2018</code>: <code>We launched 6 new certifications to replace our old ones. This was the biggest curriculum improvement to date.</code></li>
</ul>
</li>
<li><p>Within your <code>aside</code> element, create two <code>img</code> elements, a <code>blockquote</code> element, and a third <code>img</code> element. Give the <code>blockquote</code> element a <code>class</code> set to <code>image-quote</code>.</p>
</li>
<li><p>Within the <code>.image-wrapper</code> element, give your first <code>img</code> element a <code>src</code> of <code>https://cdn.freecodecamp.org/testable-projects-fcc/images/random-quote-machine.png</code>, an <code>alt</code> of <code>image of the quote machine project</code>, a <code>class</code> of <code>image-1</code>, a <code>loading</code> attribute set to <code>lazy</code>, a <code>width</code> attribute of <code>600</code>, and a <code>height</code> attribute of <code>400</code>.</p>
</li>
<li><p>Within your <code>.image-wrapper</code> element, give the second <code>img</code> element a <code>src</code> of <code>https://cdn.freecodecamp.org/testable-projects-fcc/images/calc.png</code>, an <code>alt</code> of <code>image of a calculator project</code>, a <code>loading</code> attribute set to <code>lazy</code>, a <code>class</code> set to <code>image-2</code>, a <code>width</code> attribute set to <code>400</code>, and a <code>height</code> attribute set to <code>400</code>.</p>
</li>
<li><p>Within your <code>.image-wrapper</code> element, give your third <code>img</code> element a <code>src</code> of <code>https://cdn.freecodecamp.org/testable-projects-fcc/images/survey-form-background.jpeg</code>, an <code>alt</code> of <code>four people working on code</code>, a <code>loading</code> attribute of <code>lazy</code>, a <code>class</code> set to <code>image-3</code>, a <code>width</code> attribute set to <code>600</code>, and a <code>height</code> attribute set to <code>400</code>.</p>
</li>
<li><p>Within your <code>.image-quote</code> element, nest an <code>hr</code> element, a <code>p</code> element and a second <code>hr</code> element. Give the <code>p</code> element a <code>class</code> set to <code>quote</code> and the text <code>The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals.</code></p>
</li>
<li><p>To start your CSS, normalize the CSS rules by targeting all elements with <code>*</code>, including the <code>::before</code> and <code>::after</code> pseudo-selectors.</p>
<p>Set the <code>padding</code> and <code>margin</code> properties both to <code>0</code> and set the <code>box-sizing</code> property to <code>border-box</code>.</p>
</li>
<li><p>Create an <code>html</code> selector and give it a <code>font-size</code> property set to <code>62.5%</code>. This will set the default font size for your web page to 10px (the browser default is 16px).</p>
<p>This will make it easier for you to work with <code>rem</code> units later, as <code>2rem</code> would be 20px.</p>
</li>
<li><p>Create a <code>body</code> selector. Set the <code>font-family</code> property to <code>Baskervville</code>, with a fallback of <code>serif</code>. Set the <code>color</code> property to <code>linen</code> and the <code>background-color</code> property to <code>rgb(20, 30, 40)</code>.</p>
</li>
<li><p>Create an <code>h1</code> selector, and set the <code>font-family</code> property to <code>Anton</code> with the fallback of <code>sans-serif</code>.</p>
</li>
<li><p>Create an <code>h2, h3, h4, h5, h6</code> selector. Give it a <code>font-family</code> property set to <code>Raleway</code> with a fallback of <code>sans-serif</code>.</p>
</li>
<li><p>Create an <code>a</code> selector, and give it a <code>text-decoration</code> property set to <code>none</code> and a <code>color</code> property set to <code>linen</code>.</p>
</li>
<li><p>Now you are ready to start putting together the grid layout. CSS Grid offers a two-dimensional grid-based layout, allowing you to center items horizontally and vertically while still retaining control to do things like overlap elements.</p>
<p>Begin by creating a <code>main</code> selector and giving it a <code>display</code> property set to <code>grid</code>.</p>
</li>
<li><p>Now you can style the layout of your grid. CSS Grid is similar to Flexbox in that it has a special property for both the parent and child elements.</p>
<p>In this case, your parent element is the <code>main</code> element. Set the content to have a three-column layout by adding a <code>grid-template-columns</code> property with a value of <code>1fr 94rem 1fr</code>. This will create three columns where the middle column is <code>94rem</code> wide, and the first and last columns are both 1 fraction of the remaining space in the grid container.</p>
</li>
<li><p>Use the <code>minmax</code> function to make your columns responsive on any device. The <code>minmax</code> function takes two arguments, the first being the minimum value and the second being the maximum. These values could be a length, percentage, <code>fr</code>, or even a keyword like <code>max-content</code>.</p>
<p>Wrap each of your already defined values of the <code>grid-template-columns</code> property in a <code>minmax</code> function, using each value as the second argument. The first argument should be <code>2rem</code>, <code>min-content</code>, and <code>2rem</code> respectively.</p>
</li>
<li><p>To add space between rows in the grid layout, you can use the <code>row-gap</code> property. Give the <code>main</code> selector a <code>row-gap</code> property of <code>3rem</code>.</p>
</li>
<li><p>Your magazine will have three primary sections. You already set the overall layout in the <code>main</code> rule, but you can adjust the placement in the child rules.</p>
<p>One option is the <code>grid-column</code> property, which is shorthand for <code>grid-column-start</code> and <code>grid-column-end</code>. The <code>grid-column</code> property tells the grid item which grid line to start and end at.</p>
<p>Create a <code>.heading</code> rule and set the <code>grid-column</code> property to <code>2 / 3</code>. This will tell the <code>.heading</code> element to start at grid line 2 and end at grid line 3.</p>
</li>
<li><p>Create a <code>.text</code> selector and give it a <code>grid-column</code> property set to <code>2 / 3</code>.</p>
</li>
<li><p>For additional control over the layout of your content, you can have a CSS Grid within a CSS Grid.</p>
<p>Set the <code>display</code> property of your <code>.heading</code> selector to <code>grid</code>.</p>
</li>
<li><p>Now you can style the content of the <code>.heading</code> element with CSS Grid.</p>
<p>The CSS <code>repeat()</code> function is used to repeat a value, rather than writing it out manually, and is helpful for grid layouts. For example, setting the <code>grid-template-columns</code> property to <code>repeat(20, 200px)</code> would create 20 columns each <code>200px</code> wide.</p>
<p>Give your <code>.heading</code> element a <code>grid-template-columns</code> property set to <code>repeat(2, 1fr)</code> to create two columns of equal width.</p>
</li>
<li><p>Give your <code>.heading</code> selector a <code>row-gap</code> property set to <code>1.5rem</code>.</p>
</li>
<li><p>Remember that the <code>grid-column</code> property determines which columns an element starts and ends at. There may be times where you are unsure of how many columns your grid will have, but you want an element to stop at the last column. To do this, you can use <code>-1</code> for the end column.</p>
<p>Create a <code>.hero</code> selector and give it a <code>grid-column</code> property set to <code>1 / -1</code>. This will tell the element to span the full width of the grid.</p>
</li>
<li><p>Give the <code>.hero</code> selector a <code>position</code> property set to <code>relative</code>.</p>
</li>
<li><p>You should remove the temporary <code>width</code> attribute before writing the CSS for your <code>.hero-img</code>.</p>
</li>
<li><p>Create an <code>img</code> selector and give it a <code>width</code> property set to <code>100%</code>, and an <code>object-fit</code> property set to <code>cover</code>.</p>
<p>The <code>object-fit</code> property tells the browser how to position the element within its container. In this case, <code>cover</code> will set the image to fill the container, cropping as needed to avoid changing the aspect ratio.</p>
</li>
<li><p>Create a <code>.hero-title</code> selector and give it a <code>text-align</code> property set to <code>center</code>, a <code>color</code> property set to <code>orangered</code> and a <code>font-size</code> property set to <code>8rem</code>.</p>
</li>
<li><p>The subtitle also needs to be styled. Create a <code>.hero-subtitle</code> selector and give it a <code>font-size</code> property set to <code>2.4rem</code>, a <code>color</code> property set to <code>orangered</code>, and a <code>text-align</code> property set to <code>center</code>.</p>
</li>
<li><p>Create an <code>.author</code> selector and give it a <code>font-size</code> property set to <code>2rem</code> and a <code>font-family</code> property set to <code>Raleway</code> with a fallback of <code>sans-serif</code>.</p>
</li>
<li><p>Create a <code>.author-name a:hover</code> selector and give it a <code>background-color</code> property set to <code>#306203</code>.</p>
<p>This will create a hover effect only for the <code>a</code> element within the <code>.author-name</code>, showing the original freeCodeCamp green in the background.</p>
</li>
<li><p>Create a <code>.publish-date</code> selector and give it a <code>color</code> property of <code>rgba(255, 255, 255, 0.5)</code>.</p>
</li>
<li><p>Create a <code>.social-icons</code> selector. Give it a <code>display</code> property set to <code>grid</code>, and a <code>font-size</code> property set to <code>3rem</code>.</p>
</li>
<li><p>The default settings for CSS Grid will create additional rows as needed, unlike Flexbox. Give the <code>.social-icons</code> selector a <code>grid-template-columns</code> property set to <code>repeat(5, 1fr)</code> to arrange the icons in a single row.</p>
</li>
<li><p>If you wanted to add more social icons, but keep them on the same row, you would need to update <code>grid-template-columns</code> to create additional columns. As an alternative, you can use the <code>grid-auto-flow</code> property.</p>
<p>This property takes either <code>row</code> or <code>column</code> as the first value, with an optional second value of <code>dense</code>. <code>grid-auto-flow</code> uses an auto-placement algorithm to adjust the grid layout. Setting it to <code>column</code> will tell the algorithm to create new columns for content as needed. The <code>dense</code> value allows the algorithm to backtrack and fill holes in the grid with smaller items, which can result in items appearing out of order.</p>
<p>For your <code>.social-icons</code> selector, set the <code>grid-auto-flow</code> property to <code>column</code>.</p>
</li>
<li><p>Now the auto-placement algorithm will kick in when you add a new icon element. However, the algorithm defaults the new column width to be <code>auto</code>, which will not match your current columns.</p>
<p>You can override this with the <code>grid-auto-columns</code> property. Give the <code>.social-icons</code> selector a <code>grid-auto-columns</code> property set to <code>1fr</code>.</p>
</li>
<li><p>Much like Flexbox, with CSS Grid you can align the content of grid items with <code>align-items</code> and <code>justify-items</code>. <code>align-items</code> will align child elements along the column axis, and <code>justify-items</code> will align child elements along the row axis.</p>
<p>Give the <code>.social-icons</code> selector an <code>align-items</code> property set to <code>center</code>.</p>
</li>
<li><p>Give the <code>.text</code> selector a <code>font-size</code> property set to <code>1.8rem</code> and a <code>letter-spacing</code> property set to <code>0.6px</code>.</p>
</li>
<li><p>Your <code>.text</code> element is not a CSS Grid, but you can create columns within an element without using Grid by using the <code>column-width</code> property.</p>
<p>Give your <code>.text</code> selector a <code>column-width</code> property set to <code>25rem</code>.</p>
</li>
<li><p>Magazines often use justified text in their printed content to structure their layout and control the flow of their content. While this works in printed form, justified text on websites can be an accessibility concern, for example presenting challenges for folks with dyslexia.</p>
<p>To make your project look like a printed magazine, give the <code>.text</code> selector a <code>text-align</code> property set to <code>justify</code>.</p>
</li>
<li><p>The <code>::first-letter</code> pseudo-selector allows you to target the first letter in the text content of an element.</p>
<p>Create a <code>.first-paragraph::first-letter</code> selector and set the <code>font-size</code> property to <code>6rem</code>. Also give it a <code>color</code> property set to <code>orangered</code> to make it stand out.</p>
</li>
<li><p>The other text has been shifted out of place. Move it into position by giving the <code>.first-paragraph::first-letter</code> selector a <code>float</code> property set to <code>left</code> and a <code>margin-right</code> property set to <code>1rem</code>.</p>
</li>
<li><p>Create an <code>hr</code> selector, and give it a <code>margin</code> property set to <code>1.5rem 0</code>.</p>
</li>
<li><p>To give the <code>hr</code> a color, you need to adjust the <code>border</code> property. Give the <code>hr</code> selector a <code>border</code> property set to <code>1px solid rgba(120, 120, 120, 0.6)</code>.</p>
</li>
<li><p>Create a <code>.quote</code> selector. Give it a <code>color</code> property set to <code>#00beef</code>, a <code>font-size</code> property set to <code>2.4rem</code>, and a <code>text-align</code> property set to <code>center</code>.</p>
</li>
<li><p>To make the quote text stand out more, give the <code>.quote</code> selector a <code>font-family</code> property set to <code>Raleway</code> with a fallback of <code>sans-serif</code>.</p>
</li>
<li><p>A quote is not really a quote without proper quotation marks. You can add these with CSS pseudo selectors.</p>
<p>Create a <code>.quote::before</code> selector and set the <code>content</code> property to <code>&quot;</code> with a space following it.</p>
<p>Also, create a <code>.quote::after</code> selector and set the <code>content</code> property to <code>&quot;</code> with a space preceding it.</p>
</li>
<li><p>Now it’s time to style your third <code>section</code>. Note that it has the <code>text</code> and <code>text-with-images</code> values for the <code>class</code> attribute, which means it is already inheriting the styles from your <code>.text</code> rule.</p>
<p>Create a <code>.text-with-images</code> selector and set the <code>display</code> property to <code>grid</code>.</p>
</li>
<li><p>You will need to have a column for text and a column for images. Give the <code>.text-with-images</code> selector a <code>grid-template-columns</code> property set to <code>1fr 2fr</code>. Also set the <code>column-gap</code> property to <code>3rem</code> to provide more spacing between the columns.</p>
</li>
<li><p>Give the <code>.text-with-images</code> selector a <code>margin-bottom</code> property set to <code>3rem</code>.</p>
</li>
<li><p>Create a <code>.lists</code> selector and set the <code>list-style-type</code> property to <code>none</code>. This will get rid of the bullet points on the list items.</p>
</li>
<li><p>Give the <code>.lists</code> selector a <code>margin-top</code> property set to <code>2rem</code>.</p>
</li>
<li><p>Create a <code>.lists li</code> rule to target the list items within your <code>.lists</code> element. Give it a <code>margin-bottom</code> property set to <code>1.5rem</code>.</p>
</li>
<li><p>Create a <code>.list-title, .list-subtitle</code> selector and set the <code>color</code> property to <code>#00beef</code>.</p>
</li>
<li><p>Time to style the last section of the magazine - the images.</p>
<p>The images are wrapped with an <code>aside</code> element using the <code>image-wrapper</code> class, so create an <code>.image-wrapper</code> selector. Set the <code>display</code> property to <code>grid</code>.</p>
</li>
<li><p>The images should be within a two column, three row layout.</p>
<p>Give the <code>.image-wrapper</code> selector a <code>grid-template-columns</code> property set to <code>2fr 1fr</code> and a <code>grid-template-rows</code> property set to <code>repeat(3, min-content)</code>. This will give our grid rows that adjust in height based on the content, but columns that remain a fixed width based on the container.</p>
</li>
<li><p>The <code>gap</code> property is a shorthand way to set the value of <code>column-gap</code> and <code>row-gap</code> at the same time. If given one value, it sets the <code>column-gap</code> and <code>row-gap</code> both to that value. If given two values, it sets the <code>row-gap</code> to the first value and the <code>column-gap</code> to the second.</p>
<p>Give the <code>.image-wrapper</code> selector a <code>gap</code> property set to <code>2rem</code>.</p>
</li>
<li><p>The <code>place-items</code> property can be used to set the <code>align-items</code> and <code>justify-items</code> values at the same time. The <code>place-items</code> property takes one or two values. If one value is provided, it is used for both the <code>align-items</code> and <code>justify-items</code> properties. If two values are provided, the first value is used for the <code>align-items</code> property and the second value is used for the <code>justify-items</code> property.</p>
<p>Give the <code>.image-wrapper</code> selector a <code>place-items</code> property set to <code>center</code>.</p>
</li>
<li><p>Create an <code>.image-1, .image-3</code> rule and give it a <code>grid-column</code> property set to <code>1 / -1</code>. This will allow the first and third images to span the full width of the grid.</p>
</li>
<li><p>Now that the magazine layout is finished, you need to make it responsive.</p>
<p>Start with a <code>@media</code> query for <code>only screen</code> with a <code>max-width</code> of <code>720px</code>. Inside, create an <code>.image-wrapper</code> selector and give it a <code>grid-template-columns</code> property of <code>1fr</code>.</p>
<p>This will collapse the three images into one column on smaller screens.</p>
</li>
<li><p>Create another <code>@media</code> query for <code>only screen</code> with a <code>max-width</code> of <code>600px</code>. Within, create a <code>.text-with-images</code> rule and give it a <code>grid-template-columns</code> property of <code>1fr</code>.</p>
<p>This will collapse your bottom text area into a single column on smaller screens.</p>
</li>
<li><p>Create a third <code>@media</code> query for <code>only screen</code> with a <code>max-width</code> of <code>550px</code>. Within, create a <code>.hero-title</code> selector with a <code>font-size</code> set to <code>6rem</code>, a <code>.hero-subtitle, .author, .quote, .list-title</code> selector with a <code>font-size</code> set to <code>1.8rem</code>, a <code>.social-icons</code> selector with a <code>font-size</code> set to <code>2rem</code>, and a <code>.text</code> selector with a <code>font-size</code> set to <code>1.6rem</code>.</p>
</li>
<li><p>Create one final <code>@media</code> query for <code>only screen</code> with a <code>max-width</code> of <code>420px</code>. Within, create a <code>.hero-title</code> selector with a <code>font-size</code> property set to <code>4.5rem</code>.</p>
<p>Congratulations! Your magazine is now complete.</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Magazine<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=Anton%7CBaskervville%7CRaleway&amp;display=swap&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://use.fontawesome.com/releases/v5.8.2/css/all.css&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;heading&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;hero&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/platform/universal/fcc_meta_1920X1080-indigo.png&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">alt</span>=<span class="string">&quot;freecodecamp logo&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;hero-img&quot;</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;hero-title&quot;</span>&gt;</span>OUR NEW CURRICULUM<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;hero-subtitle&quot;</span>&gt;</span></span><br><span class="line">            Our efforts to restructure our curriculum with a more project-based</span><br><span class="line">            focus</span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;author&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;author-name&quot;</span>&gt;</span></span><br><span class="line">            By</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://freecodecamp.org&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noreferrer&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span>freeCodeCamp&lt;/a</span><br><span class="line">            &gt;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;publish-date&quot;</span>&gt;</span>March 7, 2019<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;social-icons&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.facebook.com/freecodecamp/&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-facebook-f&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://twitter.com/freecodecamp/&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://instagram.com/freecodecamp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-instagram&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.linkedin.com/school/free-code-camp/&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-linkedin-in&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.youtube.com/freecodecamp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-youtube&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;first-paragraph&quot;</span>&gt;</span></span><br><span class="line">          Soon the freeCodeCamp curriculum will be 100% project-driven learning. Instead of a series of coding challenges, you&#x27;ll learn through building projects - step by step. Before we get into the details, let me emphasize: we are not changing the certifications. All 6 certifications will still have the same 5 required projects. We are only changing the optional coding challenges.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation! A vision! A picture in my head! A picture of this! This is what makes time travel possible: the flux capacitor!</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          It wasn&#x27;t as dramatic as Doc&#x27;s revelation in Back to the Future. It</span><br><span class="line">          just occurred to me while I was going for a run. The revelation: the entire curriculum should be a series of projects. Instead of individual coding challenges, we&#x27;ll just have projects, each with their own seamless series of tests. Each test gives you just enough information to figure out how to get it to pass. (And you can view hints if that isn&#x27;t enough.)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;quote&quot;</span>&gt;</span></span><br><span class="line">            The entire curriculum should be a series of projects</span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          No more walls of explanatory text. No more walls of tests. Just one</span><br><span class="line">          test at a time, as you build up a working project. Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals. There is no transition between lessons and projects, because the lessons themselves are baked into projects. And there&#x27;s plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text. Each project will involve dozens of tests like this. People will be coding the entire time, rather than switching back and forth from &quot;reading mode&quot; to &quot;coding mode&quot;.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project. People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification. They&#x27;ll get that sense of forward progress right from the beginning. And freeCodeCamp will be a much smoother experience.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;text text-with-images&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;brief-history&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;list-title&quot;</span>&gt;</span>A Brief History<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Of the Curriculum<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;lists&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;list-subtitle&quot;</span>&gt;</span>V1 - 2014<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                We launched freeCodeCamp with a simple list of 15 resources,</span><br><span class="line">                including Harvard&#x27;s CS50 and Stanford&#x27;s Database Class.</span><br><span class="line">              <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;list-subtitle&quot;</span>&gt;</span>V2 - 2015<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span>We added interactive algorithm challenges.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;list-subtitle&quot;</span>&gt;</span>V3 - 2015<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                We added our own HTML+CSS challenges (before we&#x27;d been relying on</span><br><span class="line">                General Assembly&#x27;s Dash course for these).</span><br><span class="line">              <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;list-subtitle&quot;</span>&gt;</span>V4 - 2016<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                We expanded the curriculum to 3 certifications, including Front</span><br><span class="line">                End, Back End, and Data Visualization. They each had 10 required</span><br><span class="line">                projects, but only the Front End section had its own challenges.</span><br><span class="line">                For the other certs, we were still using external resources like</span><br><span class="line">                Node School.</span><br><span class="line">              <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;list-subtitle&quot;</span>&gt;</span>V5 - 2017<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span>We added the back end and data visualization challenges.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;list-subtitle&quot;</span>&gt;</span>V6 - 2018<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                We launched 6 new certifications to replace our old ones. This was</span><br><span class="line">                the biggest curriculum improvement to date.</span><br><span class="line">              <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">&quot;image-wrapper&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/testable-projects-fcc/images/random-quote-machine.png&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">alt</span>=<span class="string">&quot;image of the quote machine project&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;image-1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">width</span>=<span class="string">&quot;600&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">height</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/testable-projects-fcc/images/calc.png&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">alt</span>=<span class="string">&quot;image of a calculator project&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;image-2&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">width</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">height</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">&quot;image-quote&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;quote&quot;</span>&gt;</span></span><br><span class="line">              The millions of people who are learning to code through freeCodeCamp</span><br><span class="line">              will have an even better resource to help them learn these</span><br><span class="line">              fundamentals.</span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/testable-projects-fcc/images/survey-form-background.jpeg&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">alt</span>=<span class="string">&quot;four people working on code&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;image-3&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">width</span>=<span class="string">&quot;600&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">height</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">*,</span><br><span class="line"><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">62.5%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Baskervville&#x27;</span>, serif;</span><br><span class="line">  <span class="attribute">color</span>: linen;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Anton&#x27;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Raleway&#x27;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: linen;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">minmax</span>(<span class="number">2rem</span>, <span class="number">1</span>fr) <span class="built_in">minmax</span>(min-content, <span class="number">94rem</span>) <span class="built_in">minmax</span>(<span class="number">2rem</span>, <span class="number">1</span>fr);</span><br><span class="line">  <span class="attribute">row-gap</span>: <span class="number">3rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hr &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">1.5rem</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">120</span>, <span class="number">120</span>, <span class="number">120</span>, <span class="number">0.6</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.heading</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">2</span> / <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">1</span>fr);</span><br><span class="line">  <span class="attribute">row-gap</span>: <span class="number">1.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">2</span> / <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.8rem</span>;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">0.6px</span>;</span><br><span class="line">  <span class="attribute">column-width</span>: <span class="number">25rem</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: justify;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hero</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span> / -<span class="number">1</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hero-title</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: orangered;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">8rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hero-subtitle</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2.4rem</span>;</span><br><span class="line">  <span class="attribute">color</span>: orangered;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.author</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Raleway&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.author-name</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#306203</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.publish-date</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.social-icons</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">3rem</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">5</span>, <span class="number">1</span>fr);</span><br><span class="line">  <span class="attribute">grid-auto-flow</span>: column;</span><br><span class="line">  <span class="attribute">grid-auto-columns</span>: <span class="number">1</span>fr;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.first-paragraph</span><span class="selector-pseudo">::first-letter</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">6rem</span>;</span><br><span class="line">  <span class="attribute">color</span>: orangered;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.quote</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00beef</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2.4rem</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Raleway&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.quote</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&quot; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.quote</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27; &quot;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text-with-images</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">2</span>fr;</span><br><span class="line">  <span class="attribute">column-gap</span>: <span class="number">3rem</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">3rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.lists</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.lists</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.list-title</span>, <span class="selector-class">.list-subtitle</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00beef</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.image-wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">2</span>fr <span class="number">1</span>fr;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">3</span>, min-content);</span><br><span class="line">  <span class="attribute">gap</span>: <span class="number">2rem</span>;</span><br><span class="line">  place-items: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.image-1</span>, <span class="selector-class">.image-3</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span> / -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">720px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.image-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.text-with-images</span> &#123;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">550px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.hero-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">6rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.hero-subtitle</span>,</span><br><span class="line">  <span class="selector-class">.author</span>,</span><br><span class="line">  <span class="selector-class">.quote</span>,</span><br><span class="line">  <span class="selector-class">.list-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.8rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.social-icons</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.text</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.6rem</span>;</span><br><span class="line">  &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(二)</title>
    <url>/responsive-web-dedign-%E4%BA%8C/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-Basic-CSS-by-Buiding-a-Cafe-Menu"><a href="#Learn-Basic-CSS-by-Buiding-a-Cafe-Menu" class="headerlink" title="Learn Basic CSS by Buiding a Cafe Menu"></a>Learn Basic CSS by Buiding a Cafe Menu</h4><span id="more"></span>

<ol>
<li><p>Add the tag, and an element with a attribute of .<code>&lt;!DOCTYPE html&gt;``html``lang``en</code></p>
</li>
<li><p>Add a <code>head</code> element within the <code>html</code> element, so you can add a <code>title</code> element. The <code>title</code> element’s text should be <code>Cafe Menu</code>.</p>
</li>
<li><p>The <code>title</code> is one of several elements that provide extra information not visible on the web page, but it is useful for search engines or how the page gets displayed.</p>
<p>Inside the <code>head</code> element, nest a <code>meta</code> element with an attribute named <code>charset</code> set to the value <code>utf-8</code> to tell the browser how to encode characters for the page. Note that <code>meta</code> elements are self-closing.</p>
</li>
<li><p>To prepare to create some actual content, add a <code>body</code> element below the <code>head</code> element.</p>
</li>
<li><p>It’s time to add some menu content. Add a <code>main</code> element within the existing <code>body</code> element. It will eventually contain pricing information about coffee and desserts offered by the cafe.</p>
</li>
<li><p>The name of the cafe is <code>CAMPER CAFE</code>. Add an <code>h1</code> element within your <code>main</code> element. Give it the name of the cafe in capitalized letters to make it stand out.</p>
</li>
<li><p>To let visitors know the cafe was founded in 2020, add a <code>p</code> element below the <code>h1</code> element with the text <code>Est. 2020</code>.</p>
</li>
<li><p>There will be two sections on the menu, one for coffees and one for desserts. Add a <code>section</code> element within the <code>main</code> element so you have a place to put all the coffees available.</p>
</li>
<li><p>Create an <code>h2</code> element in the <code>section</code> element and give it the text <code>Coffee</code>.</p>
</li>
<li><p>Up until now, you have been limited regarding the presentation and appearance of the content you create. To start taking control, add a <code>style</code> element within the <code>head</code> element.</p>
</li>
<li><p>You can add style to an element by specifying it in the <code>style</code> element and setting a property for it like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">element &#123;</span><br><span class="line"> property: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Center your <code>h1</code> element by setting its <code>text-align</code> property to the value <code>center</code>.</p>
</li>
<li><p>n the previous step, you used a type selector to style the <code>h1</code> element. Center the <code>h2</code> and <code>p</code> elements by adding a new type selector for each one to the existing <code>style</code> element.</p>
</li>
<li><p>You now have three type selectors with the exact same styling. You can add the same group of styles to many elements by creating a list of selectors. Each selector is separated with commas like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">selector1, selector2 &#123;</span><br><span class="line">  property: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Delete the three existing type selectors and replace them with one selector list that centers the text for the <code>h1</code>, <code>h2</code>, and <code>p</code> elements.</p>
</li>
<li><p>You have styled three elements by writing CSS inside the <code>style</code> tags. This works, but since there will be many more styles, it’s best to put all the styles in a separate file and link to it.</p>
<p>We have created a separate <code>styles.css</code> file for you and switched the editor view to that file. You can change between files with the tabs at the top of the editor.</p>
<p>Start by rewriting the styles you have created into the <code>styles.css</code> file. Make sure to exclude the opening and closing <code>style</code> tags.</p>
</li>
<li><p>Now that you have the CSS in the <code>styles.css</code> file, go ahead and remove the <code>style</code> element and all its content. Once it is removed, the text that was centered will shift back to the left.</p>
</li>
<li><p>Now you need to link the <code>styles.css</code> file so the styles will be applied again. Nest a self-closing <code>link</code> element in the <code>head</code> element. Give it a <code>rel</code> attribute value <code>stylesheet</code> and an <code>href</code> attribute value of <code>styles.css</code>.</p>
</li>
<li><p>For the styling of the page to look similar on mobile as it does on a desktop or laptop, you need to add a <code>meta</code> element with a special <code>content</code> attribute.</p>
<p>Add the following within the <code>head</code> element:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>The text is centered again so the link to the CSS file is working. Add another style to the file that changes the <code>background-color</code> property to <code>brown</code> for the <code>body</code> element.</p>
</li>
<li><p>That brown background makes it hard to read the text. Change the <code>body</code> element’s background color to be <code>burlywood</code> so it has some color but you are still be able to read the text.</p>
</li>
<li><p>The <code>div</code> element is used mainly for design layout purposes unlike the other content elements you have used so far. Add a <code>div</code> element inside the <code>body</code> element and then move all the other elements inside the new <code>div</code>.</p>
</li>
<li><p>The goal now is to make the <code>div</code> not take up the entire width of the page. The CSS <code>width</code> property is perfect for this. Create a new type selector in the style sheet that gives your <code>div</code> element a width of <code>300px</code>.</p>
</li>
<li><p>Comments in CSS look like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* comment here */</span></span><br></pre></td></tr></table></figure>

<p>In your style sheet, comment out the line containing the <code>background-color</code> property and value, so you can see the effect of only styling <code>div</code> element. This will make the background white again.</p>
</li>
<li><p>Now use the existing <code>div</code> selector to set the background color of the <code>div</code> element to be <code>burlywood</code>.</p>
</li>
<li><p>Now it’s easy to see that the text is centered inside the <code>div</code> element. Currently, the width of the <code>div</code> element is specified in pixels (<code>px</code>). Change the <code>width</code> property’s value to be <code>80%</code>, to make it 80% the width of its parent element (<code>body</code>).</p>
</li>
<li><p>Next, you want to center the <code>div</code> horizontally. You can do this by setting its <code>margin-left</code> and <code>margin-right</code> properties to <code>auto</code>. Think of the margin as invisible space around an element. Using these two margin properties, center the <code>div</code> element within the <code>body</code> element.</p>
</li>
<li><p>So far you have been using type selectors to style elements. A class selector is defined by a name with a dot directly in front of it, like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.class-name</span> &#123;</span><br><span class="line">  styles</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Change the existing <code>div</code> selector into a class selector by replacing <code>div</code> with a class named <code>menu</code>.</p>
</li>
<li><p>To apply the class’s styling to the <code>div</code> element, add a <code>class</code> attribute to the <code>div</code> element’s opening tag and set its value to <code>menu</code>.</p>
</li>
<li><p>Since the cafe’s main product for sale is coffee, you could use an image of coffee beans for the background of the page.</p>
<p>Delete the comment and its contents inside the <code>body</code> type selector. Now add a <code>background-image</code> property and set its value to <code>url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg)</code>.</p>
</li>
<li><p>It’s looking good. Time to start adding some menu items. Add an empty <code>article</code> element under the <code>Coffee</code> heading. It will contain a flavor and price of each coffee you currently offer.</p>
</li>
<li><p><code>article</code> elements commonly contain multiple elements that have related information. In this case, it will contain a coffee flavor and a price for that flavor. Nest two <code>p</code> elements inside your <code>article</code> element. The first one’s text should be <code>French Vanilla</code>, and the second’s text <code>3.00</code>.</p>
</li>
<li><p>Starting below the existing coffee/price pair, add the following coffee and prices using <code>article</code> elements with two nested <code>p</code> elements inside each. As before, the first <code>p</code> element’s text should contain the coffee flavor and the second <code>p</code> element’s text should contain the price.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Caramel Macchiato 3.75</span><br><span class="line">Pumpkin Spice 3.50</span><br><span class="line">Hazelnut 4.00</span><br><span class="line">Mocha 4.50</span><br></pre></td></tr></table></figure></li>
<li><p>The flavors and prices are currently stacked on top of each other and centered with their respective <code>p</code> elements. It would be nice if the flavor was on the left and the price was on the right.</p>
<p>Add the class name <code>flavor</code> to the <code>French Vanilla</code> <code>p</code> element.</p>
</li>
<li><p>Using your new <code>flavor</code> class as a selector, set the <code>text-align</code> property’s value to <code>left</code>.</p>
</li>
<li><p>Next, you want to align the price to the right. Add a class named <code>price</code> to your <code>p</code> element that has <code>3.00</code> as its text.</p>
</li>
<li><p>Now align the text to the <code>right</code> for the elements with the <code>price</code> class.</p>
</li>
<li><p>That is kind of what you want, but now it would be nice if the flavor and price were on the same line. <code>p</code> elements are block-level elements, so they take up the entire width of their parent element.</p>
<p>To get them on the same line, you need to apply some styling to the <code>p</code> elements so they behave more like inline elements. To do that, start by adding a <code>class</code> attribute with the value <code>item</code> to the first <code>article</code> element under the <code>Coffee</code> heading.</p>
</li>
<li><p>The <code>p</code> elements are nested in an <code>article</code> element with the class attribute of <code>item</code>. You can style all the <code>p</code> elements nested anywhere in elements with a class named <code>item</code> like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> <span class="selector-tag">p</span> &#123; &#125;</span><br></pre></td></tr></table></figure>

<p>Using the above selector, add a <code>display</code> property with value <code>inline-block</code> so the <code>p</code> elements behave more like inline elements.</p>
</li>
<li><p>That’s closer, but the price didn’t stay over on the right. This is because <code>inline-block</code> elements only take up the width of their content. To spread them out, add a <code>width</code> property to the <code>flavor</code> and <code>price</code> class selectors that have a value of <code>50%</code> each.</p>
</li>
<li><p>Well that did not work. Styling the <code>p</code> elements as <code>inline-block</code> and placing them on separate lines in the code creates an extra space to the right of the first <code>p</code> element, causing the second one to shift to the next line. One way to fix this is to make each <code>p</code> element’s width a little less than <code>50%</code>.</p>
<p>Change the <code>width</code> value to <code>49%</code> for each class to see what happens.</p>
</li>
<li><p>That worked, but there is still a little space on the right of the price.</p>
<p>You could keep trying various percentages for the widths. Instead, use the back space key on your keyboard to move the <code>p</code> element with the class <code>price</code> next to the <code>p</code> element with the class <code>flavor</code> so that they are on the same line in the editor. Make sure there is no space between them.</p>
</li>
<li><p>Now go ahead and change both the <code>flavor</code> and <code>price</code> class’ widths to be <code>50%</code> again.</p>
</li>
<li><p>Now that you know it works, you can change the remaining <code>article</code> and <code>p</code> elements to match the first set. Start by adding the class <code>item</code> to the other <code>article</code> elements.</p>
</li>
<li><p>Next, position the other <code>p</code> elements to be on the same line with no space between them.</p>
</li>
<li><p>To complete the styling, add the applicable class names <code>flavor</code> and <code>price</code> to all the remaining <code>p</code> elements.</p>
</li>
<li><p>If you make the width of the page preview smaller, you will notice at some point, some of the text on the left starts wrapping around to the next line. This is because the width of the <code>p</code> elements on the left side can only take up <code>50%</code> of the space.</p>
<p>Since you know the prices on the right have significantly fewer characters, change the <code>flavor</code> class <code>width</code> value to be <code>75%</code> and the <code>price</code> class <code>width</code> value to be <code>25%</code>.</p>
</li>
<li><p>You will come back to styling the menu in a few steps, but for now, go ahead and add a second <code>section</code> element below the first for displaying the desserts offered by the cafe.</p>
</li>
<li><p>Add an <code>h2</code> element in the new section and give it the text <code>Desserts</code>.</p>
</li>
<li><p>Add an empty <code>article</code> element under the <code>Desserts</code> heading. Give it a <code>class</code> attribute with the value <code>item</code>.</p>
</li>
<li><p>Nest two <code>p</code> elements inside your <code>article</code> element. The first one’s text should be <code>Donut</code>, and the second’s text <code>1.50</code>. Put both of them on the same line making sure there is no space between them.</p>
</li>
<li><p>For the two <code>p</code> elements you just added, add <code>dessert</code> as the value of the first <code>p</code> element’s <code>class</code> attribute and the value <code>price</code> as the second <code>p</code> elements <code>class</code> attribute.</p>
</li>
<li><p>Something does not look right. You added the correct <code>class</code> attribute value to the <code>p</code> element with <code>Donut</code> as its text, but you have not defined a selector for it.</p>
<p>The CSS rule for the <code>flavor</code> class already sets the properties you want. Add the <code>dessert</code> class as an additional selector for this CSS rule.</p>
</li>
<li><p>Below the dessert you just added, add the rest of the desserts and prices using three more <code>article</code> elements, each with two nested <code>p</code> elements. Each element should have the correct dessert and price text, and all of them should have the correct classes.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Cherry Pie 2.75</span><br><span class="line">Cheesecake 3.00</span><br><span class="line">Cinnamon Roll 2.50</span><br></pre></td></tr></table></figure></li>
<li><p>You can give your menu some space between the content and the sides with various <code>padding</code> properties.</p>
<p>Give the <code>menu</code> class a <code>padding-left</code> and a <code>padding-right</code> with the same value <code>20px</code>.</p>
</li>
<li><p>That looks better. Now try to add the same <code>20px</code> padding to the top and bottom of the menu.</p>
</li>
<li><p>Since all 4 sides of the menu have the same internal spacing, go ahead and delete the four properties and use a single <code>padding</code> property with the value <code>20px</code>.</p>
</li>
<li><p>The current width of the menu will always take up 80% of the <code>body</code> element’s width. On a very wide screen, the coffee and dessert appear far apart from their prices.</p>
<p>Add a <code>max-width</code> property to the <code>menu</code> class with a value of <code>500px</code> to prevent it from growing too wide.</p>
</li>
<li><p>You can change the <code>font-family</code> of text, to make it look different from the default font of your browser. Each browser has some common fonts available to it.</p>
<p>Change all the text in your <code>body</code>, by adding a <code>font-family</code> property with the value <code>sans-serif</code>. This is a fairly common font that is very readable.</p>
</li>
<li><p>It is a bit boring for all the text to have the same <code>font-family</code>. You can still have the majority of the text <code>sans-serif</code> and make just the <code>h1</code> and <code>h2</code> elements different using a different selector.</p>
<p>Style both the <code>h1</code> and the <code>h2</code> elements so that only these elements’ text use <code>Impact</code> font.</p>
</li>
<li><p>You can add a fallback value for the font-family by adding another font name separated by a comma. Fallbacks are used in instances where the initial is not found/available.</p>
<p>Add the fallback font <code>serif</code> after the <code>Impact</code> font.</p>
</li>
<li><p>Make the <code>Est. 2020</code> text italicized by creating an <code>established</code> class selector and giving it the <code>font-style</code> property with the value <code>italic</code>.</p>
</li>
<li><p>Now apply the <code>established</code> class to the <code>Est. 2020</code> text.</p>
</li>
<li><p>The typography of heading elements (e.g. <code>h1</code>, <code>h2</code>) is set by default values of users’ browsers.</p>
<p>Add two new type selectors (<code>h1</code> and <code>h2</code>). Use the <code>font-size</code> property for both, but use the value <code>40px</code> for the <code>h1</code> and <code>30px</code> for the <code>h2</code>.</p>
</li>
<li><p>Add a <code>footer</code> element below the <code>main</code> element, where you can add some additional information.</p>
</li>
<li><p>Inside the <code>footer</code>, add a <code>p</code> element. Then, nest an anchor (<code>a</code>) element in the <code>p</code> that links to <code>https://www.freecodecamp.org</code> and has the text <code>Visit our website</code>.</p>
</li>
<li><p>Add a second <code>p</code> element below the one with the link and give it the text <code>123 Free Code Camp Drive</code>.</p>
</li>
<li><p>You can use an <code>hr</code> element to display a divider between sections of different content.</p>
<p>First, add an <code>hr</code> element between the <code>p</code> element with the class <code>established</code> and the first <code>section</code> element. Note that <code>hr</code> elements are self closing.</p>
</li>
<li><p>The default properties of an <code>hr</code> element will make it appear as a thin light grey line. You can change the height of the line by specifying a value for the <code>height</code> property.</p>
<p>Change the height of the <code>hr</code> element to be <code>3px</code>.</p>
</li>
<li><p>Change the background color of the <code>hr</code> element to <code>brown</code> so it matches the color of the coffee beans.</p>
</li>
<li><p>Notice the grey color along the edges of the line. Those edges are known as borders. Each side of an element can have a different color or they can all be the same.</p>
<p>Make all the edges of the <code>hr</code> element the same color as the background of it using the <code>border-color</code> property.</p>
</li>
<li><p>Notice how the thickness of the line looks bigger? The default value of a property named <code>border-width</code> is <code>1px</code> for all edges of <code>hr</code> elements. By changing the border to the same color as the background, the total height of the line is <code>5px</code> (<code>3px</code> plus the top and bottom border width of <code>1px</code>).</p>
<p>Change the <code>height</code> property of the <code>hr</code> to be <code>2px</code>, so the total height of it becomes <code>4px</code>.</p>
</li>
<li><p>Go ahead and add another <code>hr</code> element between the <code>main</code> element and the <code>footer</code> element.</p>
</li>
<li><p>To create a little more room around the menu, add <code>20px</code> of space on the inside of the <code>body</code> element by using the <code>padding</code> property.</p>
</li>
<li><p>Focusing on the menu items and prices, there is a fairly large gap between each line.</p>
<p>Target all the <code>p</code> elements nested in elements with the <code>class</code> named <code>item</code> and set their top and bottom margin to be <code>5px</code>.</p>
</li>
<li><p>Using the same style selector in the previous step, make the font size of the items and prices larger by using a value of <code>18px</code>.</p>
</li>
<li><p>Changing the <code>margin-bottom</code> to <code>5px</code> looks great. However, now the space between the <code>Cinnamon Roll</code> menu item and the second <code>hr</code> element does not match the space between the top <code>hr</code> element and the <code>Coffee</code> heading.</p>
<p>Add some more space by creating a class named <code>bottom-line</code> using <code>25px</code> for the <code>margin-top</code> property.</p>
</li>
<li><p>Now add the <code>bottom-line</code> class to the second <code>hr</code> element so the styling is applied.</p>
</li>
<li><p>Next you are going to be styling the <code>footer</code> element. To keep the CSS organized, add a comment at the end of <code>styles.css</code> with the text <code>FOOTER</code>.</p>
</li>
<li><p>Moving down to the <code>footer</code> element, make all the text have a value of <code>14px</code> for the font size.</p>
</li>
<li><p>The default color of a link that has not yet been clicked on is typically blue. The default color of a link that has already been visited from a page is typically purple.</p>
<p>To make the <code>footer</code> links the same color regardless if a link has been visited, use a type selector for the anchor element (<code>a</code>) and use the value <code>black</code> for the <code>color</code> property.</p>
</li>
<li><p>You change properties of a link when the link has actually been visited by using a pseudo-selector that looks like <code>a:visited &#123; propertyName: propertyValue; &#125;</code>.</p>
<p>Change the color of the footer <code>Visit our website</code> link to be <code>grey</code> when a user has visited the link.</p>
</li>
<li><p>You change properties of a link when the mouse hovers over them by using a pseudo-selector that looks like <code>a:hover &#123; propertyName: propertyValue; &#125;</code>.</p>
<p>Change the color of the footer <code>Visit our website</code> link to be <code>brown</code> when a user hovers over it.</p>
</li>
<li><p>You change properties of a link when the link is actually being clicked by using a pseudo-selector that looks like <code>a:active &#123; propertyName: propertyValue; &#125;</code>.</p>
<p>Change the color of the footer <code>Visit our website</code> link to be <code>white</code> when clicked on.</p>
</li>
<li><p>To keep with the same color theme you have already been using (black and brown), change the color for when the link is visited to <code>black</code> and use <code>brown</code> for when the link is actually clicked.</p>
</li>
<li><p>The menu text <code>CAMPER CAFE</code> has a different space from the top than the address’s space at the bottom of the menu. This is due to the browser having some default top margin for the <code>h1</code> element.</p>
<p>Change the top margin of the <code>h1</code> element to <code>0</code> to remove all the top margin.</p>
</li>
<li><p>To remove some of the vertical space between the <code>h1</code> element and the text <code>Est. 2020</code>, change the bottom margin of the <code>h1</code> to <code>15px</code>.</p>
</li>
<li><p>Now the top spacing looks good. The space below the address at the bottom of the menu is a little bigger than the space at the top of the menu and the <code>h1</code> element.</p>
<p>To decrease the default margin space below the address <code>p</code> element, create a class selector named <code>address</code> and use the value <code>5px</code> for the <code>margin-bottom</code> property.</p>
</li>
<li><p>Now apply the <code>address</code> class to the <code>p</code> element containing the street address <code>123 Free Code Camp Drive</code>.</p>
</li>
<li><p>The menu looks good, but other than the coffee beans background image, it is mainly just text.</p>
<p>Under the <code>Coffee</code> heading, add an image using the url <code>https://cdn.freecodecamp.org/curriculum/css-cafe/coffee.jpg</code>. Give the image an <code>alt</code> value of <code>coffee icon</code>.</p>
</li>
<li><p>The image you added is not centered horizontally like the <code>Coffee</code> heading above it. <code>img</code> elements are “like” inline elements.</p>
<p>To make the image behave like heading elements (which are block-level), create an <code>img</code> type selector and use the value <code>block</code> for the <code>display</code> property and use the applicable <code>margin-left</code> and <code>margin-right</code> values to center it horizontally.</p>
</li>
<li><p>Add one last image under the <code>Desserts</code> heading using the url <code>https://cdn.freecodecamp.org/curriculum/css-cafe/pie.jpg</code>. Give the image an <code>alt</code> value of <code>pie icon</code>.</p>
</li>
<li><p>It would be nice if the vertical space between the <code>h2</code> elements and their associated icons was smaller. The <code>h2</code> elements have default top and bottom margin space, so you could change the bottom margin of the <code>h2</code> elements to say <code>0</code> or another number.</p>
<p>There is an easier way, simply add a negative top margin to the <code>img</code> elements to pull them up from their current positions. Negative values are created using a <code>-</code> in front of the value. To complete this project, go ahead and use a negative top margin of <code>25px</code> in the <code>img</code> type selector.</p>
</li>
<li><p>```html</p>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cafe Menu</title>
    <link rel="stylesheet" href="styles.css">
  </head>
  <body>
    <div class="menu">
      <main>
        <h1>CAMPER CAFE</h1>
        <p class="established">Est. 2020</p>
        <hr>
        <section>
          <h2>Coffee</h2>
          <img src="https://cdn.freecodecamp.org/curriculum/css-cafe/coffee.jpg" alt="coffee icon">
          <article class="item">
            <p class="flavor">French Vanilla</p><p class="price">3.00</p>
          </article>
          <article class="item">
            <p class="flavor">Caramel Macchiato</p><p class="price">3.75</p>
          </article>
          <article class="item">
            <p class="flavor">Pumpkin Spice</p><p class="price">3.50</p>
          </article>
          <article class="item">
            <p class="flavor">Hazelnut</p><p class="price">4.00</p>
          </article>
          <article class="item">
            <p class="flavor">Mocha</p><p class="price">4.50</p>
          </article>
        </section>
        <section>
          <h2>Desserts</h2>
          <img src="https://cdn.freecodecamp.org/curriculum/css-cafe/pie.jpg" alt="pie icon">
          <article class="item">
            <p class="dessert">Donut</p><p class="price">1.50</p>
          </article>
          <article class="item">
            <p class="dessert">Cherry Pie</p><p class="price">2.75</p>
          </article>
          <article class="item">
            <p class="dessert">Cheesecake</p><p class="price">3.00</p>
          </article>
          <article class="item">
            <p class="dessert">Cinnamon Roll</p><p class="price">2.50</p>
          </article>
        </section>
      </main>
      <hr class="bottom-line">
      <footer>
        <p><a href="https://www.freecodecamp.org">Visit our website</a></p>
        <p class="address">123 Free Code Camp Drive</p>
      </footer>
    </div>
  </body>
</html>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">```css</span><br><span class="line">body &#123;</span><br><span class="line">  /*background-color: burlywood;*/</span><br><span class="line">  background-image:url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg)</span><br><span class="line">  font-family:sans-serif;</span><br><span class="line">  padding:20px;</span><br><span class="line">&#125;</span><br><span class="line">.menu&#123;</span><br><span class="line">  width:80%;</span><br><span class="line">  background-color: burlywood;</span><br><span class="line">  margin-left:auto;</span><br><span class="line">  margin-right:auto;</span><br><span class="line"> /* padding-left:20px;</span><br><span class="line">  padding-right:20px;</span><br><span class="line">  padding-top: 20px;</span><br><span class="line">  padding-bottom: 20px;*/</span><br><span class="line">  padding:20px;</span><br><span class="line">  max-width:500px;</span><br><span class="line">&#125;</span><br><span class="line">hr&#123;</span><br><span class="line">  height:2px;</span><br><span class="line">  background-color:brown;</span><br><span class="line">  border-color:brown;</span><br><span class="line">&#125;</span><br><span class="line">.bottom-line&#123;</span><br><span class="line">  margin-top:25px;</span><br><span class="line">&#125;</span><br><span class="line">h1&#123;</span><br><span class="line">  font-size:40px;</span><br><span class="line">  margin-top:0px;</span><br><span class="line">  margin-bottom:15px;</span><br><span class="line">&#125;</span><br><span class="line">h2&#123;</span><br><span class="line">  font-size:30px;</span><br><span class="line">&#125;</span><br><span class="line">h1,</span><br><span class="line">h2,</span><br><span class="line">p &#123;</span><br><span class="line">  text-align:center;</span><br><span class="line">&#125;</span><br><span class="line">h1,</span><br><span class="line">h2&#123;</span><br><span class="line">  font-family: Impact,serif;;</span><br><span class="line">&#125;</span><br><span class="line">.flavor,</span><br><span class="line">.dessert &#123;</span><br><span class="line">  text-align: left;</span><br><span class="line">  width:75%;</span><br><span class="line">&#125;</span><br><span class="line">.price &#123;</span><br><span class="line">  text-align: right;</span><br><span class="line">  width:25%;</span><br><span class="line">&#125;</span><br><span class="line">.item p&#123;</span><br><span class="line">  display:inline-block;</span><br><span class="line">  margin-top:5px;</span><br><span class="line">  margin-bottom:5px;</span><br><span class="line">  font-size:18px;</span><br><span class="line">&#125; </span><br><span class="line">.established&#123;</span><br><span class="line">  font-style:italic;</span><br><span class="line">&#125;</span><br><span class="line">img&#123;</span><br><span class="line">  display:block;</span><br><span class="line">  margin-left:auto;</span><br><span class="line">  margin-right:auto;</span><br><span class="line">  margin-top:-25px;</span><br><span class="line">&#125;</span><br><span class="line">/* FOOTER */</span><br><span class="line">footer&#123;</span><br><span class="line">  font-size:14px;</span><br><span class="line">&#125; </span><br><span class="line">a&#123;</span><br><span class="line">  color:black;</span><br><span class="line">&#125; </span><br><span class="line">a:visited &#123;</span><br><span class="line">  color: black;</span><br><span class="line">&#125;</span><br><span class="line">a:hover &#123;</span><br><span class="line">  color: brown;</span><br><span class="line">&#125;</span><br><span class="line">a:active &#123;</span><br><span class="line">  color: brown;</span><br><span class="line">&#125;</span><br><span class="line">.address&#123;</span><br><span class="line">  margin-bottom:5px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p> </p>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>伪选择器</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(三)</title>
    <url>/responsive-web-dedign-%E4%B8%89/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-CSS-Colors-by-Building-a-Set-of-Colored-Markers"><a href="#Learn-CSS-Colors-by-Building-a-Set-of-Colored-Markers" class="headerlink" title="Learn CSS Colors by Building a Set of Colored Markers"></a>Learn CSS Colors by Building a Set of Colored Markers</h4><span id="more"></span>

<ol>
<li><p>As you’ve seen in the previous projects, webpages should start with a <code>DOCTYPE html</code> declaration, followed by an <code>html</code> element.</p>
<p>Add a <code>DOCTYPE html</code> declaration at the top of the document, and an <code>html</code> element after that. Give the <code>html</code> element a <code>lang</code> attribute with <code>en</code> as its value.</p>
</li>
<li><p>Nest a <code>head</code> element within the <code>html</code> element. Just after the <code>head</code> element, add a <code>body</code> element.</p>
</li>
<li><p>Remember that the <code>title</code> element gives search engines extra information about the page. It also displays the content of that <code>title</code> element in two more ways:</p>
<ul>
<li>in the title bar when the page is open</li>
<li>in the browser tab for the page when you hover on it. Even if that tab is not active, once you hover on the tab, the <code>title</code> text is displayed.</li>
</ul>
<p>Within the <code>head</code> element, nest a <code>title</code> element with the text <code>Colored Markers</code>.</p>
</li>
<li><p>To tell browsers how to encode characters on your page, set the <code>charset</code> to <code>utf-8</code>. <code>utf-8</code> is a universal character set that includes almost every character from all human languages.</p>
<p>Inside the <code>head</code> element, nest a <code>meta</code> element with the attribute <code>charset</code> set to <code>utf-8</code>. Remember that <code>meta</code> elements are self-closing, and do not need a closing tag.</p>
</li>
<li><p>You can have multiple self-closing <code>meta</code> elements on a web page. What distinguishes one <code>meta</code> element from the other is the attribute. You should add a new meta element for each attribute you want to specify.</p>
<p>Add another self-closing <code>meta</code> element within the <code>head</code>. Give it a <code>name</code> attribute set to <code>viewport</code> and a <code>content</code> attribute set to <code>width=device-width, initial-scale=1.0</code> so your page looks the same on all devices.</p>
</li>
<li><p>Now you’re ready to start adding content to the page.</p>
<p>Within the <code>body</code>, nest an <code>h1</code> element with the text <code>CSS Color Markers</code>.</p>
</li>
<li><p>In this project you’ll work with an external CSS file to style the page. We’ve already created a <code>styles.css</code> file for you. But before you can use it, you’ll need to link it to the page.</p>
<p>Nest a <code>link</code> element within the <code>head</code> element. Give it a <code>rel</code> attribute set to <code>stylesheet</code> and an <code>href</code> attribute set to <code>styles.css</code>.</p>
</li>
<li><p>Now that your external CSS file is set up, you can start styling the page.</p>
<p>As a reminder, here’s how to target a paragraph element and align it to the right:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Create a new CSS rule that targets the <code>h1</code> element, and set its <code>text-align</code> property to <code>center</code>.</p>
</li>
<li><p>Now you’ll add some elements that you’ll eventually style into color markers.</p>
<p>First, within the <code>body</code> element, add a <code>div</code> element and set its <code>class</code> attribute to <code>container</code>. Make sure the <code>div</code> element is below the <code>h1</code> element.</p>
</li>
<li><p>Next, within the <code>div</code> element, add another <code>div</code> element and give it a class of <code>marker</code>.</p>
</li>
<li><p>It’s time to add some color to the marker. Remember that one way to add color to an element is to use a color keyword like <code>black</code>, <code>cyan</code>, or <code>yellow</code>.</p>
<p>As a reminder, here’s how to target the class <code>freecodecamp</code>:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.freecodecamp</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Create a new CSS rule that targets the class <code>marker</code>, and set its <code>background-color</code> property to <code>red</code>.</p>
<p><strong>Note:</strong> You will not see any changes after adding the CSS.</p>
</li>
<li><p>The background color was applied, but since the marker <code>div</code> element has no content in it, it doesn’t have any height by default.</p>
<p>In your <code>.marker</code> CSS rule, set the <code>height</code> property to <code>25px</code> and the <code>width</code> property to <code>200px</code></p>
</li>
<li><p>Your marker would look better if it was centered on the page. An easy way to do that is with the <code>margin</code> shorthand property.</p>
<p>In the last project, you set the margin area of elements separately with properties like <code>margin-top</code> and <code>margin-left</code>. The <code>margin</code> shorthand property makes it easy to set multiple margin areas at the same time.</p>
<p>To center your marker on the page, set its <code>margin</code> property to <code>auto</code>. This sets <code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code>, and <code>margin-left</code> all to <code>auto</code>.</p>
</li>
<li><p>Now that you’ve got one marker centered with color, it’s time to add the other markers.</p>
<p>In the <code>container</code> <code>div</code>, add two more <code>div</code> elements and give them each a class of <code>marker</code>.</p>
</li>
<li><p>While you have three separate marker <code>div</code> elements, they look like one big rectangle. You should add some space between them to make it easier to see each element.</p>
<p>When the shorthand <code>margin</code> property has two values, it sets <code>margin-top</code> and <code>margin-bottom</code> to the first value, and <code>margin-left</code> and <code>margin-right</code> to the second value.</p>
<p>In your <code>.marker</code> CSS rule, set the <code>margin</code> property to <code>10px auto</code>.</p>
</li>
<li><p>To give the markers different colors, you will need to add a unique class to each one. Multiple classes can be added to an element by listing them in the <code>class</code> attribute and separating them with a space. For example, the following adds both the <code>animal</code> and <code>dog</code> classes to a <code>div</code> element.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;animal dog&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>If you add multiple classes to an HTML element, the styles of the first classes you list may be overridden by later classes.</p>
<p>To begin, add the class <code>one</code> to the first marker <code>div</code> element.</p>
</li>
<li><p>Next, remove the <code>background-color</code> property and its value from the <code>.marker</code> CSS rule.</p>
</li>
<li><p>Then, create a new CSS rule that targets the class <code>one</code> and set its <code>background-color</code> property to <code>red</code>.</p>
</li>
<li><p>Add the class <code>two</code> to the second marker <code>div</code>, and add the class <code>three</code> to the third marker <code>div</code>.</p>
</li>
<li><p>Create a CSS rule that targets the class <code>two</code> and set its <code>background-color</code> property to <code>green</code>.</p>
<p>Also, create a separate CSS rule that targets the class <code>three</code> and set its <code>background-color</code> to <code>blue</code>.</p>
</li>
<li><p>There are two main color models: the additive RGB (red, green, blue) model used in electronic devices, and the subtractive CMYK (cyan, magenta, yellow, black) model used in print.</p>
<p>In this project, you’ll work with the RGB model. This means that colors begin as black, and change as different levels of red, green, and blue are introduced. An easy way to see this is with the CSS <code>rgb</code> function.</p>
<p>Create a new CSS rule that targets the class <code>container</code> and set its <code>background-color</code> to black with <code>rgb(0, 0, 0)</code>.</p>
</li>
<li><p>A function is a piece of code that can take an input and perform a specific action. The CSS <code>rgb</code> function accepts values, or arguments, for red, green, and blue, and produces a color:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">rgb(red, green, blue);</span><br></pre></td></tr></table></figure>

<p>Each red, green, and blue value is a number from <code>0</code> to <code>255</code>. <code>0</code> means that there’s 0% of that color, and is black. <code>255</code> means that there’s 100% of that color.</p>
<p>In the <code>.one</code> CSS rule, replace the color keyword <code>red</code> with the <code>rgb</code> function. For the <code>rgb</code> function, set the value for red to <code>255</code>, the value for green to <code>0</code>, and the value for blue to <code>0</code>.</p>
</li>
<li><p>Notice that the <code>background-color</code> for your marker is still red. This is because you set the red value of the <code>rgb</code> function to the max of <code>255</code>, or 100% red, and set both the green and blue values to <code>0</code>.</p>
<p>Now use the <code>rgb</code> function to set the other colors.</p>
<p>In the <code>.two</code> CSS rule, use the <code>rgb</code> function to set the <code>background-color</code> to the max value for green, and <code>0</code> for the other values. And in the <code>.three</code> CSS rule, use the <code>rgb</code> function to set the <code>background-color</code> to the max value for blue, and <code>0</code> for the other values.</p>
</li>
<li><p>While the red and blue markers look the same, the green one is much lighter than it was before. This is because the <code>green</code> color keyword is actually a darker shade, and is about halfway between black and the maximum value for green.</p>
<p>In the <code>.two</code> CSS rule, set the green value in the <code>rgb</code> function to <code>127</code> to lower its intensity.</p>
</li>
<li><p>Now add a little more vertical space between your markers and the edge of the <code>container</code> element they’re in.</p>
<p>In the <code>.container</code> CSS rule, use the shorthand <code>padding</code> property to add <code>10px</code> of top and bottom padding, and set the left and right padding to <code>0</code>. This works similarly to the shorthand <code>margin</code> property you used earlier.</p>
</li>
<li><p>In the additive RGB color model, primary colors are colors that, when combined, create pure white. But for this to happen, each color needs to be at its highest intensity.</p>
<p>Before you combine colors, set your green marker back to pure green. For the <code>rgb</code> function in the <code>.two</code> CSS rule, set green back to the max value of <code>255</code>.</p>
</li>
<li><p>Now that you have the primary RGB colors, it’s time to combine them.</p>
<p>For the <code>rgb</code> function in the <code>.container</code> rule, set the red, green, and blue values to the max of <code>255</code>.</p>
</li>
<li><p>Secondary colors are the colors you get when you combine primary colors. You might have noticed some secondary colors in the last step as you changed the red, green, and blue values.</p>
<p>To create the first secondary color, yellow, update the <code>rgb</code> function in the <code>.one</code> CSS rule to combine pure red and pure green.</p>
</li>
<li><p>To create the next secondary color, cyan, update the <code>rgb</code> function in the <code>.two</code> CSS rule to combine pure green and pure blue.</p>
</li>
<li><p>To create the final secondary color, magenta, update the <code>rgb</code> function in the <code>.three</code> CSS rule to combine pure blue and pure red.</p>
</li>
<li><p>Now that you’re familiar with secondary colors, you’ll learn how to create tertiary colors. Tertiary colors are created by combining a primary with a nearby secondary color.</p>
<p>To create the tertiary color orange, update the <code>rgb</code> function in the <code>.one</code> CSS rule so that red is at the max value, and set green to <code>127</code>.</p>
</li>
<li><p>Notice that, to create orange, you had to increase the intensity of red and decrease the intensity of the green <code>rgb</code> values. This is because orange is the combination of red and yellow, and falls between the two colors on the color wheel.</p>
<p>To create the tertiary color spring green, combine cyan with green. Update the <code>rgb</code> function in the <code>.two</code> CSS rule so that green is at the max value, and set blue to <code>127</code>.</p>
</li>
<li><p>And to create the tertiary color violet, combine magenta with blue. Update the <code>rgb</code> function in the <code>.three</code> CSS rule so that blue is at the max value, and set red to <code>127</code>.</p>
</li>
<li><p>There are three more tertiary colors: chartreuse green (green + yellow), azure (blue + cyan), and rose (red + magenta).</p>
<p>To create chartreuse green, update the <code>rgb</code> function in the <code>.one</code> CSS rule so that red is at <code>127</code>, and set green to the max value.</p>
<p>For azure, update the <code>rgb</code> function in the <code>.two</code> CSS rule so that green is at <code>127</code> and blue is at the max value.</p>
<p>And for rose, which is sometimes called bright pink, update the <code>rgb</code> function in the <code>.three</code> CSS rule so that blue is at <code>127</code> and red is at the max value.</p>
</li>
<li><p>Now that you’ve gone through all the primary, secondary, and tertiary colors on a color wheel, it’ll be easier to understand other color theory concepts and how they impact design.</p>
<p>First, in the CSS rules <code>.one</code>, <code>.two</code>, and <code>.three</code>, adjust the values in the <code>rgb</code> function so that the <code>background-color</code> of each element is set to pure black. Remember that the <code>rgb</code> function uses the additive color model, where colors start as black and change as the values of red, green, and blue increase.</p>
</li>
<li><p>A color wheel is a circle where similar colors, or hues, are near each other, and different ones are further apart. For example, pure red is between the hues rose and orange.</p>
<p>Two colors that are opposite from each other on the color wheel are called complementary colors. If two complementary colors are combined, they produce gray. But when they are placed side-by-side, these colors produce strong visual contrast and appear brighter.</p>
<p>In the <code>rgb</code> function for the <code>.one</code> CSS rule, set the red value to the max of <code>255</code> to produce pure red. In the <code>rgb</code> function for <code>.two</code> CSS rule, set the values for green and blue to the max of <code>255</code> to produce cyan.</p>
</li>
<li><p>Notice that the red and cyan colors are very bright right next to each other. This contrast can be distracting if it’s overused on a website, and can make text hard to read if it’s placed on a complementary-colored background.</p>
<p>It’s better practice to choose one color as the dominant color, and use its complementary color as an accent to bring attention to certain content on the page.</p>
<p>First, in the <code>h1</code> rule, use the <code>rgb</code> function to set its <code>background-color</code> to cyan.</p>
</li>
<li><p>Next, in the <code>.one</code> CSS rule, use the <code>rgb</code> function to set the <code>background-color</code> to black. And in the <code>.two</code> CSS rule, use the <code>rgb</code> function to set the <code>background-color</code> to red.</p>
</li>
<li><p>Notice how your eyes are naturally drawn to the red color in the center? When designing a site, you can use this effect to draw attention to important headings, buttons, or links.</p>
<p>There are several other important color combinations outside of complementary colors, but you’ll learn those a bit later.</p>
<p>For now, use the <code>rgb</code> function in the <code>.two</code> CSS rule to set the <code>background-color</code> to black.</p>
</li>
<li><p>And in the <code>h1</code> CSS rule, remove the <code>background-color</code> property and value to go back to the default white color.</p>
</li>
<li><p>Now it’s time to add other details to the markers, starting with the first one.</p>
<p>In the first marker <code>div</code> element, change the class <code>one</code> to <code>red</code>.</p>
</li>
<li><p>Update the <code>.one</code> CSS rule to target the new <code>red</code> class.</p>
</li>
<li><p>And update the <code>rgb</code> function in the <code>.red</code> CSS rule so that the red value is at the max.</p>
</li>
<li><p>Next, change the class <code>two</code> to <code>green</code> in the second marker <code>div</code>, and the class <code>three</code> to <code>blue</code> in the third marker <code>div</code>.</p>
</li>
<li><p>Update the CSS class selector <code>.two</code> so it targets the new <code>green</code> class. And update the <code>.three</code> class selector so it targets the new <code>blue</code> class.</p>
</li>
<li><p>A very common way to apply color to an element with CSS is with hexadecimal or hex values. While hex values sound complicated, they’re really just another form of RGB values.</p>
<p>Hex color values start with a <code>#</code> character and take six characters from 0-9 and A-F. The first pair of characters represent red, the second pair represent green, and the third pair represent blue. For example, <code>#4B5320</code>.</p>
<p>In the <code>.green</code> class selector, set the <code>background-color</code> property to a hex color code with the values <code>00</code> for red, <code>FF</code> for green, and <code>00</code> blue.</p>
</li>
<li><p>You may already be familiar with decimal, or base 10 values, which go from 0 - 9. Hexadecimal, or base 16 values, go from 0 - 9, then A - F:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, A, B, C, D, E, F</span><br></pre></td></tr></table></figure>

<p>With hex colors, <code>00</code> is 0% of that color, and <code>FF</code> is 100%. So <code>#00FF00</code> translates to 0% red, 100% green, and 0% blue, and is the same as <code>rgb(0, 255, 0)</code>.</p>
<p>Lower the intensity of green by setting the green value of the hex color to <code>7F</code>.</p>
</li>
<li><p>The HSL color model, or hue, saturation, and lightness, is another way to represent colors.</p>
<p>The CSS hsl function accepts 3 values: a number from 0 to 360 for hue, a percentage from 0 to 100 for saturation, and a percentage from 0 to 100 for lightness.</p>
<p>If you imagine a color wheel, the hue red is at 0 degrees, green is at 120 degrees, and blue is at 240 degrees.</p>
<p>Saturation is the intensity of a color from 0%, or gray, to 100% for pure color. You must add the percent sign <code>%</code> to the saturation and lightness values.</p>
<p>Lightness is how bright a color appears, from 0%, or complete black, to 100%, complete white, with 50% being neutral.</p>
<p>In the <code>.blue</code> CSS rule, use the <code>hsl</code> function to change the <code>background-color</code> property to pure blue. Set the hue to <code>240</code>, the saturation to <code>100%</code>, and the lightness to <code>50%</code>.</p>
</li>
<li><p>You’ve learned a few ways to set flat colors in CSS, but you can also use a color transition, or gradient, on an element.</p>
<p>A gradient is when one color transitions into another. The CSS <code>linear-gradient</code> function lets you control the direction of the transition along a line, and which colors are used.</p>
<p>One thing to remember is that the <code>linear-gradient</code> function actually creates an <code>image</code> element, and is usually paired with the <code>background</code> property which can accept an image as a value.</p>
<p>In the <code>.red</code> CSS rule, change the <code>background-color</code> property to <code>background</code>.</p>
</li>
<li><p>The <code>linear-gradient</code> function is very flexible – here is the basic syntax you’ll use in this tutorial:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">linear-gradient(gradientDirection, color1, color2, ...);</span><br></pre></td></tr></table></figure>

<p><code>gradientDirection</code> is the direction of the line used for the transition. <code>color1</code> and <code>color2</code> are color arguments, which are the colors that will be used in the transition itself. These can be any type of color, including color keywords, hex, <code>rgb</code>, or <code>hsl</code>.</p>
<p>Now you’ll apply a red-to-green gradient along a 90 degree line to the first marker.</p>
<p>First, in the <code>.red</code> CSS rule, set the <code>background</code> property to <code>linear-gradient()</code>, and pass it the value <code>90deg</code> as the <code>gradientDirection</code>.</p>
</li>
<li><p>You’ll use the <code>rgb</code> function for the colors of this gradient.</p>
<p>In the <code>linear-gradient</code> function, use the <code>rgb</code> function to set the first color argument to pure red.</p>
</li>
<li><p>You won’t see gradient yet because the <code>linear-gradient</code> function needs at least two color arguments to work.</p>
<p>In the same <code>linear-gradient</code> function, use the <code>rgb</code> function to set the second color argument to pure green.</p>
</li>
<li><p>As you can see, the <code>linear-gradient</code> function produced a smooth red-green gradient. While the <code>linear-gradient</code> function needs a minimum of two color arguments to work, it can accept many color arguments.</p>
<p>Use the <code>rgb</code> function to add pure blue as the third color argument to the <code>linear-gradient</code> function.</p>
</li>
<li><p>Color-stops allow you to fine-tune where colors are placed along the gradient line. They are a length unit like <code>px</code> or percentages that follow a color in the <code>linear-gradient</code> function.</p>
<p>For example, in this red-black gradient, the transition from red to black takes place at the 90% point along the gradient line, so red takes up most of the available space:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">linear-gradient(<span class="number">90deg</span>, red <span class="number">90%</span>, black);</span><br></pre></td></tr></table></figure>

<p>In the <code>linear-gradient</code> function, add a <code>75%</code> color stop after the first red color argument. Do not add color stops to the other colors arguments.</p>
</li>
<li><p>Now that you know the basics of how the <code>linear-gradient</code> function and color-stops work, you can use them to make the markers look more realistic.</p>
<p>In the <code>linear-gradient</code> function, set <code>gradientDirection</code> to <code>180deg</code>.</p>
</li>
<li><p>Next, set the color-stop for red to <code>0%</code>, the color-stop for green to <code>50%</code>, and the color-stop for blue to <code>100%</code>.</p>
</li>
<li><p>Now that the color-stops are set, you’ll apply different shades of red to each color argument in the <code>linear-gradient</code> function. The shades on the top and bottom edges of the marker will be darker, while the one in the middle will be lighter, as if there’s a light above it.</p>
<p>For the first color argument, which is currently pure red, update the <code>rgb</code> function so the value for red is <code>122</code>, the value for green is <code>74</code>, and the value for blue is <code>14</code>.</p>
</li>
<li><p>Now modify the second color argument in the <code>linear-gradient</code> function, which is currently pure green.</p>
<p>Update the <code>rgb</code> function so the value for red is <code>245</code>, the value of green is <code>62</code>, and the value of blue is <code>113</code>.</p>
</li>
<li><p>Finally, modify the third color argument in the <code>linear-gradient</code> function, which is currently pure blue.</p>
<p>Update the <code>rgb</code> function so the value for red is <code>162</code>, the value of green is <code>27</code>, and the value of blue is <code>27</code>.</p>
</li>
<li><p>The red marker is looking much more realistic. Now you’ll do the same for the green marker, using a combination of the <code>linear-gradient</code> function and hex colors.</p>
<p>In the <code>.green</code> CSS rule, change the <code>background-color</code> property to <code>background</code>.</p>
</li>
<li><p>For this marker, you’ll use hex color codes for your gradient.</p>
<p>Use the <code>linear-gradient</code> function and set <code>gradientDirection</code> to <code>180deg</code>. And for the first color argument, use a hex color code with the values <code>55</code> for red, <code>68</code> for green, and <code>0D</code> for blue.</p>
</li>
<li><p>For the second color argument, use a hex color code with the values <code>71</code> for red, <code>F5</code> for green, and <code>3E</code> for blue.</p>
</li>
<li><p>That’s looking better, but the bottom edge of the green marker needs to be darker to add a little more dimension.</p>
<p>In the same <code>linear-gradient</code> function, add a hex color code with the values <code>11</code> for red, <code>6C</code> for green, and <code>31</code> for blue as the third color argument.</p>
</li>
<li><p>Even without the color-stops, you might have noticed that the colors for the green marker transition at the same points as the red marker. The first color is at the start (0%), the second is in the middle (50%), and the last is at the end (100%) of the gradient line.</p>
<p>The <code>linear-gradient</code> function automatically calculates these values for you, and places colors evenly along the gradient line by default.</p>
<p>In the <code>.red</code> CSS rule, remove the three color stops from the <code>linear-gradient</code> function to clean up your code a bit.</p>
</li>
<li><p>If no <code>gradientDirection</code> argument is provided to the <code>linear-gradient</code> function, it arranges colors from top to bottom, or along a 180 degree line, by default.</p>
<p>Clean up your code a little more by removing the <code>gradientDirection</code> argument from both <code>linear-gradient</code> functions.</p>
</li>
<li><p>Now you’ll apply a gradient to the blue marker, this time using the <code>hsl</code> function as color arguments.</p>
<p>In the <code>.blue</code> CSS rule, change the <code>background-color</code> property to <code>background</code>.</p>
</li>
<li><p>Use the <code>linear-gradient</code> function, and pass in the <code>hsl</code> function with the values <code>186</code> for hue, <code>76%</code> for saturation, and <code>16%</code> for lightness as the first color argument.</p>
</li>
<li><p>As the second color argument, pass in the <code>hsl</code> function with the values <code>223</code> for hue, <code>90%</code> for saturation, and <code>60%</code> for lightness.</p>
</li>
<li><p>And as the third color argument, pass in the <code>hsl</code> function with the values <code>240</code> for hue, <code>56%</code> for saturation, and <code>42%</code> for lightness.</p>
</li>
<li><p>Now that the markers have the correct colors, it’s time to build the marker sleeves. Start with the red marker.</p>
<p>Inside the red marker <code>div</code> element, create a new <code>div</code> element and give it a class of <code>sleeve</code>.</p>
</li>
<li><p>Create a new CSS rule that targets the class <code>sleeve</code>. Set the <code>width</code> property to <code>110px</code>, and the <code>height</code> property to <code>25px</code>.</p>
</li>
<li><p>To make the marker look more realistic, give the sleeve a transparent white color.</p>
<p>First, set the sleeve element’s <code>background-color</code> to <code>white</code>.</p>
</li>
<li><p>Opacity describes how opaque, or non-transparent, something is. For example, a solid wall is opaque, and no light can pass through. But a drinking glass is much more transparent, and you can see through the glass to the other side.</p>
<p>With the CSS <code>opacity</code> property, you can control how opaque or transparent an element is. With the value <code>0</code>, or 0%, the element will be completely transparent, and at <code>1.0</code>, or 100%, the element will be completely opaque like it is by default.</p>
<p>In the <code>.sleeve</code> CSS rule, set the <code>opacity</code> property to <code>0.5</code>.</p>
</li>
<li><p>Another way to set the opacity for an element is with the alpha channel. Similar to the <code>opacity</code> property, the alpha channel controls how transparent or opaque a color is.</p>
<p>You’ve already set sleeve’s opacity with a named color and the <code>opacity</code> property, but you can add an alpha channel to the other CSS color properties.</p>
<p>Inside the <code>.sleeve</code> rule, remove the <code>opacity</code> property and value.</p>
</li>
<li><p>You’re already familiar with using the <code>rgb</code> function to set colors. To add an alpha channel to an <code>rgb</code> color, use the <code>rgba</code> function instead.</p>
<p>The <code>rgba</code> function works just like the <code>rgb</code> function, but takes one more number from <code>0</code> to <code>1.0</code> for the alpha channel:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">rgba(redValue, greenValue, blueValue, alphaValue);</span><br></pre></td></tr></table></figure>

<p>You can also use an alpha channel with <code>hsl</code> and <code>hex</code> colors. You will see how to do that soon.</p>
<p>In the <code>.sleeve</code> rule, use the <code>rgba</code> function to set the <code>background-color</code> property to pure white with 50% opacity.</p>
</li>
<li><p>Your sleeve is looking good, but it would look even better if it was positioned more toward the right side of the marker. One way to do that is to add another element before the sleeve to push it to the right.</p>
<p>Add a new <code>div</code> with the class <code>cap</code> before the sleeve <code>div</code> element.</p>
</li>
<li><p>Create a new CSS rule to target the class <code>cap</code>. In the new rule, set the <code>width</code> property to <code>60px</code>, and the <code>height</code> to <code>25px</code>.</p>
</li>
<li><p>It looks like your sleeve disappeared, but don’t worry – it’s still there. What happened is that your new cap <code>div</code> is taking up the entire width of the marker, and is pushing the sleeve down to the next line.</p>
<p>This is because the default <code>display</code> property for <code>div</code> elements is <code>block</code>. So when two <code>block</code> elements are next to each other, they stack like actual blocks. For example, your marker elements are all stacked on top of each other.</p>
<p>To position two <code>div</code> elements on the same line, set their <code>display</code> properties to <code>inline-block</code>.</p>
<p>Create a new rule to target both the <code>cap</code> and <code>sleeve</code> classes, and set <code>display</code> to <code>inline-block</code>.</p>
</li>
<li><p>In the last project, you learned a little bit about borders and the <code>border-color</code> property.</p>
<p>All HTML elements have borders, though they’re usually set to <code>none</code> by default. With CSS, you can control all aspects of an element’s border, and set the border on all sides, or just one side at a time. For a border to be visible, you need to set its width and style.</p>
<p>In the <code>.sleeve</code> CSS rule, add the <code>border-left-width</code> property with the value <code>10px</code>.</p>
</li>
<li><p>Borders have several styles to choose from. You can make your border a solid line, but you can also use a dashed or dotted line if you prefer. Solid border lines are probably the most common.</p>
<p>In the <code>.sleeve</code> CSS rule, add the <code>border-left-style</code> property with the value <code>solid</code>.</p>
</li>
<li><p>Your border should be visible now. If no color is set, black is used by default.</p>
<p>But to make your code more readable, it’s better to set the border color explicitly.</p>
<p>In the <code>.sleeve</code> CSS rule, add the <code>border-left-color</code> property with the value <code>black</code>.</p>
</li>
<li><p>The <code>border-left</code> shorthand property lets you to set the left border’s width, style, and color at the same time.</p>
<p>Here is the syntax:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-left</span>: width style color;</span><br></pre></td></tr></table></figure>

<p>In the <code>.sleeve</code> CSS rule, replace the <code>border-left-width</code>, <code>border-left-style</code>, and <code>border-left-color</code> properties with the <code>border-left</code> shorthand property. The values for the width, style, and color of the left border should be the same.</p>
</li>
<li><p>Your marker is looking good. But to make it look even more realistic, you can change the border style to double solid borders.</p>
<p>For the <code>border-left</code> shorthand property, change the border style value from <code>solid</code> to <code>double</code>.</p>
</li>
<li><p>The black color of your border looks pretty harsh against the more transparent sleeve. You can use an alpha channel to lower the opacity of the black border.</p>
<p>For the <code>border-left</code> shorthand property, use the <code>rgba</code> function to set the color value to pure black with 75% opacity.</p>
</li>
<li><p>Awesome. Your red marker is looking good. Now all you need to do is add the caps and sleeves to your other markers.</p>
<p>Add a cap and sleeve to both the green and blue markers. You can just copy the <code>div</code> elements from the red marker and paste them into the other two markers.</p>
</li>
<li><p>The last thing you’ll do is add a slight shadow to each marker to make them look even more realistic.</p>
<p>The <code>box-shadow</code> property lets you apply one or more shadows around an element. Here is basic syntax:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: offsetX offsetY color;</span><br></pre></td></tr></table></figure>

<p>Here’s how the <code>offsetX</code> and <code>offsetY</code> values work:</p>
<ul>
<li>both <code>offsetX</code> and <code>offsetY</code> accept number values in <code>px</code> and other CSS units</li>
<li>a positive <code>offsetX</code> value moves the shadow right and a negative value moves it left</li>
<li>a positive <code>offsetY</code> value moves the shadow down and a negative value moves it up</li>
<li>if you want a value of zero (<code>0</code>) for any or both <code>offsetX</code> and <code>offsetY</code>, you don’t need to add a unit. Every browser understands that zero means no change.</li>
</ul>
<p>The height and width of the shadow is determined by the height and width of the element it’s applied to. You can also use an optional <code>spreadRadius</code> value to spread out the reach of the shadow. More on that later.</p>
<p>Start by adding a simple shadow to the red marker.</p>
<p>In the <code>.red</code> CSS rule, add the <code>box-shadow</code> property with the values <code>5px</code> for <code>offsetX</code>, <code>5px</code> for <code>offsetY</code>, and <code>red</code> for <code>color</code>.</p>
</li>
<li><p>As you can see, you added a simple red shadow around your marker that’s 5 pixels to the right, and 5 pixels down.</p>
<p>But what if you wanted to position your shadow on the opposite side? You can do that by using negative values for <code>offsetX</code> and <code>offsetY</code>.</p>
<p>Update the values for the <code>box-shadow</code> property, and set <code>offsetX</code> to <code>-5px</code>, and <code>offsetY</code> to <code>-5px</code>.</p>
</li>
<li><p>Notice that the edges of the shadow are sharp. This is because there is an optional <code>blurRadius</code> value for the <code>box-shadow</code> property:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: offsetX offsetY blurRadius color;</span><br></pre></td></tr></table></figure>

<p>If a <code>blurRadius</code> value isn’t included, it defaults to <code>0</code> and produces sharp edges. The higher the value of <code>blurRadius</code>, the greater the blurring effect is.</p>
<p>In the <code>.green</code> CSS rule, add the <code>box-shadow</code> property with the values <code>5px</code> for <code>offsetX</code>, <code>5px</code> for <code>offsetY</code>, <code>5px</code> for <code>blurRadius</code>, and <code>green</code> for <code>color</code>.</p>
</li>
<li><p>But what if you wanted to expand the shadow out further? You can do that with the optional <code>spreadRadius</code> value:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: offsetX offsetY blurRadius spreadRadius color;</span><br></pre></td></tr></table></figure>

<p>Like <code>blurRadius</code>, <code>spreadRadius</code> defaults to <code>0</code> if it isn’t included.</p>
<p>Practice by adding a 5 pixel shadow directly around the blue marker.</p>
<p>In the <code>.blue</code> CSS rule, add the <code>box-shadow</code> property with the values <code>0</code> for <code>offsetX</code>, <code>0</code> for <code>offsetY</code>, <code>0</code> for <code>blurRadius</code>, <code>5px</code> for <code>spreadRadius</code>, and <code>blue</code> for <code>color</code>.</p>
</li>
<li><p>Now that you’re familiar with the <code>box-shadow</code> property you can finalize the shadows, starting with the one for the red marker.</p>
<p>In the <code>.red</code> CSS rule, update the values for the <code>box-shadow</code> property so <code>offsetX</code> is <code>0</code>,<code>offsetY</code> is <code>0</code>, <code>blurRadius</code> is <code>20px</code>, <code>spreadRadius</code> is <code>0</code>, and <code>color</code> is <code>red</code>. Remember that you don’t need to add units to a zero value.</p>
</li>
<li><p>Next, update the <code>color</code> value of the red marker’s <code>box-shadow</code> property.</p>
<p>Replace the named color with the <code>rgba</code> function. Use the values <code>83</code> for red, <code>14</code> for green, <code>14</code> for blue and <code>0.8</code> for the alpha channel.</p>
</li>
<li><p>The shadows for your green and blue markers will have the same position, blur, and spread. The only difference will be the colors.</p>
<p>In the <code>.green</code> and <code>.blue</code> CSS rules, update the values for the <code>box-shadow</code> properties so <code>offsetX</code> is <code>0</code>,<code>offsetY</code> is <code>0</code>, <code>blurRadius</code> is <code>20px</code>, and <code>spreadRadius</code> is <code>0</code>. Leave the colors as <code>green</code> and <code>blue</code> for now.</p>
</li>
<li><p>For the green marker’s <code>box-shadow</code> property, replace the named color with a hex color code. Use the values <code>3B</code> for red, <code>7E</code> for green, <code>20</code> for blue, and <code>CC</code> for the alpha channel.</p>
</li>
<li><p>Finally, for the blue marker’s <code>box-shadow</code> property, replace the named color with the <code>hsla</code> function. Use the values <code>223</code> for hue, <code>59%</code> for saturation, <code>31%</code> for lightness, and <code>0.8</code> for the alpha channel.</p>
<p>And with that, your set of colored markers is complete! Well done.</p>
</li>
<li><p>```html</p>
<!DOCTYPE html>
<html lang="en"> 
    <head>
        <title>Colored Markers</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta charset="utf-8">
        <link rel="stylesheet" href="styles.css">     
    </head>

<pre><code>&lt;body&gt;
    &lt;h1&gt;CSS Color Markers&lt;/h1&gt;
    &lt;div class=&quot;container&quot;&gt;
        &lt;div class=&quot;marker red&quot;&gt; 
            &lt;div class=&quot;cap&quot;&gt;&lt;/div&gt;
            &lt;div class=&quot;sleeve&quot;&gt;&lt;/div&gt;
        &lt;/div&gt; 
        &lt;div class=&quot;marker green&quot;&gt; 
            &lt;div class=&quot;cap&quot;&gt;&lt;/div&gt;
            &lt;div class=&quot;sleeve&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;marker blue&quot;&gt;               
            &lt;div class=&quot;cap&quot;&gt;&lt;/div&gt;
            &lt;div class=&quot;sleeve&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

&lt;/body&gt;
</code></pre>
</html>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">```css</span><br><span class="line">h1 &#123;</span><br><span class="line">  text-align:center; </span><br><span class="line">  /*background-color:rgb(0,255,255);*/</span><br><span class="line">&#125; </span><br><span class="line">.container&#123;</span><br><span class="line">  background-color:rgb(255,255,255); </span><br><span class="line">  padding:10px 0;</span><br><span class="line">&#125;</span><br><span class="line">.marker &#123;</span><br><span class="line">  /* background-color:red;*/ </span><br><span class="line">  height:25px;</span><br><span class="line">  width:200px; </span><br><span class="line">  margin:10px auto;</span><br><span class="line">&#125;  </span><br><span class="line">.cap&#123;</span><br><span class="line">  width:60px;</span><br><span class="line">  height:25px;</span><br><span class="line">&#125;</span><br><span class="line">.sleeve&#123;</span><br><span class="line">  width: 110px;</span><br><span class="line">  height: 25px;</span><br><span class="line">  background-color: rgba(255, 255, 255, 0.5);</span><br><span class="line">  border-left: 10px double rgba(0, 0, 0, 0.75);</span><br><span class="line">&#125; </span><br><span class="line">.cap,</span><br><span class="line">.sleeve&#123;</span><br><span class="line">  display:inline-block;</span><br><span class="line">&#125;</span><br><span class="line">.red&#123;</span><br><span class="line">  /*background-color:rgb(255,127,0);*/</span><br><span class="line">  background: linear-gradient(rgb(122, 74, 14), rgb(245, 62, 113), rgb(162, 27, 27));</span><br><span class="line">  box-shadow: 0 0 20px 0 rgba(83, 14, 14, 0.8);</span><br><span class="line">&#125; </span><br><span class="line">.green&#123;</span><br><span class="line">  background: linear-gradient(180deg, #55680D, #71F53E,#116C31);</span><br><span class="line">  box-shadow: 0 0 20px 0 #3B7E20CC;</span><br><span class="line">&#125;</span><br><span class="line">.blue&#123;</span><br><span class="line">  background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%),hsl(240, 56%, 42%));</span><br><span class="line">  box-shadow: 0 0 20px 0 hsla(223,59%,31%,0.8);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>CSS,color</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(四)</title>
    <url>/responsive-web-dedign-%E5%9B%9B/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-HTML-Forms-by-Building-a-Registration-Form"><a href="#Learn-HTML-Forms-by-Building-a-Registration-Form" class="headerlink" title="Learn HTML Forms by Building a Registration Form"></a>Learn HTML Forms by Building a Registration Form</h4><span id="more"></span>

<ol>
<li><p>Welcome to the Registration Form project! Start by adding the declaration at the top of the document so the browser knows what type of document it’s reading.<code>!DOCTYPE html</code></p>
</li>
<li><p>Below the <code>DOCTYPE</code>, add an <code>html</code> element with a <code>lang</code> attribute set to <code>en</code>, so that you have a place to start putting some code.</p>
</li>
<li><p>Next, add opening and closing <code>head</code> and <code>body</code> tags within the <code>html</code> element.</p>
</li>
<li><p>Add a <code>title</code> and a <code>meta</code> element to the <code>head</code>. Give your project a title of <code>Registration Form</code>, and give a <code>charset</code> attribute with a value of <code>UTF-8</code> to your <code>meta</code> element.</p>
</li>
<li><p>Nest a self-closing <code>link</code> element within the <code>head</code> element. Give it a <code>rel</code> attribute with value of <code>stylesheet</code> and an <code>href</code> attribute with a value of <code>styles.css</code>.</p>
</li>
<li><p>Within the <code>body</code>, provide a heading context for the content, by adding an <code>h1</code> with the text <code>Registration Form</code>.</p>
</li>
<li><p>Below the heading, use the following text within a paragraph element to encourage users to register:</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">Please fill out this form with the required information</span><br></pre></td></tr></table></figure></li>
<li><p>The <code>vh</code> unit stands for viewport height, and is relative to 1% of the <code>height</code> of the viewport.</p>
<p>It is time to spruce the project up with some CSS. Begin by giving the <code>body</code> a <code>width</code> of <code>100%</code>, and a <code>height</code> of <code>100vh</code>.</p>
</li>
<li><p>Now, get rid of the horizontal scroll-bar, by setting the <code>body</code> default <code>margin</code> added by some browsers to <code>0</code>.</p>
</li>
<li><p>That is better. Now, make the background easy on the eyes, by changing the <code>body</code> <code>background-color</code> to <code>#1b1b32</code>. Then, to see the text, change the <code>color</code> to <code>#f5f6f7</code>.</p>
</li>
<li><p>As suggested by the title, you are creating a form. So, after the <code>p</code> element, insert a <code>form</code> with an <code>action</code> attribute targeting <code>https://register-demo.freecodecamp.org</code>.</p>
</li>
<li><p>The <code>method</code> attribute specifies how to send form-data to the URL specified in the <code>action</code> attribute. The form-data can be sent via a <code>GET</code> request as URL parameters (with <code>method=&quot;get&quot;</code>) or via a <code>POST</code> request as data in the request body (with <code>method=&quot;post&quot;</code>).</p>
<p>Set the <code>method</code> attribute to send your form data via a <code>POST</code> request.</p>
</li>
<li><p>As the form will have three distinct sections, add three <code>fieldset</code> elements within the <code>form</code> element.</p>
</li>
<li><p>The first <code>fieldset</code> will hold name, email, and password fields. Start by adding four <code>label</code> elements to the first <code>fieldset</code>.</p>
</li>
<li><p>Add the following text to the <code>label</code> elements:</p>
<ul>
<li><code>Enter Your First Name:</code></li>
<li><code>Enter Your Last Name:</code></li>
<li><code>Enter Your Email:</code></li>
<li><code>Create a New Password:</code></li>
</ul>
</li>
<li><p>The <code>rem</code> unit stands for root <code>em</code>, and is relative to the font size of the <code>html</code> element.</p>
<p>As <code>label</code> elements are inline by default, they are all displayed side by side on the same line, making their text hard to read. To make them appear on separate lines, add <code>display: block</code> to the <code>label</code> element, and add a <code>margin</code> of <code>0.5rem 0</code>, to separate them from each other.</p>
</li>
<li><p>Nest an <code>input</code> element within each <code>label</code>. Be sure to add each <code>input</code> after the <code>label</code> text, and include a space after the colon.</p>
</li>
<li><p>Following accessibility best practices, link the <code>input</code> elements and the <code>label</code> elements together using the <code>for</code> attribute.</p>
<p>Use <code>first-name</code>, <code>last-name</code>, <code>email</code>, and <code>new-password</code> as values for the respective <code>id</code> attributes.</p>
</li>
<li><p>Specifying the <code>type</code> attribute of a form element is important for the browser to know what kind of data it should expect. If the <code>type</code> is not specified, the browser will default to <code>text</code>.</p>
<p>Give the first two <code>input</code> elements a <code>type</code> attribute of <code>text</code>, the third a <code>type</code> attribute of <code>email</code>, and the fourth a <code>type</code> attribute of <code>password</code>.</p>
<p>The <code>email</code> type only allows emails with a <code>@</code> and a <code>.</code> in the domain. The <code>password</code> type obscures the input, and warns if the site does not use HTTPS.</p>
</li>
<li><p>The first <code>input</code> element with a <code>type</code> of <code>submit</code> is automatically set to submit its nearest parent <code>form</code> element.</p>
<p>To handle the form submission, after the last <code>fieldset</code> element add an <code>input</code> element with the <code>type</code> attribute set to <code>submit</code> and the <code>value</code> attribute set to <code>Submit</code>.</p>
</li>
<li><p>At this point, you should be able to submit the form. However, you might notice not much happens.</p>
<p>To make the form more interactive, add the <code>required</code> attribute to the <code>input</code> elements in the first <code>fieldset</code>.</p>
<p>Now, if you try to submit the form without filling in the required fields, you will see an error message.</p>
</li>
<li><p>Certain <code>type</code> attribute values come with built-in form validation. For example, <code>type=&quot;email&quot;</code> requires that the value be a valid email address.</p>
<p>Add custom validation to the password <code>input</code> element, by adding a <code>minlength</code> attribute with a value of <code>8</code>. Doing so prevents inputs of less than 8 characters being submitted.</p>
</li>
<li><p>With <code>type=&quot;password&quot;</code> you can use the <code>pattern</code> attribute to define a regular expression that the password must match to be considered valid.</p>
<p>Add a <code>pattern</code> attribute to the password <code>input</code> element to require the input match: <code>[a-z0-5]&#123;8,&#125;</code></p>
<p>The above is a regular expression which matches eight or more lowercase letters or the digits <code>0</code> to <code>5</code>. Then, remove the <code>minlength</code> attribute, and try it out.</p>
</li>
<li><p>Let us go to the next part of the registration form. This section will ask for the type of account the user is opening, and will confirm the user has read the terms and conditions.</p>
<p>Start by adding three <code>label</code> elements to the second <code>fieldset</code>.</p>
</li>
<li><p>Users will be allowed to choose either a <code>Personal Account</code> or <code>Business Account</code>.</p>
<p>To do this, within each of the first two <code>label</code> elements, add one <code>input</code> element with <code>type=&quot;radio&quot;</code>.</p>
</li>
<li><p>For the terms and conditions, add an <code>input</code> with a <code>type</code> of <code>checkbox</code> to the third <code>label</code> element. Make this <code>input</code> element <code>required</code> because users should not sign up without reading the terms and conditions.</p>
</li>
<li><p>Within each corresponding <code>label</code> element, and immediately after the <code>input</code> element, add a space and add the following text:</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">Personal Account</span><br><span class="line">Business Account</span><br><span class="line">I accept the terms and conditions</span><br></pre></td></tr></table></figure></li>
<li><p>You only want one radio input to be selectable at a time. However, the form does not know the radio inputs are related.</p>
<p>To relate the radio inputs, give them the same <code>name</code> attribute with a value of <code>account-type</code>. Now, it is not possible to select both radio inputs at the same time.</p>
</li>
<li><p>Follow accessibility best practices by linking the <code>input</code> elements and the <code>label</code> elements in the second <code>fieldset</code>.</p>
<p>Use <code>personal-account</code>, <code>business-account</code>, and <code>terms-and-conditions</code> as values for the respective <code>id</code> attributes.</p>
</li>
<li><p>To finish this <code>fieldset</code> off, link the text <code>terms and conditions</code> in the third <code>label</code> to the following location:</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">https://www.freecodecamp.org/news/terms-of-service/</span><br></pre></td></tr></table></figure></li>
<li><p>Moving on to the final <code>fieldset</code>. What if you wanted to allow a user to upload a profile picture?</p>
<p>Well, the <code>input</code> type <code>file</code> allows just that. Add a <code>label</code> with the text <code>Upload a profile picture:</code> , and nest an <code>input</code> accepting a file upload.</p>
</li>
<li><p>Add another <code>label</code> after the first, with the text <code>Input your age (years):</code> . Then, nest an <code>input</code> with the <code>type</code> of <code>number</code>.</p>
<p>Next, add a <code>min</code> attribute to the <code>input</code> with a value of <code>13</code> because users under the age of 13 should not register. Also, users probably will not be over the age of 120; add a <code>max</code> attribute with a value of <code>120</code>.</p>
<p>Now, if someone tries to submit the form with values outside of the range, a warning will appear, and the form will not submit. Give it a try.</p>
</li>
<li><p>Adding a dropdown to the form is easy with the <code>select</code> element. The <code>select</code> element is a container for a group of <code>option</code> elements, and the <code>option</code> element acts as a label for each dropdown option. Both elements require closing tags.</p>
<p>Start by adding a <code>select</code> element below the two <code>label</code> elements. Then nest 5 <code>option</code> elements within the <code>select</code> element.</p>
</li>
<li><p>Nest the <code>select</code> element (with its <code>option</code> elements) within a <code>label</code> element with the text <code>How did you hear about us?</code>. The text should come before the <code>select</code> element.</p>
</li>
<li><p>The dropdown options are currently empty. To give them content, add the following text to each subsequent <code>option</code> element:</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">(select one)</span><br><span class="line">freeCodeCamp News</span><br><span class="line">freeCodeCamp YouTube Channel</span><br><span class="line">freeCodeCamp Forum</span><br><span class="line">Other</span><br></pre></td></tr></table></figure></li>
<li><p>Submitting the form with an option selected would not send a useful value to the server. As such, each <code>option</code> needs to be given a <code>value</code> attribute. Without which, the text content of the <code>option</code> will be submitted to the server.</p>
<p>Give the first <code>option</code> a <code>value</code> of <code>&quot;&quot;</code>, and the subsequent <code>option</code> elements <code>value</code> attributes from <code>1</code> to <code>4</code>.</p>
</li>
<li><p>The <code>textarea</code> element acts like an <code>input</code> element of type <code>text</code>, but comes with the added benefit of being able to receive multi-line text, and an initial number of text rows and columns.</p>
<p>Users will be able to register with a bio. Add a <code>label</code> with the text <code>Provide a bio:</code> at the end of the <code>fieldset</code>. Add a <code>textarea</code> element inside the <code>label</code> element. Note that the <code>textarea</code> requires a closing tag.</p>
</li>
<li><p>Link the applicable form elements and their <code>label</code> elements together.</p>
<p>Use <code>profile-picture</code>, <code>age</code>, <code>referrer</code>, and <code>bio</code> as values for the respective <code>id</code> attributes.</p>
</li>
<li><p>The <code>textarea</code> appears too small. To give it an initial size, you can add the <code>rows</code> and <code>cols</code> attributes.</p>
<p>Add an initial size of <code>3</code> rows and <code>30</code> columns.</p>
</li>
<li><p>To give Campers an idea of what to put in their bio, the <code>placeholder</code> attribute is used. The <code>placeholder</code> accepts a text value, which is displayed until the user starts typing.</p>
<p>Give the <code>textarea</code> a <code>placeholder</code> of <code>I like coding on the beach...</code>.</p>
</li>
<li><p>With form submissions, it is useful, and good practice, to provide each submittable element with a <code>name</code> attribute. This attribute is used to identify the element in the form submission.</p>
<p>Give each submittable element a unique <code>name</code> attribute of your choosing, except for the two <code>radio</code> inputs.</p>
</li>
<li><p>The HTML for the registration form is finished. Now, you can spruce it up a bit.</p>
<p>Start by changing the font to <code>Tahoma</code>, and the font size to <code>16px</code> in the <code>body</code>.</p>
</li>
<li><p>Center the <code>h1</code> and <code>p</code> elements by giving them a <code>margin</code> of <code>1em auto</code>. Then, align their text in the <code>center</code> as well.</p>
</li>
<li><p>Center the <code>form</code> element, by giving it a <code>margin</code> of <code>0 auto</code>. Then, fix its size to a maximum width of <code>500px</code>, and a minimum width of <code>300px</code>. In between that range, allow it to have a <code>width</code> of <code>60vw</code>.</p>
</li>
<li><p>During development, it is useful to see the <code>fieldset</code> default borders. However, they make the content appear too separated.</p>
<p>Remove the <code>border</code>, and add <code>2rem</code> of padding only to the top and bottom of each <code>fieldset</code>. Be sure to remove the <code>padding</code> from the left and right.</p>
</li>
<li><p>To give the <code>fieldset</code> elements a bit of separation, select them and give them a <code>border-bottom</code> of <code>3px solid #3b3b4f</code>.</p>
</li>
<li><p>The border of the last <code>fieldset</code> element looks a little out of place. You can select the last element of a specific type using the <code>last-of-type</code> CSS pseudo-class, like this:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:last-of-type</span> &#123; &#125;</span><br></pre></td></tr></table></figure>

<p>That will select the last <code>p</code> element. Create a new selector that targets the last <code>fieldset</code> element and set its <code>border-bottom</code> to <code>none</code>.</p>
</li>
<li><p>It would be nicer to have the <code>label</code> text appear above the form elements.</p>
<p>Select all <code>input</code>, <code>textarea</code>, and <code>select</code> elements, and make them take up the full width of their parent elements.</p>
<p>Also, add <code>10px</code> of <code>margin</code> to the top of the selected elements. Set the other margins to <code>0</code>.</p>
</li>
<li><p>For the second <code>fieldset</code>, you want the <code>input</code> and <code>label</code> text to appear on the same line.</p>
<p>Start, by giving the <code>input</code> elements in the second <code>fieldset</code> a class of <code>inline</code>.</p>
</li>
<li><p>Select only the <code>.inline</code> elements, and give them <code>width</code> of <code>unset</code>. This will remove the earlier rule which set all the <code>input</code> elements to <code>width: 100%</code>.</p>
</li>
<li><p>Add some space between the <code>.inline</code> elements and the <code>label</code> text, by giving a right <code>margin</code> of <code>0.5em</code>. Also, set all the other margin to <code>0</code>.</p>
</li>
<li><p>If you look close enough, you will notice the <code>.inline</code> elements are too high on the line.</p>
<p>To combat this, set the <code>vertical-align</code> property to <code>middle</code>.</p>
</li>
<li><p>To make the <code>input</code> and <code>textarea</code> elements blend in with the background theme, set their <code>background-color</code> to <code>#0a0a23</code>. Then, give them a <code>1px</code>, <code>solid</code> border with a color of <code>#0a0a23</code>.</p>
</li>
<li><p>Currently, if you type in the <code>input</code> or <code>textarea</code> elements, you will not be able to see the text. Also, their height is too small to be easy to use.</p>
<p>Fix this, by setting the <code>color</code> to <code>#ffffff</code>, and setting their <code>min-height</code> to <code>2em</code>.</p>
</li>
<li><p>You want the <code>select</code> element to remain with a white background, but now it is not getting the same <code>min-height</code> as the <code>input</code> and <code>textarea</code> elements.</p>
<p>Move the <code>min-height</code> property and value so that all three element types have the same <code>min-height</code> value, and the <code>select</code> element still has a white background.</p>
</li>
<li><p>To style the submit button, you can use an <em>attribute</em> selector, which selects an element based on the given attribute value. Here is an example:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[name=<span class="string">&quot;password&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<p>The above selects <code>input</code> elements with a <code>name</code> attribute value of <code>password</code>.</p>
<p>Now, use the attribute selector to style the submit button with a <code>display</code> of <code>block</code>, and a <code>width</code> of <code>60%</code>.</p>
</li>
<li><p>With a <code>display</code> of <code>block</code> the submit button sits flush against the left edge of its parent.</p>
<p>Use the same technique used to center the <code>form</code> to center the submit button.</p>
</li>
<li><p>To make the submit button look more in line with the rest of the form, give it the same <code>height</code> as the other fields (<code>2em</code>). Also, increase the <code>font-size</code> to <code>1.1rem</code>.</p>
</li>
<li><p>To make the submit button appear more distinct, give it a <code>background-color</code> of <code>#3b3b4f</code>, and a <code>border-color</code> of <code>white</code>.</p>
</li>
<li><p>Lastly, for the submit button, you want to separate it from the <code>fieldset</code> above, and adjust its width to never be below <code>300px</code>.</p>
<p>Change the <code>margin</code> property to include <code>1em</code> on the top and bottom, while leaving the right and left margins set to <code>auto</code>. Then set the width as described above.</p>
</li>
<li><p>Most browsers inject their own default CSS properties and values for different elements. If you look closely, you might be able to notice the file <code>input</code> is smaller than the other text <code>input</code> elements. By default, a <code>padding</code> of <code>1px 2px</code> is given to <code>input</code> elements you can type in.</p>
<p>Using another attribute selector, style the <code>input</code> with a <code>type</code> of <code>file</code> to be the same padding as the other <code>input</code> elements.</p>
</li>
<li><p>Speaking of <code>padding</code>, the submit button is sitting at the bottom of the <code>form</code> element. Add <code>2em</code> of <code>padding</code> only to the bottom of the <code>form</code>.</p>
</li>
<li><p>Last, but not least, change the text color of the <code>terms and conditions</code> link to <code>#dfdfe2</code>.</p>
<p>Well done! You have completed the final part of the <em>Registration Form</em> practice project.</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Registration Form<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Registration Form<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Please fill out this form with the required information<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&#x27;https://register-demo.freecodecamp.org&#x27;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;first-name&quot;</span>&gt;</span>Enter Your First Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;first-name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;first-name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">required</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;last-name&quot;</span>&gt;</span>Enter Your Last Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;last-name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;last-name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">required</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span>&gt;</span>Enter Your Email: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">required</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;new-password&quot;</span>&gt;</span>Create a New Password: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;new-password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;new-password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;[a-z0-5]&#123;8,&#125;&quot;</span> <span class="attr">required</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;personal-account&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;personal-account&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account-type&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inline&quot;</span> /&gt;</span> Personal Account<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;business-account&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;business-account&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account-type&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inline&quot;</span> /&gt;</span> Business Account<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;terms-and-conditions&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;terms-and-conditions&quot;</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">required</span> <span class="attr">name</span>=<span class="string">&quot;terms-and-conditions&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inline&quot;</span> /&gt;</span> I accept the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.freecodecamp.org/news/terms-of-service/&quot;</span>&gt;</span>terms and conditions<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;profile-picture&quot;</span>&gt;</span>Upload a profile picture: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;profile-picture&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;age&quot;</span>&gt;</span>Input your age (years): <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">min</span>=<span class="string">&quot;13&quot;</span> <span class="attr">max</span>=<span class="string">&quot;120&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;referrer&quot;</span>&gt;</span>How did you hear about us?</span><br><span class="line">          <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>(select one)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>freeCodeCamp News<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>freeCodeCamp YouTube Channel<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>freeCodeCamp Forum<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>Other<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;bio&quot;</span>&gt;</span>Provide a bio:</span><br><span class="line">          <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;bio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;bio&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;I like coding on the beach...&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#1b1b32</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f5f6f7</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Tahoma;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">1em</span> auto;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">form</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60vw</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto; </span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2rem</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">3px</span> solid <span class="number">#3b3b4f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">fieldset</span><span class="selector-pseudo">:last-of-type</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.5rem</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-tag">textarea</span>,</span><br><span class="line">select &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>, <span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#0a0a23</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#0a0a23</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inline</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: unset;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0.5em</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#3b3b4f</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: white;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">1em</span> auto;</span><br><span class="line">  <span class="attribute">min-width</span>:<span class="number">300px</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;file&quot;</span>]</span>&#123;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">1px</span> <span class="number">2px</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#dfdfe2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(六)</title>
    <url>/responsive-web-dedign-%E5%85%AD/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-CSS-Flexbox-by-Building-a-Photo-Gallery"><a href="#Learn-CSS-Flexbox-by-Building-a-Photo-Gallery" class="headerlink" title="Learn CSS Flexbox by Building a Photo Gallery"></a>Learn CSS Flexbox by Building a Photo Gallery</h4><span id="more"></span>

<ol>
<li><p>Begin with your standard HTML boilerplate. Add a <code>DOCTYPE</code> declaration, an <code>html</code> element, a <code>head</code> element, and a <code>body</code> element.</p>
<p>Add the <code>lang</code> attribute to the opening <code>&lt;html&gt;</code> tag with <code>en</code> set as the value.</p>
</li>
<li><p>Within your <code>head</code> element, add a <code>meta</code> tag with the <code>name</code> set to <code>viewport</code> and the <code>content</code> set to <code>width=device-width, initial-scale=1</code>.</p>
<p>Also add a <code>meta</code> tag with the <code>charset</code> set to <code>UTF-8</code>.</p>
</li>
<li><p>Within your <code>head</code> element, add a <code>title</code> element with the text set to <code>Photo Gallery</code>, and a <code>link</code> element to add your <code>styles.css</code> file to the page.</p>
</li>
<li><p>Add a <code>header</code> element within the <code>body</code> element and assign a class of <code>header</code> to it.</p>
<p>Inside the <code>header</code>, create an <code>h1</code> with <code>css flexbox photo gallery</code> as the text.</p>
</li>
<li><p>Below your <code>.header</code> element, create a new <code>div</code> element and assign it a <code>class</code> of <code>gallery</code>. This <code>div</code> will act as a container for the gallery images.</p>
<p>Inside that <code>.gallery</code> element, create nine <code>img</code> elements.</p>
</li>
<li><p>Next, give each <code>img</code> a <code>src</code> attribute according to its order in the document. The first <code>img</code> should have a <code>src</code> of <code>https://cdn.freecodecamp.org/curriculum/css-photo-gallery/1.jpg</code>. The rest should be the same, except replace the <code>1</code> with the number the <code>img</code> is in the document.</p>
</li>
<li><p>Normalize your box model by creating a <code>*</code> selector and setting the <code>box-sizing</code> property to <code>border-box</code> as the value.</p>
</li>
<li><p>Your images are too big. Create a <code>.gallery img</code> selector to target them. Give them all a <code>width</code> of <code>100%</code> and a <code>max-width</code> of <code>350px</code> so they shrink as needed but don’t get too big.</p>
<p>Also set the <code>height</code> property to <code>300px</code> to keep your images a uniform size.</p>
</li>
<li><p>Remove the margin from your <code>body</code> element, set the <code>font-family</code> to <code>sans-serif</code>, and give it a <code>background-color</code> of <code>#f5f6f7</code> as the value.</p>
</li>
<li><p>Align your <code>.header</code> text in the center. Make the text uppercase using the <code>text-transform</code> property with <code>uppercase</code> as the value.</p>
<p>Give it a padding of <code>32px</code> on all sides. Set the background to <code>#0a0a23</code> and the text to <code>#fff</code> as the color values.</p>
<p>Add a <code>border-bottom</code> with <code>4px solid #fdb347</code> as the value.</p>
</li>
<li><p>Flexbox is a one-dimensional CSS layout that can control the way items are spaced out and aligned within a container.</p>
<p>To use it, give an element a <code>display</code> property of <code>flex</code>. This will make the element a <em>flex container</em>. Any direct children of a flex container are called <em>flex items</em>.</p>
<p>Create a <code>.gallery</code> selector and make it a flex container.</p>
</li>
<li><p>Flexbox has a main and cross axis. The main axis is defined by the <code>flex-direction</code> property, which has four possible values:</p>
<ul>
<li><code>row</code> (default): horizontal axis with flex items from left to right</li>
<li><code>row-reverse</code>: horizontal axis with flex items from right to left</li>
<li><code>column</code>: vertical axis with flex items from top to bottom</li>
<li><code>column-reverse</code>: vertical axis with flex items from bottom to top</li>
</ul>
<blockquote>
<p>The axes and directions will be different depending on the text direction. The values shown are for a left-to-right text direction.</p>
<p>Try the different values to see how they affect the layout.</p>
<p>When you are done, set an explicit <code>flex-direction</code> of <code>row</code> on the <code>.gallery</code> element.</p>
</blockquote>
</li>
<li><p>The <code>flex-wrap</code> property determines how your flex items behave when the flex container is too small. Setting it to <code>wrap</code> will allow the items to wrap to the next row or column. <code>nowrap</code> (default) will prevent your items from wrapping and shrink them if needed.</p>
<p>Make it so your flex items wrap to the next row when they run out of space.</p>
</li>
<li><p>The <code>justify-content</code> property determines how the items inside a flex container are positioned along the main axis, affecting their position and the space around them.</p>
<p>Give your <code>.gallery</code> selector a <code>justify-content</code> property with <code>center</code> as the value.</p>
</li>
<li><p>The <code>align-items</code> property positions the flex content along the cross axis. In this case, with your <code>flex-direction</code> set to <code>row</code>, your cross axis would be vertical.</p>
<p>To vertically center your images, give your <code>.gallery</code> selector an <code>align-items</code> property with <code>center</code> as the value.</p>
</li>
<li><p>Give your <code>.gallery</code> selector a <code>padding</code> property set to <code>20px 10px</code> to create some space around the container.</p>
<p>Then, give it a <code>max-width</code> of <code>1400px</code> and add a <code>margin</code> of <code>0 auto</code> to center it.</p>
</li>
<li><p>Notice how some of your images have become distorted. This is because the images have different aspect ratios. Rather than setting each aspect ratio individually, you can use the <code>object-fit</code> property to determine how images should behave.</p>
<p>Give your <code>.gallery img</code> selector the <code>object-fit</code> property and set it to <code>cover</code>. This will tell the image to fill the <code>img</code> container while maintaining aspect ratio, resulting in cropping to fit.</p>
</li>
<li><p>Your images need some space between them.</p>
<p>The <code>gap</code> CSS shorthand property sets the gaps, also knowns as gutters, between rows and columns. The <code>gap</code> property and its <code>row-gap</code> and <code>column-gap</code> sub-properties provide this functionality for flex, grid, and multi-column layout. You apply the property to the container element.</p>
<p>Give your <code>.gallery</code> flex container a <code>gap</code> property with <code>16px</code> as the value.</p>
</li>
<li><p>Smooth out your images a bit by giving the <code>.gallery img</code> selector a <code>border-radius</code> property with <code>10px</code> set as the value.</p>
</li>
<li><p>The <code>::after</code> pseudo-element creates an element that is the last child of the selected element. You can use it to add an empty element after the last image. If you give it the same <code>width</code> as the images it will push the last image to the left when the gallery is in a two-column layout. Right now, it is in the center because you set <code>justify-content: center</code> on the flex container.</p>
<p>Example:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">860px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Create a new selector using an <code>::after</code> pseudo-element on the <code>.gallery</code> element. Add a <code>content</code> property set to an empty string <code>&quot;&quot;</code> and <code>350px</code> set for the <code>width</code> property.</p>
</li>
<li><p>The <code>alt</code> image attribute should describe the image content. Screen readers announce the alternative text in place of images. If the image can’t be loaded, this text is presented in place of the image.</p>
<p>To complete the project, add an <code>alt</code> attribute to all nine of your cat images to describe them. Use a value at least five characters long for each.</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Photo Gallery<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>css flexbox photo gallery<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery&quot;</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/1.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/2.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/3.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/4.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/5.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/6.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/7.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/8.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/css-photo-gallery/9.jpg&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f5f6f7</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#0a0a23</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">4px</span> solid <span class="number">#fdb347</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gallery</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">gap</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">1400px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gallery</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gallery</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
        <tag>Flexbox</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(五)</title>
    <url>/responsive-web-dedign-%E4%BA%94/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-the-CSS-Box-Model-by-Building-a-Rothko-Painting"><a href="#Learn-the-CSS-Box-Model-by-Building-a-Rothko-Painting" class="headerlink" title="Learn the CSS Box Model by Building a Rothko Painting"></a>Learn the CSS Box Model by Building a Rothko Painting</h4><span id="more"></span>

<ol>
<li><p>By now, you should be familiar with the basic elements an HTML page should have.</p>
<p>Set up your code with a <code>DOCTYPE</code> declaration, an <code>html</code> element with the language set to English, a <code>head</code> element, and a <code>body</code> element.</p>
</li>
<li><p>Within the <code>head</code> element, add a <code>meta</code> tag which sets the <code>charset</code> to <code>UTF-8</code>, and a <code>title</code> element with the value <code>Rothko Painting</code>.</p>
<p>Within the <code>body</code> element, add an <code>img</code> element with a <code>src</code> of <code>https://cdn.freecodecamp.org/curriculum/css-box-model/diagram-1.png</code>.</p>
</li>
<li><p>In the CSS box model, every HTML element is treated as a box with four areas.</p>
<p>Imagine you receive a box from your favorite online retailer – the content is the item in the box, or in our case, a header, paragraph, or image element.</p>
<p>Change the <code>src</code> attribute in the <code>&lt;img&gt;</code> from <code>https://cdn.freecodecamp.org/curriculum/css-box-model/diagram-1.png</code> to <code>https://cdn.freecodecamp.org/curriculum/css-box-model/diagram-2.png</code>.</p>
</li>
<li><p>The content is surrounded by a space called padding, similar to how bubble wrap separates an item from the box around it.</p>
<p>Think of the border like the cardboard box your item was shipped in.</p>
<p>Change the <code>src</code> attribute to <code>https://cdn.freecodecamp.org/curriculum/css-box-model/diagram-3.png</code></p>
</li>
<li><p>Margin is the area outside of the box, and can be used to control the space between other boxes or elements.</p>
<p>Here the bottom element has a larger top margin, pushing it further down the page.</p>
<p>Now that you understand the CSS box model, let’s get started on the Rothko painting.</p>
<p>Remove the <code>&lt;img&gt;</code> element.</p>
</li>
<li><p>Add a <code>div</code> element in the <code>body</code>.</p>
<p>Set the <code>class</code> attribute equal to <code>canvas</code>. For example, <code>&lt;div class=&quot;my-div&quot;&gt;</code>.</p>
<p>This will act as the canvas for your painting.</p>
</li>
<li><p>Before you can start styling the <code>div</code> you added, you need to link your CSS to your HTML.</p>
<p>Add a <code>link</code> element to link your <code>styles.css</code> file. Set the <code>href</code> to <code>styles.css</code>, and remember to set the <code>rel</code> attribute to <code>stylesheet</code>.</p>
</li>
<li><p>Time for CSS.</p>
<p>Even though your <code>&lt;div&gt;</code> has no text, it’s still treated as a box with content. Write a CSS rule that uses the <code>.canvas</code> class selector and set its <code>width</code> to 500 pixels. Here’s a CSS rule that sets the width of the class <code>card</code> to 300 pixels:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Add the <code>height</code> property with the value <code>600px</code> to your <code>.canvas</code> rule.</p>
</li>
<li><p>Change the <code>background-color</code> of the canvas to <code>#4d0f00</code>.</p>
</li>
<li><p>Every painting needs a frame.</p>
<p>Wrap the <code>.canvas</code> element in another <code>div</code>. Give that <code>div</code> the <code>frame</code> class.</p>
</li>
<li><p>Write a new rule using the <code>.frame</code> class selector.</p>
<p>Use the <code>border</code> shorthand declaration to give the <code>.frame</code> element a solid, black border with a width of <code>50px</code>.</p>
</li>
<li><p>The frame is much too wide.</p>
<p>In <code>.frame</code>, set its <code>width</code> to 500 pixels.</p>
</li>
<li><p>Use padding to adjust the spacing within an element.</p>
<p>In <code>.frame</code>, use the <code>padding</code> shorthand property to increase the space between the <code>.frame</code> and <code>.canvas</code> elements by <code>50px</code>. The shorthand will increase space in the top, bottom, left, and right of the element’s border and canvas within.</p>
</li>
<li><p>Use margins to adjust the spacing outside of an element.</p>
<p>Using the <code>margin</code> property, give the <code>.frame</code> element vertical margin of <code>20px</code>, and horizontal margin of <code>auto</code>. This will move the frame down 20 pixels and horizontally center it on the page.</p>
</li>
<li><p>Add a new <code>div</code> element inside of your <code>.canvas</code> element.</p>
<p>Give the new <code>div</code> the <code>class</code> attribute with a value of <code>one</code>. This will be your first rectangle.</p>
</li>
<li><p>Write a new rule that targets <code>.one</code> and set its <code>width</code> to 425 pixels.</p>
</li>
<li><p>Now set the <code>height</code> for <code>.one</code> to 150 pixels.</p>
</li>
<li><p>Set the <code>background-color</code> of <code>.one</code> to <code>#efb762</code>.</p>
</li>
<li><p>Use margins to position the <code>.one</code> element on the canvas.</p>
<p>Add the shorthand <code>margin</code> property with a vertical margin of <code>20px</code> and a horizontal margin of <code>auto</code>.</p>
</li>
<li><p>Now <code>.one</code> is centered horizontally, but its top margin is pushing past the canvas and onto the frame’s border, shifting the entire canvas down 20 pixels.</p>
<p>Add <code>padding</code> of <code>1px</code> to the <code>.canvas</code> element to give the <code>.one</code> element something solid to push off of.</p>
</li>
<li><p>Adding 1 pixel of padding to the top, bottom, left, and right of the canvas changed its dimensions to 502 pixels x 602 pixels.</p>
<p>Replace the <code>padding</code> property with <code>overflow</code> set to <code>hidden</code> - changing the canvas back to its original dimensions.</p>
</li>
<li><p>Add another <code>div</code> with a <code>class</code> value of <code>two</code> just below your <code>one</code> element. This will be your second rectangle.</p>
</li>
<li><p>Create a new CSS rule using the <code>.two</code> selector and set its <code>width</code> to 475 pixels.</p>
</li>
<li><p>Set the <code>height</code> of the <code>.two</code> element to 200 pixels.</p>
</li>
<li><p>Set the <code>background-color</code> of the <code>.two</code> element to <code>#8f0401</code>.</p>
</li>
<li><p>Center the <code>.two</code> element by setting its <code>margin</code> to <code>auto</code>.</p>
</li>
<li><p>Create a new <code>div</code> with a <code>class</code> value of <code>three</code> right under the <code>.two</code> element. This will be your third rectangle.</p>
</li>
<li><p>You don’t always have to use pixels when sizing an element.</p>
<p>Create a new rule, <code>.three</code>, and set its <code>width</code> to <code>91%</code>.</p>
</li>
<li><p>Set the <code>height</code> of <code>.three</code> to <code>28%</code>.</p>
</li>
<li><p>Change the <code>background-color</code> of <code>.three</code> to <code>#b20403</code>.</p>
</li>
<li><p>Center the <code>.three</code> element on the canvas by setting its <code>margin</code> to <code>auto</code>.</p>
</li>
<li><p>It’s helpful to have your margins push in one direction.</p>
<p>In this case, the bottom margin of the <code>.one</code> element pushes <code>.two</code> down 20 pixels.</p>
<p>In the <code>.two</code> selector, use <code>margin</code> shorthand property to set top margin to <code>0</code>, horizontal margin to <code>auto</code>, and bottom margin to <code>20px</code>. This will remove its top margin, horizontally center it, and set its bottom margin to 20 pixels.</p>
</li>
<li><p>The colors and shapes of your painting are too sharp to pass as a Rothko.</p>
<p>Use the <code>filter</code> property to <code>blur</code> the painting by <code>2px</code> in the <code>.canvas</code> element.</p>
<p>Here’s an example of a rule that add a 3px <code>blur</code>:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">3px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Create a rule that targets both <code>.one</code> and <code>.two</code> and increase their <code>blur</code> effect by 1 pixel.</p>
</li>
<li><p>Increase the <code>blur</code> of <code>.three</code> by 2 pixels.</p>
</li>
<li><p>The rectangles are too small and their edges don’t have the soft quality of a painting.</p>
<p>Increase the area and soften the edges of <code>.one</code> by setting its <code>box-shadow</code> to <code>0 0 3px 3px #efb762</code>.</p>
</li>
<li><p>The rectangles are too small and their edges don’t have the soft quality of a painting.</p>
<p>Increase the area and soften the edges of <code>.one</code> by setting its <code>box-shadow</code> to <code>0 0 3px 3px #efb762</code>.</p>
</li>
<li><p>Add a <code>box-shadow</code> to <code>.three</code> with the values <code>0 0 5px 5px #b20403</code>.</p>
</li>
<li><p>The corners of each rectangle are still too sharp.</p>
<p>Round each corner of the <code>.one</code> element by 9 pixels, using the <code>border-radius</code> property.</p>
</li>
<li><p>Use the <code>border-radius</code> property on the <code>.two</code> selector, to set its top-left radius and bottom-right radius to <code>8px</code>, and top-right radius and bottom-left radius to <code>10px</code>.</p>
</li>
<li><p>The <code>border-radius</code> property accepts up to four values to round the top-left, top-right, bottom-right, and bottom-left corners.</p>
<p>Round the top-left corner of <code>.three</code> by 30 pixels, the top-right by 25 pixels, the bottom-right by 60 pixels, and bottom-left by 12 pixels.</p>
</li>
<li><p>Rotate each rectangle to give them more of an imperfect, hand-painted look.</p>
<p>Use the <code>transform</code> property on the <code>.one</code> selector to <code>rotate</code> it counter clockwise by 0.6 degrees.</p>
</li>
<li><p>Rotate the <code>.two</code> element clockwise by 0.4 degrees.</p>
</li>
<li><p>Rotate <code>.three</code> counter clockwise by 0.2 degrees.</p>
<p>With this final step, your Rothko painting is now complete.</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Rothko Painting<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;./styles.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;frame&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.canvas</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#4d0f00</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">2px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.frame</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">50px</span> solid black;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.one</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">425px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#efb762</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">3px</span> <span class="number">#efb762</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">9px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">0.6deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.two</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">475px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#8f0401</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">3px</span> <span class="number">#8f0401</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0.4deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.one</span>, <span class="selector-class">.two</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">1px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.three</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">91%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">28%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#b20403</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">2px</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">#b20403</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">30px</span> <span class="number">25px</span> <span class="number">60px</span> <span class="number">12px</span>; </span><br><span class="line">  <span class="attribute">transform</span>:<span class="built_in">rotate</span>(-<span class="number">0.2deg</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(七)</title>
    <url>/responsive-web-dedign-%E4%B8%83/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-Typography-by-Building-a-Nutrition-Label"><a href="#Learn-Typography-by-Building-a-Nutrition-Label" class="headerlink" title="Learn Typography by Building a Nutrition Label"></a>Learn Typography by Building a Nutrition Label</h4><span id="more"></span>

<ol>
<li><p>We’ve provided a basic HTML boilerplate for you.</p>
<p>Create an <code>h1</code> element within your <code>body</code> element and give it the text <code>Nutrition Facts</code>.</p>
</li>
<li><p>Below your <code>h1</code> element, add a <code>p</code> element with the text <code>8 servings per container</code>.</p>
</li>
<li><p>Add a second <code>p</code> element with the text <code>Serving size 2/3 cup (55g)</code>.</p>
</li>
<li><p>Within your <code>head</code> element, add a <code>link</code> element with the <code>rel</code> attribute set to <code>stylesheet</code> and the <code>href</code> attribute set to <code>https://fonts.googleapis.com/css?family=Open+Sans:400,700,800</code>.</p>
<p>This will import the <code>Open Sans</code> font family, with the font weight values <code>400</code>, <code>700</code>, and <code>800</code>.</p>
<p>Also add a <code>link</code> element to link your <code>styles.css</code> file.</p>
</li>
<li><p>Create a <code>body</code> selector and give it a <code>font-family</code> set to <code>Open Sans</code> with a fallback of <code>sans-serif</code>.</p>
<p>Remember that fonts with spaces in the name must be wrapped in quotes for CSS.</p>
</li>
<li><p>The font is a bit small. Create an <code>html</code> selector and set the font to have a size of <code>16px</code>.</p>
</li>
<li><p>Wrap your <code>h1</code> and <code>p</code> elements in a <code>div</code> element. Give that <code>div</code> a <code>class</code> attribute set to <code>label</code>.</p>
</li>
<li><p>Borders can be used to group and prioritize content.</p>
<p>Create a <code>.label</code> selector and give it a <code>border</code> set to <code>2px solid black</code>.</p>
</li>
<li><p>Good use of white space can bring focus to the important elements of your page, and help guide your user’s eyes through your text.</p>
<p>Give your <code>.label</code> selector a <code>width</code> property set to <code>270px</code>.</p>
</li>
<li><p>Give your <code>.label</code> selector a <code>margin</code> property set to <code>20px auto</code>, and a <code>padding</code> property set to <code>0 7px</code>.</p>
</li>
<li><p>If you inspect your <code>.label</code> element with your browser’s developer tools, you may notice that it’s actually 288 pixels wide instead of 270. This is because, by default, the browser includes the border and padding when determining an element’s size.</p>
<p>To solve this, reset the box model by creating a <code>*</code> selector and giving it a <code>box-sizing</code> property of <code>border-box</code>.</p>
</li>
<li><p>Remember that the use of <code>h1</code>, <code>h2</code>, and similar tags determine the semantic structure of your HTML. However, you can adjust the CSS of these elements to control the visual flow and hierarchy.</p>
<p>Create an <code>h1</code> rule and set the <code>font-weight</code> property to <code>800</code>. This will make your <code>h1</code> text bolder.</p>
</li>
<li><p>Give your <code>h1</code> selector a <code>text-align</code> property of <code>center</code>.</p>
</li>
<li><p>Fine-tune the placement of your <code>h1</code> by giving it a top and bottom margin of <code>-4px</code> and a left and right margin of <code>0</code>.</p>
</li>
<li><p>Create a <code>p</code> selector and remove all margins.</p>
</li>
<li><p>Lines can help separate and group important content, especially when space is limited.</p>
<p>Create a <code>div</code> element below your <code>h1</code> element, and give it a <code>class</code> attribute set to <code>divider</code>.</p>
</li>
<li><p>Create a selector for your new <code>.divider</code> and set the <code>border-bottom</code> property to <code>1px solid #888989</code>. Also give it a top and bottom margin of <code>2px</code>. It should not have any left or right margin.</p>
</li>
<li><p>The <code>letter-spacing</code> property can be used to adjust the space between each character of text in an element.</p>
<p>Give your <code>h1</code> selector a <code>letter-spacing</code> property set to <code>0.15px</code> to space them out a bit more.</p>
</li>
<li><p>Nutrition labels have a lot of bold text to draw attention to important information. Rather than targeting each element that needs to be bold, it is more efficient to use a class to apply the bold styling to every element.</p>
<p>Give your second <code>p</code> element a <code>class</code> attribute set to <code>bold</code>.</p>
</li>
<li><p>Your new class does not have any styling yet. Create a <code>.bold</code> selector and give it a <code>font-weight</code> property set to <code>800</code> to make the text bold.</p>
<p>Go ahead and remove the <code>font-weight</code> property from your <code>h1</code> selector as well.</p>
</li>
<li><p>Give your <code>h1</code> element a <code>class</code> attribute set to <code>bold</code>. This will make the text bold again.</p>
</li>
<li><p>Horizontal spacing between equally important elements can increase the readability of your text.</p>
<p>Wrap the text <code>2/3 cup (55g)</code> in a <code>span</code> element.</p>
</li>
<li><p>Now we can add the horizontal spacing using <code>flex</code>. In your <code>p</code> selector, add a <code>display</code> property set to <code>flex</code> and a <code>justify-content</code> property set to <code>space-between</code>.</p>
</li>
<li><p>Wrap everything within the <code>.label</code> element in a new <code>header</code> element.</p>
</li>
<li><p>Now update your <code>h1</code> selector to be <code>header h1</code> to specifically target your <code>h1</code> element within your new <code>header</code>.</p>
</li>
<li><p>Create a new <code>div</code> element below your <code>header</code> element, and give it a <code>class</code> attribute set to <code>divider large</code>.</p>
</li>
<li><p>Create a new <code>.large</code> selector and give it a <code>height</code> property set to <code>10px</code>. Also create an <code>.large, .medium</code> selector and set the <code>background-color</code> property to <code>black</code>.</p>
</li>
<li><p>You may notice there is still a small border at the bottom of your <code>.large</code> element. To reset this, give your <code>.large, .medium</code> selector a <code>border</code> property set to <code>0</code>.</p>
<p>Note: the <code>medium</code>(medium) class will be utilized in step 37 for the thinner bars of the nutrition label.</p>
</li>
<li><p>Create a new <code>div</code> below your <code>.large</code> element and give it a <code>class</code> attribute set to <code>calories-info</code>.</p>
</li>
<li><p>Within your <code>.calories-info</code> element, create a <code>div</code> element. Give that <code>div</code> element a <code>class</code> attribute set to <code>left-container</code>. Within the newly created <code>div</code> element, create a <code>h2</code> element with the text <code>Amount per serving</code>. Give the <code>h2</code> element a <code>class</code> attribute set to <code>bold small-text</code>.</p>
</li>
<li><p>The <code>rem</code> unit stands for <code>root em</code>, and is relative to the font size of the <code>html</code> element.</p>
<p>Create a <code>.small-text</code> selector and set the <code>font-size</code> to <code>0.85rem</code>, which would calculate to roughly <code>13.6px</code> (remember that you set your <code>html</code> to have a <code>font-size</code> of <code>16px</code>).</p>
</li>
<li><p>Create a <code>.calories-info h2</code> selector and remove all margins.</p>
</li>
<li><p>Below your <code>.small-text</code> element, create a new <code>p</code> element with the text <code>Calories</code>. Also below the <code>.left-container</code> element, create a new <code>span</code> element with the text <code>230</code>.</p>
</li>
<li><p>Create a new <code>.calories-info</code> selector and give it a <code>display</code> property set to <code>flex</code>. Also give it a <code>justify-content</code> property set to <code>space-between</code> and <code>align-items</code> property set to <code>flex-end</code>.</p>
</li>
<li><p>Create a new <code>.left-container p</code> selector setting the top and bottom margin to <code>-5px</code>, and the left and right margin to <code>-2px</code>. Also set the <code>font-size</code> to <code>2em</code> and <code>font-weight</code> to <code>700</code>.</p>
</li>
<li><p>Create a <code>.calories-info span</code> selector, set its <code>font-size</code> to <code>2.4em</code> and <code>font-weight</code> to <code>700</code>.</p>
</li>
<li><p>Typography is often more art than science. You may have to tweak things like alignment until it looks correct.</p>
<p>Give your <code>.calories-info span</code> selector a <code>margin</code> set to <code>-7px -2px</code>. This will shift your <code>230</code> text into place.</p>
</li>
<li><p>Below your <code>.calories-info</code> element, add a <code>div</code> with the <code>class</code> attribute set to <code>divider medium</code>.5</p>
</li>
<li><p>Create an <code>.medium</code> selector and give it a <code>height</code> property of <code>5px</code>.</p>
</li>
<li><p>Create a new <code>div</code> element below your <code>.medium</code> element. Give it a <code>class</code> attribute set to <code>daily-value small-text</code>. Within this new <code>div</code>, add a <code>p</code> element with the text <code>% Daily Value *</code>, and set the <code>class</code> attribute to <code>bold right</code>.</p>
</li>
<li><p>The text <code>* Daily Value %</code> should be aligned to the right. Create a <code>.right</code> selector and use the <code>justify-content</code> property to do it.</p>
<blockquote>
<p>采用justify-content:flex-end;</p>
</blockquote>
</li>
<li><p>Use your existing <code>.divider</code> element as an example to add a new divider after the <code>p</code> element.</p>
</li>
<li><p>After your last <code>.divider</code> element, create a <code>p</code> element and give it the text <code>Total Fat 8g 10%</code>. Wrap the text <code>Total Fat</code> in a <code>span</code> element with the <code>class</code> of <code>bold</code>. Wrap the text <code>10%</code> in another <code>span</code> element with the <code>class</code> of <code>bold</code>. Finally, nest the <code>Total Fat</code> <code>span</code> element and the text <code>8g</code> in an additional <code>span</code> element for alignment.</p>
</li>
<li><p>Below your element with the <code>Total Fat</code> text, create a new <code>p</code> element with the text <code>Saturated Fat 1g 5%</code>. Wrap the <code>5%</code> in a <code>span</code> with the <code>class</code> attribute set to <code>bold</code>. In this case this is enough to align the percentage to <code>5%</code>.</p>
</li>
<li><p>This new <code>p</code> element will need to be indented. Give it a <code>class</code> set to <code>indent</code>.</p>
</li>
<li><p>Create a new <code>.indent</code> selector and give it a <code>margin-left</code> property set to <code>1em</code>.</p>
</li>
<li><p>Create a <code>.daily-value p</code> selector to target all of your <code>p</code> elements in the <code>daily-value</code> section. Give this new selector a <code>border-bottom</code> set to <code>1px solid #888989</code>.</p>
</li>
<li><p>The bottom borders under your <code>% Daily Value *</code> and <code>Saturated Fat 1g 5%</code> elements do not extend the full width of the label. Add <code>no-divider</code> to the <code>class</code> for these two elements.</p>
</li>
<li><p>The <code>:not</code> pseudo-selector can be used to select all elements that do not match the given CSS rule.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:not</span>(<span class="selector-id">#example</span>) &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>The above selects all <code>div</code> elements without an <code>id</code> of <code>example</code>.</p>
<p>Modify your <code>.daily-value p</code> selector to exclude the <code>.no-divider</code> elements.</p>
</li>
<li><p>Now you will have to add separate dividers below your <code>.no-divider</code> elements.</p>
<p>Your first <code>.no-divider</code> element has a <code>.divider</code> after it. Create another <code>.divider</code> after your second <code>.no-divider</code> element.</p>
</li>
<li><p>After your last <code>.divider</code>, create another <code>p</code> element with the text <code>Trans Fat 0g</code>. Italicize the word <code>Trans</code> by wrapping it in an <code>i</code> element. Give the new <code>p</code> element the <code>class</code> attribute set to <code>indent no-divider</code>. Wrap <code>Trans Fat 0g</code> in a <code>span</code> element for alignment.</p>
</li>
<li><p>Create another <code>.divider</code> after your last <code>p</code> element.</p>
</li>
<li><p>After your last <code>.divider</code>, create a new <code>p</code> element with the text <code>Cholesterol 0mg 0%</code>. Wrap the text <code>Cholesterol</code> in a <code>span</code> element, and give that <code>span</code> element the <code>class</code> of <code>bold</code>. Wrap the text <code>0%</code> in another <code>span</code> element, with the <code>class</code> of <code>bold</code>. Finally, nest the <code>Cholesterol</code> <code>span</code> element and the text <code>0mg</code> in an additional <code>span</code> element for alignment.</p>
</li>
<li><p>Below your last <code>p</code> element, create another <code>p</code> element with the text <code>Sodium 160mg 7%</code>. Wrap the text <code>Sodium</code> in a <code>span</code> element with a <code>class</code> attribute set to <code>bold</code>. Wrap the <code>7%</code> text in another <code>span</code> element with the <code>class</code> set to <code>bold</code>. Also add an additional <code>span</code> element around <code>Sodium 160mg</code> for aligning it correctly.</p>
</li>
<li><p>Add another <code>p</code> element with the text <code>Total Carbohydrate 37g 13%</code>. Like before, use <code>span</code> elements to make the text <code>Total Carbohydrate</code> and <code>13%</code> bold. Also add an additional <code>span</code> element to wrap the <code>Total Carbohydrate 37g</code> text in a span element so to have it aligned to the left, and <code>13%</code> to the right.</p>
</li>
<li><p>Below your last <code>p</code> element, add another <code>p</code> element with the text <code>Dietary Fiber 4g</code>. Give the <code>p</code> element the <code>class</code> necessary to indent it and remove the dividing border. Then create a divider below that <code>p</code> element.</p>
</li>
<li><p>Create another <code>p</code> element after your last <code>.divider</code>, and give it the text <code>Total Sugars 12g</code>. Assign that <code>p</code> element the <code>class</code> values necessary to indent it and remove the bottom border. Then create another <code>.divider</code> below your new <code>p</code> element.</p>
</li>
<li><p>The advantage to creating these dividers is that you can apply specific classes to style them individually. Add <code>double-indent</code> to the <code>class</code> for your last <code>.divider</code>.</p>
</li>
<li><p>Create a <code>.double-indent</code> selector and give it a left margin of <code>2em</code>.</p>
</li>
<li><p>Below your <code>.double-indent</code> element, add a new <code>p</code> element with the text <code>Includes 10g Added Sugars 20%</code>. Your new <code>p</code> element should also be double indented, and have no bottom border. Use a <code>span</code> to make the <code>20%</code> bold and right aligned.</p>
<p>Then create another divider after that <code>p</code> element.</p>
</li>
<li><p>After your last divider, create another <code>p</code> element with the text <code>Protein 3g</code>. Use the necessary classes to remove the bottom border, and a <code>span</code> to make the <code>Protein</code> bold.</p>
<p>Following this element, create a large divider.</p>
</li>
<li><p>Create another <code>p</code> element below your large divider. Give the <code>p</code> element the text <code>Vitamin D 2mcg 10%</code>.</p>
<p>The <code>p</code> element contains only text, you can wrap the percentage in a <code>span</code> element so that it is considered a separate entity from the rest of the text, and it’s moved to the right.</p>
</li>
<li><p>Create another <code>p</code> element, give it the text <code>Calcium 260mg 20%</code>. Align <code>20%</code> to the right. Below that, create a <code>p</code> element with the text <code>Iron 8mg 45%</code>, aligning the <code>45%</code> to the right.</p>
</li>
<li><p>Create the final <code>p</code> element for your <code>.daily-value</code> section. Give it the text <code>Potassium 235mg 6%</code>. Align the <code>6%</code> text to the right, and remove the bottom border of the <code>p</code> element.</p>
</li>
<li><p>Add a medium divider after your <code>.daily-value</code> element. Below that new divider, create a <code>p</code> element with the <code>class</code> attribute set to <code>note</code>.</p>
<p>Give the <code>p</code> element the following text:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* The % Daily Value (DV) tells you how much a nutrient in a serving of food contributes to a daily diet. 2,000 calories a day is used for general nutrition advice.</span><br></pre></td></tr></table></figure></li>
<li><p>Create a <code>.note</code> selector, and set the size of the font to <code>0.6rem</code>. Also set the top and bottom margins to <code>5px</code>, removing the left and right margins.</p>
</li>
<li><p>Give the <code>.note</code> selector a left and right padding of <code>8px</code>, removing the top and bottom padding. Also set the <code>text-indent</code> property to <code>-8px</code>.</p>
<p>With these last changes, your nutrition label is complete!</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Nutrition Label<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css?family=Open+Sans:400,700,800&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;./styles.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>Nutrition Facts<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>8 servings per container<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>Serving size <span class="tag">&lt;<span class="name">span</span>&gt;</span>2/3 cup (55g)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider large&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;calories-info&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;bold small-text&quot;</span>&gt;</span>Amount per serving<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Calories<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>230<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider medium&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;daily-value small-text&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bold right no-divider&quot;</span>&gt;</span>% Daily Value *<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>Total Fat<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 8g<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>10%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;indent no-divider&quot;</span>&gt;</span>Saturated Fat 1g <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>5%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;indent no-divider&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>Trans<span class="tag">&lt;/<span class="name">i</span>&gt;</span> Fat 0g<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>Cholesterol<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 0mg<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>0%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>Sodium<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 160mg<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>7%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>Total Carbohydrate<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 37g<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>13%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;indent no-divider&quot;</span>&gt;</span>Dietary Fiber 4g<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;indent no-divider&quot;</span>&gt;</span>Total Sugars 12g<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider double-indent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;double-indent no-divider&quot;</span>&gt;</span>Includes 10g Added Sugars <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>20%<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;no-divider&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>Protein<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 3g<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider large&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Vitamin D 2mcg <span class="tag">&lt;<span class="name">span</span>&gt;</span>10%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Calcium 260mg <span class="tag">&lt;<span class="name">span</span>&gt;</span>20%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Iron 8mg <span class="tag">&lt;<span class="name">span</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;no-divider&quot;</span>&gt;</span>Potassium 235mg <span class="tag">&lt;<span class="name">span</span>&gt;</span>6%<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;divider medium&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;note&quot;</span>&gt;</span>* The % Daily Value (DV) tells you how much a nutrient in a serving of food contributes to a daily</span><br><span class="line">      diet. 2,000 calories a day is used for general nutrition advice.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Open Sans&#x27;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.label</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">270px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">7px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin</span>: -<span class="number">4px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">0.15px</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.divider</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#888989</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bold</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">800</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.large</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.large</span>, <span class="selector-class">.medium</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.medium</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.small-text</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.85rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.calories-info</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.calories-info</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left-container</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: -<span class="number">5px</span> -<span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.calories-info</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: -<span class="number">7px</span> -<span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2.4em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.indent</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.double-indent</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.daily-value</span> <span class="selector-tag">p</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.no-divider</span>) &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#888989</span>;</span><br><span class="line">&#125;</span><br><span class="line">n-<span class="attribute">left</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.daily-value</span> <span class="selector-tag">p</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.no-divider</span>) &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#888989</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(八)</title>
    <url>/responsive-web-dedign-%E5%85%AB/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-Accessibility-by-Building-a-Quiz"><a href="#Learn-Accessibility-by-Building-a-Quiz" class="headerlink" title="Learn Accessibility by Building a Quiz"></a>Learn Accessibility by Building a Quiz</h4><span id="more"></span>

<ol>
<li><p>Welcome to the first part of the Accessibility Quiz. As you are becoming a seasoned HTML and CSS developer, we have started you off with the basic boilerplate.</p>
<p>Start this accessibility journey by providing a <code>lang</code> attribute to your <code>html</code> element. This will assist screen readers in identifying the language of the page.</p>
</li>
<li><p>You may be familiar with the <code>meta</code> element already; it is used to specify information about the page, such as the title, description, keywords, and author.</p>
<p>Give your page a <code>meta</code> element with an appropriate <code>charset</code> value.</p>
<p>The <code>charset</code> attribute specifies the character encoding of the page, and, nowadays, <code>UTF-8</code> is the only encoding supported by most browsers.</p>
</li>
<li><p>Continuing with the <code>meta</code> elements, a <code>viewport</code> definition tells the browser how to render the page. Including one betters visual accessibility on mobile, and improves <em>SEO</em> (search engine optimization).</p>
<p>Add a <code>viewport</code> definition with a <code>content</code> attribute detailing the <code>width</code> and <code>initial-scale</code> of the page.</p>
<blockquote>
<p> <code> &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</code> </p>
</blockquote>
</li>
<li><p>Another important <code>meta</code> element for accessibility and SEO is the <code>description</code> definition. The value of the <code>content</code> attribute is used by search engines to provide a description of your page.</p>
<p>Add a <code>meta</code> element with the <code>name</code> attribute set to <code>description</code>, and give it a useful <code>content</code> attribute.</p>
</li>
<li><p>Lastly in the <code>head</code>, the <code>title</code> element is useful for screen readers to understand the content of a page. Furthermore, it is an important part of <em>SEO</em>.</p>
<p>Give your page a <code>title</code> that is descriptive and concise.</p>
</li>
<li><p>Navigation is a core part of accessibility, and screen readers rely on you to provide the structure of your page. This is accomplished with semantic HTML elements.</p>
<p>Add a <code>header</code> and a <code>main</code> element to your page.</p>
<p>The <code>header</code> element will be used to introduce the page, as well as provide a navigation menu.</p>
<p>The <code>main</code> element will contain the core content of your page.</p>
</li>
<li><p>Within the <code>header</code>, provide context about the page by nesting one <code>img</code>, <code>h1</code>, and <code>nav</code> element.</p>
<p>The <code>img</code> should point to <code>https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg</code>, and have an <code>id</code> of <code>logo</code>.</p>
<p>The <code>h1</code> should contain the text <code>HTML/CSS Quiz</code>.</p>
</li>
<li><p>A useful property of an <em>SVG</em> (scalable vector graphics) is that it contains a <code>path</code> attribute which allows the image to be scaled without affecting the resolution of the resultant image.</p>
<p>Currently, the <code>img</code> is assuming its default size, which is too large. Correctly, scale the image using it’s <code>id</code> as a selector, and setting the <code>width</code> to <code>max(100px, 18vw)</code>.</p>
</li>
<li><p>As described in the <a href="https://design-style-guide.freecodecamp.org/">freeCodeCamp Style Guide</a>, the logo should retain an aspect ratio of <code>35 / 4</code>, and have padding around the text.</p>
<p>First, change the <code>background-color</code> to <code>#0a0a23</code> so you can see the logo. Then, use the <code>aspect-ratio</code> property to set the desired aspect ratio to <code>35 / 4</code>. Finally, add a <code>padding</code> of <code>0.4rem</code> all around.</p>
</li>
<li><p>Make the <code>header</code> take up the full width of its parent container, set its <code>height</code> to <code>50px</code>, and set the <code>background-color</code> to <code>#1b1b32</code>. Then, set the <code>display</code> to use <em>Flexbox</em>.</p>
</li>
<li><p>Change the <code>h1</code> font color to <code>#f1be32</code>, and set the font size to <code>min(5vw, 1.2em)</code>.</p>
</li>
<li><p>To enable navigation on the page, add an unordered list with the following three list items:</p>
<ul>
<li><code>INFO</code></li>
<li><code>HTML</code></li>
<li><code>CSS</code></li>
</ul>
<p>The list items text should be wrapped in anchor tags.</p>
<blockquote>
<p><code>&lt;li&gt;</code> 中内容需要用a标签进行嵌套</p>
</blockquote>
</li>
<li><p>Target unordered list elements within <code>nav</code> elements, and use <em>Flexbox</em> to evenly space the children.</p>
</li>
<li><p>As this is a quiz, you will need a form for users to submit answers. You can semantically separate the content within the form using <code>section</code> elements.</p>
<p>Within the <code>main</code> element, create a form with three nested <code>section</code> elements. Then, make the form submit to <code>https://freecodecamp.org/practice-project/accessibility-quiz</code>, using the correct method.</p>
</li>
<li><p>To increase the page accessibility, the <code>role</code> attribute can be used to indicate the purpose behind an element on the page to assistive technologies. The <code>role</code> attribute is a part of the <em>Web Accessibility Initiative</em> (WAI), and accepts preset values.</p>
<p>Give each of the <code>section</code> elements the <code>region</code> role.</p>
</li>
<li><p>Every <code>region</code> role requires a label, which helps screen reader users understand the purpose of the region. One method for adding a label is to add a heading element inside the region and then reference it with the <code>aria-labelledby</code> attribute.</p>
<p>Add the following <code>aria-labelledby</code> attributes to the <code>section</code> elements:</p>
<ul>
<li><code>student-info</code></li>
<li><code>html-questions</code></li>
<li><code>css-questions</code></li>
</ul>
<p>Then, within each <code>section</code> element, nest one <code>h2</code> element with an <code>id</code> matching the corresponding <code>aria-labelledby</code> attribute. Give each <code>h2</code> suitable text content.</p>
</li>
<li><p>Typeface plays an important role in the accessibility of a page. Some fonts are easier to read than others, and this is especially true on low-resolution screens.</p>
<p>Change the font for both the <code>h1</code> and <code>h2</code> elements to <code>Verdana</code>, and use another web-safe font in the sans-serif family as a fallback.</p>
<p>Also, add a <code>border-bottom</code> of <code>4px solid #dfdfe2</code> to <code>h2</code> elements to make the sections distinct.</p>
</li>
<li><p>To be able to navigate within the page, give each anchor element an <code>href</code> corresponding to the <code>id</code> of the <code>h2</code> elements.</p>
</li>
<li><p>Filling out the content of the quiz, below <code>#student-info</code>, add three <code>div</code> elements with a <code>class</code> of <code>info</code>.</p>
<p>Then, within each <code>div</code> nest one <code>label</code> element, and one <code>input</code> element.</p>
</li>
<li><p>It is important to link each <code>input</code> to the corresponding <code>label</code> element. This provides assistive technology users with a visual reference to the input.</p>
<p>This is done by giving the <code>label</code> a <code>for</code> attribute, which contains the <code>id</code> of the <code>input</code>.</p>
<p>This section will take a student’s name, email address, and date of birth. Give the <code>label</code> elements appropriate <code>for</code> attributes, as well as text content. Then, link the <code>input</code> elements to the corresponding <code>label</code> elements.</p>
</li>
<li><p>Keeping in mind best-practices for form inputs, give each <code>input</code> an appropriate <code>type</code> and <code>name</code> attribute. Then, give the first <code>input</code> a <code>placeholder</code> attribute.</p>
</li>
<li><p>Even though you added a <code>placeholder</code> to the first <code>input</code> element in the previous lesson, this is actually not a best-practice for accessibility; too often, users confuse the placeholder text with an actual input value - they think there is already a value in the input.</p>
<p>Remove the placeholder text from the first <code>input</code> element, relying on the <code>label</code> being the best-practice.</p>
</li>
<li><p>Arguably, <code>D.O.B.</code> is not descriptive enough. This is especially true for visually impaired users. One way to get around such an issue, without having to add visible text to the label, is to add text only a screen reader can read.</p>
<p>Append a <code>span</code> element with a class of <code>sr-only</code> to the current text content of the third <code>label</code> element.</p>
</li>
<li><p>Within the <code>span</code> element, add the text <code>(Date of Birth)</code>.</p>
</li>
<li><p>The <code>.sr-only</code> text is still visible. There is a common pattern to visually hide text for only screen readers to read.</p>
<p>This pattern is to set the following CSS properties:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">margin</span>: -<span class="number">1px</span>;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">clip</span>: <span class="built_in">rect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p>Use the above to define the <code>sr-only</code> class.</p>
</li>
<li><p>Within the second <code>section</code> element, add two <code>div</code> elements with a class of <code>question-block</code>.</p>
<p>Then, within each <code>div.question-block</code> element, add one <code>p</code> element with text of incrementing numbers, starting at <code>1</code>, and one <code>fieldset</code> element with a class of <code>question</code>.</p>
</li>
<li><p>Each <code>fieldset</code> will contain a true/false question.</p>
<p>Within each <code>fieldset</code>, nest one <code>legend</code> element, and one <code>ul</code> element with two options.</p>
</li>
<li><p>Give each <code>fieldset</code> an adequate <code>name</code> attribute. Then, give both unordered lists a <code>class</code> of <code>answers-list</code>.</p>
<p>Finally, use the <code>legend</code> to caption the content of the <code>fieldset</code> by placing a true/false question as the text content.</p>
</li>
<li><p>To provide the functionality of the true/false questions, we need a set of inputs which do not allow both to be selected at the same time.</p>
<p>Within each list element, nest one <code>label</code> element, and within each <code>label</code> element, nest one <code>input</code> element with the appropriate <code>type</code>.</p>
</li>
<li><p>Add an <code>id</code> to all of your radio <code>input</code>s so you can link your labels to them. Give the first one an <code>id</code> of <code>q1-a1</code>. Give the rest of them <code>id</code>s of <code>q1-a2</code>, <code>q2-a1</code>, and <code>q2-a2</code>, respectively.</p>
</li>
<li><p>Although not required for <code>label</code> elements with a nested <code>input</code>, it is still best-practice to explicitly link a <code>label</code> with its corresponding <code>input</code> element.</p>
<p>Now, add a <code>for</code> attribute to each of your four <code>label</code>s that links the <code>label</code> to its corresponding radio <code>input</code>.</p>
</li>
<li><p>Give the <code>label</code> elements text such that the <code>input</code> comes before the text. Then, give the <code>input</code> elements a <code>value</code> matching the text.</p>
<p>The text should either be <code>True</code> or <code>False</code>.</p>
</li>
<li><p>If you click on the radio inputs, you might notice both inputs within the same true/false fieldset can be selected at the same time.</p>
<p>Group the relevant inputs together such that only one input from a pair can be selected at a time.</p>
</li>
<li><p>To prevent unnecessary repetition, target the <code>before</code> pseudo-element of the <code>p</code> element, and give it a <code>content</code> property of <code>&quot;Question #&quot;</code>.</p>
</li>
<li><p>The final section of this quiz will contain a dropdown, and a text box.</p>
<p>Begin by nesting a <code>div</code> with a <code>class</code> of <code>formrow</code>, and nest four <code>div</code> elements inside of it, alternating their <code>class</code> attributes with <code>question-block</code> and <code>answer</code>.</p>
</li>
<li><p>Within the <code>div.question-block</code> elements, nest one <code>label</code> element, and give the <code>label</code> elements text content</p>
</li>
<li><p>Within the first <code>div.answer</code> element, nest one required <code>select</code> element with three <code>option</code> elements.</p>
<p>Give the first <code>option</code> element a <code>value</code> of <code>&quot;&quot;</code>, and the text <code>Select an option</code>. Give the second <code>option</code> element a <code>value</code> of <code>yes</code>, and the text <code>Yes</code>. Give the third <code>option</code> element a <code>value</code> of <code>no</code>, and the text <code>No</code>.</p>
</li>
<li><p>Link the first <code>label</code> element to the <code>select</code> element, and give the <code>select</code> element a <code>name</code> attribute.</p>
</li>
<li><p>Nest one <code>textarea</code> element within the second <code>div.answer</code> element, and set the number of rows and columns it has.</p>
<p>Then, give the <code>textarea</code> placeholder text describing an example answer.</p>
</li>
<li><p>As with the other <code>input</code> and <code>label</code> elements, link the <code>textarea</code> to its corresponding <code>label</code> element, and give it a <code>name</code> attribute.</p>
</li>
<li><p>Do not forget to give your <code>form</code> a submit button with the text <code>Send</code>.</p>
</li>
<li><p>Two final semantic HTML elements for this project are the <code>footer</code> and <code>address</code> elements. The <code>footer</code> element is a container for a collection of content that is related to the page, and the <code>address</code> element is a container for contact information for the author of the page.</p>
<p>After the <code>main</code> element, add one <code>footer</code> element, and nest one <code>address</code> element within it.</p>
</li>
<li><p>Within the <code>address</code> element, add the following:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">freeCodeCamp<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">San Francisco<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">California<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">USA</span><br></pre></td></tr></table></figure></li>
<li><p>The <code>address</code> element does not have to contain a physical geographical location. It can be used to provide a link to the subject.</p>
<p>Wrap a link around the text <code>freeCodeCamp</code>, and set its location to <code>https://freecodecamp.org</code>.</p>
</li>
<li><p>Back to styling the page. Select the list elements within the navigation bar, and give them the following styles:</p>
</li>
<li><p>On the topic of visual accessibility, contrast between elements is a key factor. For example, the contrast between the text and the background of a heading should be at least 4.5:1.</p>
<p>Change the font color of all the anchor elements within the list elements to something with a contrast ratio of at least 7:1.</p>
</li>
<li><p>To make the navigation buttons look more like typical buttons, remove the underline from the anchor tags.</p>
<p>Then, create a new selector targeting the navigation list elements so that when the cursor hovers over them, the background color and text color are switched, and the cursor becomes a pointer.</p>
</li>
<li><p>Tidy up the <code>header</code>, by using <em>Flexbox</em> to put space between the children, and vertically center them.</p>
<p>Then, fix the <code>header</code> to the top of the viewport.</p>
</li>
<li><p>When the screen width is small, the <code>h1</code> does not wrap its text content how it should. Align the text for the <code>h1</code> element in the center.</p>
<p>Then, give the <code>main</code> padding such that the <code>Student Info</code> section header can be fully seen.</p>
</li>
<li><p>On small screens, the unordered list in the navigation bar overflows the right side of the screen.</p>
<p>Fix this by using <em>Flexbox</em> to wrap the <code>ul</code> content. Then, set the following CSS properties to correctly align the text:</p>
</li>
<li><p>Set the width of the <code>section</code> elements to <code>80%</code> of their parent container. Then, use margins to center the <code>section</code> elements, adding <code>10px</code> to the bottom margin.</p>
<p>Also, ensure the <code>section</code> elements cannot be larger than <code>600px</code> in width.</p>
</li>
<li><p>Replace the top margin of the <code>h2</code> elements with <code>60px</code> of top padding.</p>
</li>
<li><p>Add padding to the top and left of the <code>.info</code> elements, and set the other values to <code>0</code>.</p>
</li>
<li><p>Give the <code>.formrow</code> elements top margin, and left and right padding. The other padding values should be <code>0</code>.</p>
<p>Then, increase the font size for all <code>input</code> elements.</p>
</li>
<li><p>To make the first section look more inline, target only the <code>input</code> elements within <code>.info</code> elements, and set their <code>width</code> to <code>50%</code>, and left-align their text.</p>
</li>
<li><p>Target all <code>label</code> elements within <code>.info</code> elements, and set their <code>width</code> to <code>10%</code>, and make it so they do not take up less than <code>55px</code>.</p>
</li>
<li><p>To align the input boxes with each other, create a new ruleset that targets all <code>input</code> and <code>label</code> elements within an <code>.info</code> element and set the <code>display</code> property to <code>inline-block</code>.</p>
<p>Also, align the <code>label</code> element’s text to the right.</p>
</li>
<li><p>To neaten the <code>.question-block</code> elements, set the following CSS properties:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">text-align</span>: left;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">padding-top</span>: <span class="number">5px</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>Make the paragraph elements appear as a higher priority, with the following CSS properties:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">padding-left</span>: <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>It is useful to see the default border around the <code>fieldset</code> elements, during development. However, it might not be the style you want.</p>
<p>Remove the border and bottom padding on the <code>.question</code> elements.</p>
</li>
<li><p>Remove the default styling for the list items of <code>.answers-list</code>, and remove the unordered list padding.</p>
</li>
<li><p>Give the submit button a freeCodeCamp-style design, with the following CSS properties:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">40px</span> auto;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">23px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#d0d0d5</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#3b3b4f</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>Set the <code>footer</code> background color to <code>#2a2a40</code>, and use <em>Flexbox</em> to horizontally center the text.</p>
</li>
<li><p>Now, we cannot read the text. Target the <code>footer</code> and the anchor element within to set the font color to a color of adequate contrast ratio.5</p>
</li>
<li><p>Horizontally center all the text within the <code>address</code> element, and add some padding.</p>
</li>
<li><p>Clicking on the navigation links should jump the viewport to the relevant section. However, this jumping can be disorienting for some users.</p>
<p>Select all elements, and set the <code>scroll-behavior</code> to <code>smooth</code>.</p>
</li>
<li><p>Certain types of motion-based animations can cause discomfort for some users. In particular, people with vestibular disorders have sensitivity to certain motion triggers.</p>
<p>The <code>@media</code> at-rule has a media feature called <code>prefers-reduced-motion</code> to set CSS based on the user’s preferences. It can take one of the following values:</p>
<ul>
<li><code>reduce</code></li>
<li><code>no-preference</code></li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">feature</span>: value) &#123;</span><br><span class="line">  selector &#123;</span><br><span class="line">    styles</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>Wrap the style rule that sets <code>scroll-behavior: smooth</code> within an <code>@media</code> at-rule with the media feature <code>prefers-reduced-motion</code> having <code>no-preference</code> set as the value.</p>
</li>
<li><p>Finally, the navigation accessibility can be improved by providing keyboard shortcuts.</p>
<p>The <code>accesskey</code> attribute accepts a space-separated list of access keys. For example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">accesskey</span>=<span class="string">&quot;s&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Give each of the navigation links a single-letter access key.</p>
<p><em>Note: It is not always advised to use access keys, but they can be useful</em></p>
<p>Well done. You have completed the <em>Accessibility Quiz</em> practice project.</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;freeCodeCamp Accessibility Quiz practice project&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Accessibility Quiz<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTML/CSS Quiz<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">nav</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#student-info&quot;</span> <span class="attr">accesskey</span>=<span class="string">&quot;i&quot;</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#html-questions&quot;</span> <span class="attr">accesskey</span>=<span class="string">&quot;h&quot;</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#css-questions&quot;</span> <span class="attr">accesskey</span>=<span class="string">&quot;c&quot;</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;https://freecodecamp.org/practice-project/accessibility-quiz&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">role</span>=<span class="string">&quot;region&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;student-info&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;student-info&quot;</span>&gt;</span>Student Info<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;student-name&quot;</span>&gt;</span>Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;student-name&quot;</span> <span class="attr">id</span>=<span class="string">&quot;student-name&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;student-email&quot;</span>&gt;</span>Email:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;student-email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;student-email&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;birth-date&quot;</span>&gt;</span>D.O.B.<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(Date of Birth)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birth-date&quot;</span> <span class="attr">id</span>=<span class="string">&quot;birth-date&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">role</span>=<span class="string">&quot;region&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;html-questions&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;html-questions&quot;</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;question-block&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fieldset</span> <span class="attr">class</span>=<span class="string">&quot;question&quot;</span> <span class="attr">name</span>=<span class="string">&quot;html-question-one&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">legend</span>&gt;</span></span><br><span class="line">                The legend element represents a caption for the content of its</span><br><span class="line">                parent fieldset element</span><br><span class="line">              <span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;answers-list&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;q1-a1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;q1-a1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">                    True</span><br><span class="line">                  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;q1-a2&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;q1-a2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">                    False</span><br><span class="line">                  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;question-block&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fieldset</span> <span class="attr">class</span>=<span class="string">&quot;question&quot;</span> <span class="attr">name</span>=<span class="string">&quot;html-question-two&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">legend</span>&gt;</span></span><br><span class="line">                A label element nesting an input element is required to have a</span><br><span class="line">                for attribute with the same value as the input&#x27;s id</span><br><span class="line">              <span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;answers-list&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;q2-a1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;q2-a1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">                    True</span><br><span class="line">                  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;q2-a2&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;q2-a2&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">                    False</span><br><span class="line">                  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">role</span>=<span class="string">&quot;region&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;css-questions&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;css-questions&quot;</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;formrow&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;question-block&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;customer&quot;</span>&gt;</span>Are you a frontend developer?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;answer&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;customer&quot;</span> <span class="attr">id</span>=<span class="string">&quot;customer&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>Select an option<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;yes&quot;</span>&gt;</span>Yes<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;no&quot;</span>&gt;</span>No<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;question-block&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;css-questions&quot;</span>&gt;</span>Do you have any questions:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;answer&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;css-questions&quot;</span> <span class="attr">name</span>=<span class="string">&quot;css-questions&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;5&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;24&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Who is flexbox...&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Send<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://freecodecamp.org&quot;</span>&gt;</span>freeCodeCamp<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        San Francisco<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        California<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        USA</span><br><span class="line">      <span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">prefers-reduced-motion</span>: no-preference) &#123;</span><br><span class="line">  * &#123;</span><br><span class="line">    scroll-behavior: smooth;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f5f6f7</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#1b1b32</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#1b1b32</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#logo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">max</span>(<span class="number">100px</span>, <span class="number">18vw</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#0a0a23</span>;</span><br><span class="line">  aspect-ratio: <span class="number">35</span> / <span class="number">4</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.4rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f1be32</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="built_in">min</span>(<span class="number">5vw</span>, <span class="number">1.2em</span>);</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">padding-inline-start</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin-block</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dfdfe2</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0.2rem</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.2rem</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#dfdfe2</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#1b1b32</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: inherit;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">10px</span> auto;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">600px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Verdana, Tahoma;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">4px</span> solid <span class="number">#dfdfe2</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.formrow</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> <span class="selector-tag">label</span>, <span class="selector-class">.info</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">55px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.question-block</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;Question #&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.question</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.answers-list</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">40px</span> auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">23px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#d0d0d5</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#3b3b4f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#2a2a40</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span>,</span><br><span class="line"><span class="selector-tag">footer</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dfdfe2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">address</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.3em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sr-only</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: -<span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">clip</span>: <span class="built_in">rect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive Web Dedign(九)</title>
    <url>/responsive-web-dedign-%E4%B9%9D/</url>
    <content><![CDATA[<h1 id="freeCodeCamp-—-Responsive-Web-Dedign"><a href="#freeCodeCamp-—-Responsive-Web-Dedign" class="headerlink" title="freeCodeCamp —- Responsive Web Dedign"></a>freeCodeCamp —- Responsive Web Dedign</h1><hr>
<h4 id="Learn-More-About-CSS-Pseudo-Selectors-By-Building-A-Balance-Sheet"><a href="#Learn-More-About-CSS-Pseudo-Selectors-By-Building-A-Balance-Sheet" class="headerlink" title="Learn More About CSS Pseudo Selectors By Building A Balance Sheet"></a>Learn More About CSS Pseudo Selectors By Building A Balance Sheet</h4><span id="more"></span>

<ol>
<li><p>Set up your HTML with the <code>DOCTYPE</code>, <code>html</code> indicating this document is in English, <code>head</code>, and <code>body</code> elements.</p>
<p>Give your <code>head</code> element the appropriate <code>meta</code> elements for the <code>charset</code> and <code>viewport</code>, a <code>title</code> element with an appropriate title, and a <code>link</code> element for your stylesheet.</p>
</li>
<li><p>Within your <code>body</code> element, nest a <code>section</code> element within a <code>main</code> element.</p>
</li>
<li><p>Within your <code>section</code> element, add an <code>h1</code> element with a nested <code>span</code> element.</p>
</li>
<li><p>Screen readers announce HTML elements based on the document flow. We will eventually want the balance sheet to have a heading of “Balance Sheet” and a subheading of “AcmeWidgetCorp”. However, this order does not make sense if announced by a screen reader.</p>
<p>Give your existing <code>span</code> the <code>class</code> attribute set to <code>flex</code>, and add two <code>span</code> elements within it. Give the first the text <code>AcmeWidgetCorp</code>. Give the second the text <code>Balance Sheet</code>. You will use CSS to reverse the order of the text on the page, but the HTML order will make more sense for a screen reader.</p>
</li>
<li><p>Below your <code>h1</code> element, create a <code>div</code> element. Give it an <code>id</code> attribute set to <code>years</code>. You want this particular element to be hidden from screen readers, so give it the <code>aria-hidden</code> attribute set to <code>true</code>.</p>
</li>
<li><p>Within your <code>div</code> element, add three <code>span</code> elements. Give each of them a <code>class</code> attribute set to <code>year</code>, and add the following text (in order): <code>2019</code>, <code>2020</code>, and <code>2021</code>.</p>
</li>
<li><p>Below your existing <code>div</code> element, add a new <code>div</code> element with a <code>class</code> set to <code>table-wrap</code>. This will be the container for your tables.</p>
<p>Within that, add three <code>table</code> elements. You will be using CSS to style these into a single table, but using separate tables will help screen readers understand the document flow.</p>
</li>
<li><p>HTML tables use the <code>caption</code> element to describe what the table is about. The <code>caption</code> element should always be the first child of a <code>table</code>, but can be positioned with the <code>caption-side</code> CSS property.</p>
<p>Add a <code>caption</code> element to your first <code>table</code>, and give it the text <code>Assets</code>.</p>
</li>
<li><p>The <code>thead</code> and <code>tbody</code> elements are used to indicate which portion of your table is the header, and which portion contains the primary data or content.</p>
<p>Add a <code>thead</code> and <code>tbody</code> to your first <code>table</code>, below the <code>caption</code> element.</p>
</li>
<li><p>The <code>tr</code> element is used to indicate a table row. Add a <code>tr</code> element within your <code>thead</code> element. In your new <code>tr</code> element, add a <code>td</code> element, followed by three <code>th</code> elements.</p>
<p>The <code>td</code> element indicates a data cell, while the <code>th</code> element indicates a header cell.</p>
</li>
<li><p>Within each of your new <code>th</code> elements, nest a <code>span</code> element with the <code>class</code> set to <code>sr-only year</code>. Give them the following text (in order): <code>2019</code>, <code>2020</code>, and <code>2021</code>.</p>
<p>Give your third <code>th</code> element the <code>class</code> attribute set to <code>current</code>.</p>
<p>Leave the <code>td</code> element empty. This element exists only to ensure your table has a four-column layout and associate the headers with the correct columns.</p>
</li>
<li><p>Within your <code>tbody</code> element, add four <code>tr</code> elements. Give the first three a <code>class</code> attribute set to <code>data</code>, and the fourth a <code>class</code> attribute set to <code>total</code>.</p>
</li>
<li><p>In your first <code>tr</code>, add a <code>th</code> element with the text <code>Cash This is the cash we currently have on hand.</code>. Wrap all of that text except <code>Cash</code> in a <code>span</code> element with the <code>class</code> set to <code>description</code>.</p>
<p>Following that, add three <code>td</code> elements with the following text (in order): <code>$25</code>, <code>$30</code>, <code>$28</code>. Give the third <code>td</code> element a <code>class</code> attribute set to <code>current</code>.</p>
</li>
<li><p>In your second <code>tr</code> element, add a <code>th</code> element with the text <code>Checking Our primary transactional account.</code>. Wrap that text, except for <code>Checking</code> , in a <code>span</code> element with the <code>class</code> attribute set to <code>description</code>.</p>
<p>Following that, add three <code>td</code> elements with the following text (in order): <code>$54</code>, <code>$56</code>, <code>$53</code>. Give the third <code>td</code> element a <code>class</code> attribute set to <code>current</code>.</p>
</li>
<li><p>In your third <code>tr</code> element, add a <code>th</code> element with the text <code>Savings Funds set aside for emergencies.</code>. Wrap that text, except for <code>Savings</code> , in a <code>span</code> element with the <code>class</code> attribute set to <code>description</code>.</p>
<p>Following that, add three <code>td</code> elements with the following text (in order): <code>$500</code>, <code>$650</code>, <code>$728</code>. Give the third <code>td</code> element a <code>class</code> attribute set to <code>current</code>.</p>
</li>
<li><p>In your fourth <code>tr</code> element, add a <code>th</code> element with the text <code>Total Assets</code>. Wrap the text <code>Assets</code> in a <code>span</code> element with the <code>class</code> attribute set to <code>sr-only</code>.</p>
<p>Following that, add three <code>td</code> elements with the following text (in order): <code>$579</code>, <code>$736</code>, <code>$809</code>. Give the third <code>td</code> element a <code>class</code> attribute set to <code>current</code>.</p>
</li>
<li><p>Time to move on to your second table. Start by giving it a <code>caption</code> element set to <code>Liabilities</code>. Then add your <code>thead</code> and <code>tbody</code>.</p>
</li>
<li><p>Within your <code>thead</code>, add a <code>tr</code>. Inside that, add a <code>td</code> and three <code>th</code> elements.</p>
</li>
<li><p>Give each <code>th</code> element a <code>span</code> element with the class set to <code>sr-only</code> and the following text, in order: <code>2019</code>, <code>2020</code>, and <code>2021</code>.</p>
</li>
<li><p>Within the <code>tbody</code> element, add four <code>tr</code> elements. Give the first three the <code>class</code> attribute set to <code>data</code>, and the fourth the <code>class</code> attribute set to <code>total</code>.</p>
</li>
<li><p>Within the first <code>tr</code>, add a <code>th</code> element with the text <code>Loans The outstanding balance on our startup loan.</code>. Wrap that text, except for <code>Loans</code> , within a <code>span</code> element with the <code>class</code> set to <code>description</code>.</p>
<p>Add three <code>td</code> elements below that, and give them the following text, in order: <code>$500</code>, <code>$250</code>, and <code>$0</code>. Give the third <code>td</code> element a <code>class</code> set to <code>current</code>.</p>
</li>
<li><p>Within the second <code>tr</code>, add a <code>th</code> element with the text <code>Expenses Annual anticipated expenses, such as payroll.</code>. Wrap that text, except for <code>Expenses</code> , within a <code>span</code> element with the <code>class</code> set to <code>description</code>.</p>
<p>Add three <code>td</code> elements below that, and give them the following text, in order: <code>$200</code>, <code>$300</code>, and <code>$400</code>. Give the third <code>td</code> element a <code>class</code> set to <code>current</code>.</p>
</li>
<li><p>Within the third <code>tr</code>, add a <code>th</code> element with the text <code>Credit The outstanding balance on our credit card.</code>. Wrap that text, except for <code>Credit</code> , within a <code>span</code> element with the <code>class</code> set to <code>description</code>.</p>
<p>Add three <code>td</code> elements below that, and give them the following text, in order: <code>$50</code>, <code>$50</code>, and <code>$75</code>. Give the third <code>td</code> element a <code>class</code> set to <code>current</code>.</p>
</li>
<li><p>In your fourth <code>tr</code> element, add a <code>th</code> element with the text <code>Total Liabilities</code>. Wrap the text <code>Liabilities</code> in a <code>span</code> element with the <code>class</code> attribute set to <code>sr-only</code>.</p>
<p>Following that, add three <code>td</code> elements with the following text (in order): <code>$750</code>, <code>$600</code>, <code>$475</code>. Give the third <code>td</code> element a <code>class</code> attribute set to <code>current</code>.</p>
</li>
<li><p>For your third table, add a <code>caption</code> with the text <code>Net Worth</code>, and set up a table header and table body.</p>
</li>
<li><p>Within your <code>thead</code>, create a <code>tr</code> element. In that, add a <code>td</code> and three <code>th</code> elements. Within each of the <code>th</code> elements, add a <code>span</code> element with the <code>class</code> set to <code>sr-only</code> and the following text, in order: <code>2019</code>, <code>2020</code>, and <code>2021</code>.</p>
</li>
<li><p>Within the <code>tbody</code>, add a <code>tr</code> with the <code>class</code> set to <code>total</code>. In that, add a <code>th</code> with the text <code>Total Net Worth</code>, and wrap <code>Net Worth</code> in a <code>span</code> with the <code>class</code> set to <code>sr-only</code>.</p>
<p>Then add three <code>td</code> elements, giving the third a <code>class</code> set to <code>current</code>, and giving each the following text: <code>$-171</code>, <code>$136</code>, <code>$334</code>.</p>
</li>
<li><p>Time to style your table. Start by resetting the box model. Create an <code>html</code> selector and give it a <code>box-sizing</code> property set to <code>border-box</code>.</p>
</li>
<li><p>Create a <code>body</code> selector and give it a <code>font-family</code> property set to <code>sans-serif</code> and a <code>color</code> set to <code>#0a0a23</code>.</p>
</li>
<li><p>Before you get too far into your styling, you should make use of the <code>sr-only</code> class. You can use CSS to make elements with this class completely hidden from the visual page, but still be announced by screen readers.</p>
<p>The CSS you are about to write is a common set of properties used to ensure elements are completely hidden visually.</p>
<p>The <code>span[class~=&quot;sr-only&quot;]</code> selector will select any <code>span</code> element whose <code>class</code> <em>includes</em> <code>sr-only</code>. Create that selector, and give it a <code>border</code> property set to <code>0</code>.</p>
</li>
<li><p>The CSS <code>clip</code> property is used to define the visible portions of an element. Set the <code>span[class~=&quot;sr-only&quot;]</code> selector to have a <code>clip</code> property of <code>rect(1px, 1px, 1px, 1px)</code>.</p>
<p>The <code>clip-path</code> property determines the shape the <code>clip</code> property should take. Set the <code>clip-path</code> property to the value of <code>inset(50%)</code>, forming the clip-path into a rectangle within the element.</p>
</li>
<li><p>Now you need to size these elements down. Give your <code>span[class~=&quot;sr-only&quot;]</code> selector a <code>width</code> and <code>height</code> property set to <code>1px</code>.5</p>
</li>
<li><p>To prevent the text content from overflowing, give your <code>span[class~=&quot;sr-only&quot;]</code> selector an <code>overflow</code> property set to <code>hidden</code> and a <code>white-space</code> property set to <code>nowrap</code>.</p>
</li>
<li><p>Finally, you need to take these hidden elements out of the document flow. Give the <code>span[class~=&quot;sr-only&quot;]</code> selector a <code>position</code> property set to <code>absolute</code>, a <code>padding</code> property set to <code>0</code>, and a <code>margin</code> property set to <code>-1px</code>. This will ensure that not only are they no longer visible, but they are not even within the page view.</p>
</li>
<li><p>Time to style your table heading. Create an <code>h1</code> selector. Give it a <code>max-width</code> property set to <code>37.25rem</code>, a <code>margin</code> property set to <code>0 auto</code>, and a <code>padding</code> property set to <code>1.5rem 1.25rem</code>.</p>
</li>
<li><p>Target your flex container with an <code>h1 .flex</code> selector. Give it a <code>display</code> property set to <code>flex</code> to enable the flexbox layout. Then set the <code>flex-direction</code> property to <code>column-reverse</code> - this will display the nested elements from bottom to top. Finally, set the <code>gap</code> property to <code>1rem</code> to create some space between the elements.</p>
</li>
<li><p>The <code>:first-of-type</code> pseudo-selector is used to target the first element that matches the selector. Create an <code>h1 .flex span:first-of-type</code> selector to target the first <code>span</code> element in your <code>.flex</code> container. Remember that your <code>span</code> elements are reversed, visually, so this will appear to be the second element on the page.</p>
<p>Give your new selector a <code>font-size</code> property of <code>0.7em</code> to make it look like a sub-heading.</p>
</li>
<li><p>The <code>:last-of-type</code> pseudo-selector does the exact opposite - it targets the last element that matches the selector. Create an <code>h1 .flex span:last-of-type</code> selector to target the last <code>span</code> in your flex container, and give it a <code>font-size</code> property set to <code>1.2em</code> to make it look like a header.</p>
</li>
<li><p>You wrapped your table in a section element - now you can style that to give your table a border. Create a <code>section</code> selector, and give it a <code>max-width</code> property set to <code>40rem</code> for responsive design. Set the <code>margin</code> property to <code>0 auto</code> to center it, and set the <code>border</code> property to <code>2px solid #d0d0d5</code>.</p>
</li>
<li><p>The last part of your table heading is your years. Create a <code>#years</code> selector, and enable flexbox. Justify the content to the end of the flex direction, and make the element sticky. Fix it to the top of its container with <code>top: 0</code>.</p>
</li>
<li><p>Now apply some color to your <code>#years</code>. Make the text <code>#fff</code> and the background <code>#0a0a23</code>.</p>
</li>
<li><p>The <code>calc()</code> function is a CSS function that allows you to calculate a value based on other values. For example, you can use it to calculate the width of the viewport minus the margin of an element:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.example</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">20px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Give <code>#years</code> a <code>margin</code> of <code>0 -2px</code>, and a <code>padding</code> set to <code>0.5rem calc(1.25rem + 2px) 0.5rem 0</code>.</p>
</li>
<li><p>Adding position <code>sticky</code> moved the element into its own stack. To ensure your <code>#years</code> element does not get hidden by different stacks, add a <code>z-index</code> property set to <code>999</code> in the <code>#years</code> rule.</p>
</li>
<li><p>Style the text within your <code>#years</code> element by creating a <code>#years span[class]</code> selector. The <code>span[class]</code> syntax will target any <code>span</code> element that has a <code>class</code> attribute set, regardless of the attribute’s value.</p>
<p>Give your new selector a <code>bold</code> font, a width of <code>4.5rem</code>, and text aligned to the right.</p>
</li>
<li><p>You wrapped your tables in a container with the <code>table-wrap</code> class. Create a selector for that class, and give it a <code>padding</code> set to <code>0 0.75rem 1.5rem 0.75rem</code>.</p>
</li>
<li><p>Before you start diving in to the table itself, your <code>span</code> elements are currently bolded. Create a <code>span:not(.sr-only)</code> selector and give it a <code>font-weight</code> property set to <code>normal</code>.</p>
<p>The <code>:not()</code> pseudo-selector is used to target all elements that do not match the selector - in this case, any of your <code>span</code> elements that do not have the <code>sr-only</code> class. This ensures that your earlier rules for the <code>span[class~=&quot;sr-only&quot;]</code> selector are not overwritten.</p>
</li>
<li><p>Rather than having to constantly double-check you are not overwriting your earlier properties, you can use the <code>!important</code> keyword to ensure these properties are always applied, regardless of order or specificity.</p>
<p>Give each property in your <code>span[class~=&quot;sr-only&quot;]</code> selector an <code>!important</code> keyword. Do not change any of the values.</p>
</li>
<li><p>Now that you have added the <code>!important</code> keyword, you can remove the <code>:not(.sr-only)</code> from your <code>span</code> selector.</p>
</li>
<li><p>Create a <code>table</code> selector to target your tables. Set the <code>border-collapse</code> property to <code>collapse</code>, which will allow cell borders to collapse into a single border, instead of a border around each cell. Also set the <code>border</code> property to <code>0</code> to hide the borders themselves.</p>
</li>
<li><p>Create a <code>table</code> selector to target your tables. Set the <code>border-collapse</code> property to <code>collapse</code>, which will allow cell borders to collapse into a single border, instead of a border around each cell. Also set the <code>border</code> property to <code>0</code> to hide the borders themselves.</p>
</li>
<li><p>Next you need to style your <code>caption</code> elements to look more like headers. Create a <code>table caption</code> selector. Set the text to have a color of <code>#356eaf</code>, a size of <code>1.3em</code>, and a normal weight.</p>
</li>
<li><p>Now give the captions an absolute position, and shift them <code>-2.25rem</code> from the top and <code>0.5rem</code> from the left.</p>
</li>
<li><p>Create a selector to target your <code>td</code> elements within your table body. Give them a width to fill the viewport, with a minimum and maximum of <code>4rem</code>. This approach ensures that the width is fixed, whereas setting <code>width</code> specifically would allow the elements to shrink to the container.5</p>
</li>
<li><p>Now target the <code>th</code> elements within your table body, and give them a width of the entire container, less <code>12rem</code>.</p>
</li>
<li><p>The <code>[attribute=&quot;value&quot;]</code> selector targets any element that has an attribute with a specific value. Create a <code>tr[class=&quot;total&quot;]</code> selector to target specifically your <code>tr</code> elements with the <code>total</code> class. Give it a bottom border of <code>4px double #0a0a23</code> and make the font bold.</p>
</li>
<li><p>Using the same selector syntax, target the <code>th</code> elements within your table rows where the <code>class</code> is <code>total</code>. Align the text to the left, and give them a padding of <code>0.5rem 0 0.25rem 0.5rem</code>.</p>
</li>
<li><p>The key difference between <code>tr[class=&quot;total&quot;]</code> and <code>tr.total</code> is that the first will select <code>tr</code> elements where the <em>only</em> class is <code>total</code>. The second will select <code>tr</code> elements where the class <em>includes</em> <code>total</code>.</p>
<p>In your case, <code>tr.total</code> will work. You can use this selector to target all <code>td</code> elements within your <code>.total</code> rows. Align the text to the right, and give them a padding of <code>0 0.25rem</code>.</p>
</li>
<li><p>The <code>:nth-of-type()</code> pseudo-selector is used to target specific elements based on their order among siblings of the same type. Use this pseudo-selector to target the third <code>td</code> element within your <code>total</code> table rows. Give it a right padding of <code>0.5rem</code>.</p>
</li>
<li><p>Give your <code>tr.total</code> elements a hover effect that changes the background to <code>#99c9ff</code>.</p>
</li>
<li><p>Select your <code>td</code> elements with the <code>class</code> value of <code>current</code>, and make the font italic.</p>
</li>
<li><p>Select the <code>tr</code> elements with the <code>class</code> set to <code>data</code>. Give them a background image of <code>linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem)</code>.</p>
</li>
<li><p>Select the <code>th</code> elements within your <code>tr.data</code> elements. Align the text to the left, and give them a top padding of <code>0.3rem</code> and a left padding of <code>0.5rem</code>.</p>
</li>
<li><p>Create a <code>tr.data th .description</code> selector to target the elements with the <code>class</code> set to <code>description</code> that are within your <code>th</code> elements in your <code>.data</code> table rows. Give them a block display, make the text italic with a normal weight, and position them with a <code>padding</code> set to <code>1rem 0 0.75rem</code> and a right margin of <code>-13.5rem</code>.</p>
</li>
<li><p>Your <code>span</code> elements now all have more specific styling, which means you can remove your <code>span</code> rule.</p>
</li>
<li><p>Your dollar amounts are currently misaligned. Create a selector to target the <code>td</code> elements within your <code>tr.data</code> elements. Vertically align the text to the top, horizontally align the text to the right, and set the padding to <code>0.3rem 0.25rem 0</code>.</p>
</li>
<li><p>Create another selector for the <code>td</code> elements within your <code>tr.data</code> element, but specifically select the last one. Give this a right padding of <code>0.5rem</code>.</p>
<p>With this, your balance sheet is complete!</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Balance Sheet<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>AcmeWidgetCorp<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Balance Sheet<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;years&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;year&quot;</span>&gt;</span>2019<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;year&quot;</span>&gt;</span>2020<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;year&quot;</span>&gt;</span>2021<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;table-wrap&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Assets<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only year&quot;</span>&gt;</span>2019<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only year&quot;</span>&gt;</span>2020<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only year&quot;</span>&gt;</span>2021<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;data&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Cash <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;description&quot;</span>&gt;</span>This is the cash we currently have on hand.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$25<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$30<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$28<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;data&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Checking <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;description&quot;</span>&gt;</span>Our primary transactional account.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$54<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$56<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$53<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;data&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Savings <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;description&quot;</span>&gt;</span>Funds set aside for emergencies.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$500<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$650<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$728<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Total <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Assets<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$579<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$736<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$809<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Liabilities<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>2019<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>2020<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>2021<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;data&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Loans <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;description&quot;</span>&gt;</span>The outstanding balance on our startup loan.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$500<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$250<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$0<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;data&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Expenses <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;description&quot;</span>&gt;</span>Annual anticipated expenses, such as payroll.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$400<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;data&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Credit <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;description&quot;</span>&gt;</span>The outstanding balance on our credit card.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$50<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$50<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$75<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Total <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Liabilities<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$750<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$600<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$475<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Net Worth<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>2019<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>2020<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>2021<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Total <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Net Worth<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$-171<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$136<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>$334<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">span</span><span class="selector-attr">[class~=<span class="string">&quot;sr-only&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">clip</span>: <span class="built_in">rect</span>(<span class="number">1px</span>, <span class="number">1px</span>, <span class="number">1px</span>, <span class="number">1px</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">clip-path</span>: <span class="built_in">inset</span>(<span class="number">50%</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin</span>: -<span class="number">1px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0a0a23</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">37.25rem</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1.5rem</span> <span class="number">1.25rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> <span class="selector-class">.flex</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column-reverse;</span><br><span class="line">  <span class="attribute">gap</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> <span class="selector-class">.flex</span> <span class="selector-tag">span</span><span class="selector-pseudo">:first</span>-of-type &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.7em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> <span class="selector-class">.flex</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-of-type</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">40rem</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#d0d0d5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#years</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">  <span class="attribute">position</span>: sticky;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#0a0a23</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="built_in">calc</span>(<span class="number">1.25rem</span> + <span class="number">2px</span>) <span class="number">0.5rem</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#years</span> <span class="selector-tag">span</span><span class="selector-attr">[class]</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">4.5rem</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.table-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.75rem</span> <span class="number">1.5rem</span> <span class="number">0.75rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">3rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">caption</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#356eaf</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">2.25rem</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tbody</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">4rem</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">4rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tbody</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">12rem</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-attr">[class=<span class="string">&quot;total&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">4px</span> double <span class="number">#0a0a23</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-attr">[class=<span class="string">&quot;total&quot;</span>]</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="number">0</span> <span class="number">0.25rem</span> <span class="number">0.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-class">.total</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.25rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-class">.total</span> <span class="selector-tag">td</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">0.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-class">.total</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#99c9ff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span><span class="selector-class">.current</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-class">.data</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to bottom, <span class="number">#dfdfe2</span> <span class="number">1.845rem</span>, white <span class="number">1.845rem</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-class">.data</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">0.3rem</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-class">.data</span> <span class="selector-tag">th</span> <span class="selector-class">.description</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span> <span class="number">0</span> <span class="number">0.75rem</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: -<span class="number">13.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">tr</span><span class="selector-class">.data</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: top;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.3rem</span> <span class="number">0.25rem</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>freeCodeCamp</category>
        <category>Responsive Web Dedign</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>前端</tag>
      </tags>
  </entry>
</search>
